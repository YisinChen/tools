升級時間：2022/03/18 14:20

更新 apt
sudo apt update

查看各版本
sudo apt-cache madison gitlab-ce

指令
sudo apt install gitlab-ce=13.12.15-ce.0

log
======================


it@IT-Gitlab:~/gitlab_backup$ sudo apt install gitlab-ce=13.12.15-ce.0
正在讀取套件清單... 完成
正在重建相依關係
正在讀取狀態資料... 完成
The following packages were automatically installed and are no longer required:
  linux-headers-4.15.0-101 linux-headers-4.15.0-101-generic linux-headers-4.15.0-106 linux-headers-4.15.0-106-generic
  linux-headers-4.15.0-107 linux-headers-4.15.0-107-generic linux-headers-4.15.0-112 linux-headers-4.15.0-112-generic
  linux-headers-4.15.0-115 linux-headers-4.15.0-115-generic linux-headers-4.15.0-117 linux-headers-4.15.0-117-generic
  linux-headers-4.15.0-118 linux-headers-4.15.0-118-generic linux-headers-4.15.0-120 linux-headers-4.15.0-120-generic
  linux-headers-4.15.0-122 linux-headers-4.15.0-122-generic linux-headers-4.15.0-123 linux-headers-4.15.0-123-generic
  linux-headers-4.15.0-126 linux-headers-4.15.0-126-generic linux-headers-4.15.0-128 linux-headers-4.15.0-128-generic
  linux-headers-4.15.0-132 linux-headers-4.15.0-132-generic linux-headers-4.15.0-133 linux-headers-4.15.0-133-generic
  linux-headers-4.15.0-136 linux-headers-4.15.0-136-generic linux-headers-4.15.0-137 linux-headers-4.15.0-137-generic
  linux-headers-4.15.0-139 linux-headers-4.15.0-139-generic linux-headers-4.15.0-29 linux-headers-4.15.0-29-generic
  linux-headers-4.15.0-43 linux-headers-4.15.0-43-generic linux-headers-4.15.0-45 linux-headers-4.15.0-45-generic
  linux-headers-4.15.0-46 linux-headers-4.15.0-46-generic linux-headers-4.15.0-47 linux-headers-4.15.0-47-generic
  linux-headers-4.15.0-50 linux-headers-4.15.0-50-generic linux-headers-4.15.0-51 linux-headers-4.15.0-51-generic
  linux-headers-4.15.0-52 linux-headers-4.15.0-52-generic linux-headers-4.15.0-54 linux-headers-4.15.0-54-generic
  linux-headers-4.15.0-55 linux-headers-4.15.0-55-generic linux-headers-4.15.0-58 linux-headers-4.15.0-58-generic
  linux-headers-4.15.0-60 linux-headers-4.15.0-60-generic linux-headers-4.15.0-62 linux-headers-4.15.0-62-generic
  linux-headers-4.15.0-64 linux-headers-4.15.0-64-generic linux-headers-4.15.0-65 linux-headers-4.15.0-65-generic
  linux-headers-4.15.0-66 linux-headers-4.15.0-66-generic linux-headers-4.15.0-69 linux-headers-4.15.0-69-generic
  linux-headers-4.15.0-70 linux-headers-4.15.0-70-generic linux-headers-4.15.0-72 linux-headers-4.15.0-72-generic
  linux-headers-4.15.0-74 linux-headers-4.15.0-74-generic linux-headers-4.15.0-76 linux-headers-4.15.0-76-generic
  linux-headers-4.15.0-88 linux-headers-4.15.0-88-generic linux-headers-4.15.0-91 linux-headers-4.15.0-91-generic
  linux-headers-4.15.0-96 linux-headers-4.15.0-96-generic linux-headers-4.15.0-99 linux-headers-4.15.0-99-generic
  linux-image-4.15.0-101-generic linux-image-4.15.0-106-generic linux-image-4.15.0-107-generic linux-image-4.15.0-112-generic
  linux-image-4.15.0-115-generic linux-image-4.15.0-117-generic linux-image-4.15.0-118-generic linux-image-4.15.0-120-generic
  linux-image-4.15.0-122-generic linux-image-4.15.0-123-generic linux-image-4.15.0-126-generic linux-image-4.15.0-128-generic
  linux-image-4.15.0-132-generic linux-image-4.15.0-133-generic linux-image-4.15.0-136-generic linux-image-4.15.0-137-generic
  linux-image-4.15.0-139-generic linux-image-4.15.0-29-generic linux-image-4.15.0-43-generic linux-image-4.15.0-45-generic
  linux-image-4.15.0-46-generic linux-image-4.15.0-47-generic linux-image-4.15.0-50-generic linux-image-4.15.0-51-generic
  linux-image-4.15.0-52-generic linux-image-4.15.0-54-generic linux-image-4.15.0-55-generic linux-image-4.15.0-58-generic
  linux-image-4.15.0-60-generic linux-image-4.15.0-62-generic linux-image-4.15.0-64-generic linux-image-4.15.0-65-generic
  linux-image-4.15.0-66-generic linux-image-4.15.0-69-generic linux-image-4.15.0-70-generic linux-image-4.15.0-72-generic
  linux-image-4.15.0-74-generic linux-image-4.15.0-76-generic linux-image-4.15.0-88-generic linux-image-4.15.0-91-generic
  linux-image-4.15.0-96-generic linux-image-4.15.0-99-generic linux-modules-4.15.0-101-generic linux-modules-4.15.0-106-generic
  linux-modules-4.15.0-107-generic linux-modules-4.15.0-112-generic linux-modules-4.15.0-115-generic linux-modules-4.15.0-117-generic
  linux-modules-4.15.0-118-generic linux-modules-4.15.0-120-generic linux-modules-4.15.0-122-generic linux-modules-4.15.0-123-generic
  linux-modules-4.15.0-126-generic linux-modules-4.15.0-128-generic linux-modules-4.15.0-132-generic linux-modules-4.15.0-133-generic
  linux-modules-4.15.0-136-generic linux-modules-4.15.0-137-generic linux-modules-4.15.0-139-generic linux-modules-4.15.0-29-generic
  linux-modules-4.15.0-43-generic linux-modules-4.15.0-45-generic linux-modules-4.15.0-46-generic linux-modules-4.15.0-47-generic
  linux-modules-4.15.0-50-generic linux-modules-4.15.0-51-generic linux-modules-4.15.0-52-generic linux-modules-4.15.0-54-generic
  linux-modules-4.15.0-55-generic linux-modules-4.15.0-58-generic linux-modules-4.15.0-60-generic linux-modules-4.15.0-62-generic
  linux-modules-4.15.0-64-generic linux-modules-4.15.0-65-generic linux-modules-4.15.0-66-generic linux-modules-4.15.0-69-generic
  linux-modules-4.15.0-70-generic linux-modules-4.15.0-72-generic linux-modules-4.15.0-74-generic linux-modules-4.15.0-76-generic
  linux-modules-4.15.0-88-generic linux-modules-4.15.0-91-generic linux-modules-4.15.0-96-generic linux-modules-4.15.0-99-generic
  linux-modules-extra-4.15.0-101-generic linux-modules-extra-4.15.0-106-generic linux-modules-extra-4.15.0-107-generic
  linux-modules-extra-4.15.0-112-generic linux-modules-extra-4.15.0-115-generic linux-modules-extra-4.15.0-117-generic
  linux-modules-extra-4.15.0-118-generic linux-modules-extra-4.15.0-120-generic linux-modules-extra-4.15.0-122-generic
  linux-modules-extra-4.15.0-123-generic linux-modules-extra-4.15.0-126-generic linux-modules-extra-4.15.0-128-generic
  linux-modules-extra-4.15.0-132-generic linux-modules-extra-4.15.0-133-generic linux-modules-extra-4.15.0-136-generic
  linux-modules-extra-4.15.0-137-generic linux-modules-extra-4.15.0-139-generic linux-modules-extra-4.15.0-29-generic
  linux-modules-extra-4.15.0-43-generic linux-modules-extra-4.15.0-45-generic linux-modules-extra-4.15.0-46-generic
  linux-modules-extra-4.15.0-47-generic linux-modules-extra-4.15.0-50-generic linux-modules-extra-4.15.0-51-generic
  linux-modules-extra-4.15.0-52-generic linux-modules-extra-4.15.0-54-generic linux-modules-extra-4.15.0-55-generic
  linux-modules-extra-4.15.0-58-generic linux-modules-extra-4.15.0-60-generic linux-modules-extra-4.15.0-62-generic
  linux-modules-extra-4.15.0-64-generic linux-modules-extra-4.15.0-65-generic linux-modules-extra-4.15.0-66-generic
  linux-modules-extra-4.15.0-69-generic linux-modules-extra-4.15.0-70-generic linux-modules-extra-4.15.0-72-generic
  linux-modules-extra-4.15.0-74-generic linux-modules-extra-4.15.0-76-generic linux-modules-extra-4.15.0-88-generic
  linux-modules-extra-4.15.0-91-generic linux-modules-extra-4.15.0-96-generic linux-modules-extra-4.15.0-99-generic
Use 'sudo apt autoremove' to remove them.
下列套件將會被升級：
  gitlab-ce
升級 1 個，新安裝 0 個，移除 0 個，有 88 個未被升級。
需要下載 0 B/904 MB 的套件檔。
此操作完成之後，會多佔用 517 MB 的磁碟空間。
（讀取資料庫 ... 目前共安裝了 1815733 個檔案和目錄。）
Preparing to unpack .../gitlab-ce_13.12.15-ce.0_amd64.deb ...
gitlab preinstall: Automatically backing up only the GitLab SQL database (excluding everything else!)
2022-03-18 14:20:17 +0800 -- Dumping database ...
Dumping PostgreSQL database gitlabhq_production ... [DONE]
2022-03-18 14:20:19 +0800 -- done
2022-03-18 14:20:19 +0800 -- Dumping repositories ...
2022-03-18 14:20:19 +0800 -- [SKIPPED]
2022-03-18 14:20:19 +0800 -- Dumping uploads ...
2022-03-18 14:20:19 +0800 -- [SKIPPED]
2022-03-18 14:20:19 +0800 -- Dumping builds ...
2022-03-18 14:20:19 +0800 -- [SKIPPED]
2022-03-18 14:20:19 +0800 -- Dumping artifacts ...
2022-03-18 14:20:19 +0800 -- [SKIPPED]
2022-03-18 14:20:19 +0800 -- Dumping pages ...
2022-03-18 14:20:19 +0800 -- [SKIPPED]
2022-03-18 14:20:19 +0800 -- Dumping lfs objects ...
2022-03-18 14:20:19 +0800 -- [SKIPPED]
2022-03-18 14:20:19 +0800 -- Dumping container registry images ...
2022-03-18 14:20:19 +0800 -- [DISABLED]
Creating backup archive: 1647584419_2022_03_18_13.0.14_gitlab_backup.tar ... done
Uploading backup archive to remote storage  ... skipped
Deleting tmp directories ... done
done
Deleting old backups ... skipping
Warning: Your gitlab.rb and gitlab-secrets.json files contain sensitive data
and are not included in this backup. You will need these files to restore a backup.
Please back them up manually.
Backup task is done.
gitlab preinstall: Automatically backing up /etc/gitlab
Running configuration backup
Creating configuration backup archive: gitlab_config_1647584419_2022_03_18.tar
/etc/gitlab/
/etc/gitlab/gitlab.rb.20190612
/etc/gitlab/gitlab.rb
/etc/gitlab/gitlab.rb.20201123
/etc/gitlab/gitlab.rb.20210111
/etc/gitlab/gitlab.rb.20190104
/etc/gitlab/gitlab-secrets.json
/etc/gitlab/trusted-certs/
/etc/gitlab/gitlab.rb.20190408
Configuration backup archive complete: /etc/gitlab/config_backup/gitlab_config_1647584419_2022_03_18.tar
Unpacking gitlab-ce (13.12.15-ce.0) over (13.0.14-ce.0) ...
設定 gitlab-ce (13.12.15-ce.0) ...
Checking PostgreSQL executables:Starting Chef Infra Client, version 15.14.0
resolving cookbooks for run list: ["gitlab::config", "postgresql::bin"]
Synchronizing Cookbooks:
  - gitlab (0.0.1)
  - postgresql (0.1.0)
  - package (0.1.0)
  - logrotate (0.1.0)
  - redis (0.1.0)
  - registry (0.1.0)
  - monitoring (0.1.0)
  - mattermost (0.1.0)
  - gitaly (0.1.0)
  - praefect (0.1.0)
  - consul (0.1.0)
  - gitlab-kas (0.1.0)
  - acme (4.1.1)
  - gitlab-pages (0.1.0)
  - nginx (0.1.0)
  - letsencrypt (0.1.0)
  - crond (0.1.0)
  - runit (5.1.3)
Installing Cookbook Gems:
Compiling Cookbooks...
Converging 4 resources
Recipe: postgresql::bin
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run
    - execute the ruby block Link postgresql bin files to the correct version
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)

Running handlers:
Running handlers complete
Chef Infra Client finished, 1/4 resources updated in 06 seconds
Checking PostgreSQL executables: OK
Checking for an omnibus managed postgresql: OKlable and attempting automatic upgrade to it:
Checking if postgresql['version'] is set: OK
Checking if we already upgraded: NOT OK
Checking for a newer version of PostgreSQL to install
Upgrading PostgreSQL to 12.6
Checking if PostgreSQL bin files are symlinked to the expected location: OK
Toggling deploy page:cp /opt/gitlab/embedded/service/gitlab-rails/public/deploy.html /opt/gitlab/embedded/service/gitlab-rails/public/index.html
Toggling deploy page: OK
Toggling services:ok: down: alertmanager: 0s, normally up
ok: down: gitaly: 0s, normally up
ok: down: gitlab-exporter: 0s, normally up
ok: down: grafana: 1s, normally up
ok: down: logrotate: 0s, normally up
ok: down: node-exporter: 0s, normally up
ok: down: postgres-exporter: 0s, normally up
ok: down: prometheus: 0s, normally up
ok: down: redis-exporter: 0s, normally up
ok: down: sidekiq: 1s, normally up
Toggling services: OK
Running stop on postgresql:ok: down: postgresql: 0s, normally up
Running stop on postgresql: OK
Symlink correct version of binaries: OK
Creating temporary data directory: OK
Initializing the new database: OK
Upgrading the data: OK
Move the old data directory out of the way: OK
Rename the new data directory: OK
Saving the old version information: OK
Configuring PostgreSQL
Starting Chef Infra Client, version 15.14.0
resolving cookbooks for run list: ["gitlab::config", "postgresql::enable"]
Synchronizing Cookbooks:
  - logrotate (0.1.0)
  - registry (0.1.0)
  - consul (0.1.0)
  - praefect (0.1.0)
  - gitlab-pages (0.1.0)
  - letsencrypt (0.1.0)
  - gitlab (0.0.1)
  - runit (5.1.3)
  - acme (4.1.1)
  - gitlab-kas (0.1.0)
  - postgresql (0.1.0)
  - gitaly (0.1.0)
  - monitoring (0.1.0)
  - redis (0.1.0)
  - nginx (0.1.0)
  - package (0.1.0)
  - mattermost (0.1.0)
  - crond (0.1.0)
Installing Cookbook Gems:
Compiling Cookbooks...
Converging 27 resources
Recipe: postgresql::bin
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)
Recipe: postgresql::user
  * account[Postgresql user and group] action create
    * group[Postgresql user and group] action create (up to date)
    * linux_user[Postgresql user and group] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)
Recipe: package::sysctl
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: postgresql::sysctl
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)
    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: postgresql::enable
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/log/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * link[/var/opt/gitlab/postgresql/data] action create (skipped due to not_if)
  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)
  * file[/var/opt/gitlab/postgresql/data/server.crt] action create
    - create new file /var/opt/gitlab/postgresql/data/server.crt
    - update content in file /var/opt/gitlab/postgresql/data/server.crt from none to 32f10e
    - suppressed sensitive resource
    - change mode from '' to '0400'
    - change owner from '' to 'gitlab-psql'
    - change group from '' to 'gitlab-psql'
  * file[/var/opt/gitlab/postgresql/data/server.key] action create
    - create new file /var/opt/gitlab/postgresql/data/server.key
    - update content in file /var/opt/gitlab/postgresql/data/server.key from none to f1cd84
    - suppressed sensitive resource
    - change mode from '' to '0400'
    - change owner from '' to 'gitlab-psql'
    - change group from '' to 'gitlab-psql'
  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create
      - update content in file /var/opt/gitlab/postgresql/data/postgresql.conf from f9e264 to 7847de
      --- /var/opt/gitlab/postgresql/data/postgresql.conf       2022-03-18 14:22:49.156346318 +0800
      +++ /var/opt/gitlab/postgresql/data/.chef-postgresql20220318-1292-rll8ii.conf     2022-03-18 14:23:08.943819073 +0800
      @@ -1,3 +1,7 @@
      +# This file is managed by gitlab-ctl. Manual changes will be
      +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
      +# and run `sudo gitlab-ctl reconfigure`.
      +
       # -----------------------------
       # PostgreSQL configuration file
       # -----------------------------
      @@ -16,9 +20,9 @@
       #
       # This file is read on server startup and when the server receives a SIGHUP
       # signal.  If you edit the file on a running system, you have to SIGHUP the
      -# server for the changes to take effect, run "pg_ctl reload", or execute
      -# "SELECT pg_reload_conf()".  Some parameters, which are marked below,
      -# require a server shutdown and restart to take effect.
      +# server for the changes to take effect, or use "pg_ctl reload".  Some
      +# parameters, which are marked below, require a server shutdown and restart to
      +# take effect.
       #
       # Any parameter can also be given as a command-line option to the server, e.g.,
       # "postgres -c log_connections=on".  Some parameters can be changed at run time
      @@ -27,7 +31,7 @@
       # Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
       #                MB = megabytes                     s   = seconds
       #                GB = gigabytes                     min = minutes
      -#                TB = terabytes                     h   = hours
      +#                                                   h   = hours
       #                                                   d   = days


      @@ -38,16 +42,16 @@
       # The default values of these variables are driven from the -D command-line
       # option or PGDATA environment variable, represented here as ConfigDir.

      -#data_directory = 'ConfigDir'            # use data in another directory
      -                                 # (change requires restart)
      -#hba_file = 'ConfigDir/pg_hba.conf'      # host-based authentication file
      -                                 # (change requires restart)
      -#ident_file = 'ConfigDir/pg_ident.conf'  # ident configuration file
      -                                 # (change requires restart)
      +#data_directory = 'ConfigDir'   # use data in another directory
      +          # (change requires restart)
      +#hba_file = 'ConfigDir/pg_hba.conf' # host-based authentication file
      +          # (change requires restart)
      +#ident_file = 'ConfigDir/pg_ident.conf' # ident configuration file
      +          # (change requires restart)

       # If external_pid_file is not explicitly set, no extra PID file is written.
      -#external_pid_file = ''                  # write an extra PID file
      -                                 # (change requires restart)
      +#external_pid_file = '(none)'   # write an extra PID file
      +          # (change requires restart)


       #------------------------------------------------------------------------------
      @@ -56,60 +60,57 @@

       # - Connection Settings -

      -#listen_addresses = 'localhost'          # what IP address(es) to listen on;
      -                                 # comma-separated list of addresses;
      -                                 # defaults to 'localhost'; use '*' for all
      -                                 # (change requires restart)
      -#port = 5432                             # (change requires restart)
      -max_connections = 100                    # (change requires restart)
      -#superuser_reserved_connections = 3      # (change requires restart)
      -#unix_socket_directories = '/tmp'        # comma-separated list of directories
      -                                 # (change requires restart)
      -#unix_socket_group = ''                  # (change requires restart)
      -#unix_socket_permissions = 0777          # begin with 0 to use octal notation
      -                                 # (change requires restart)
      -#bonjour = off                           # advertise server via Bonjour
      -                                 # (change requires restart)
      -#bonjour_name = ''                       # defaults to the computer name
      -                                 # (change requires restart)
      +listen_addresses = ''    # what IP address(es) to listen on;
      +          # comma-separated list of addresses;
      +          # defaults to 'localhost', '*' = all
      +          # (change requires restart)
      +port = 5432        # (change requires restart)
      +max_connections = 200      # (change requires restart)
      +# Note:  Increasing max_connections costs ~400 bytes of shared memory per
      +# connection slot, plus lock space (see max_locks_per_transaction).
      +#superuser_reserved_connections = 3 # (change requires restart)
      +unix_socket_directories = '/var/opt/gitlab/postgresql'   # (change requires restart)
      +#unix_socket_group = ''     # (change requires restart)
      +#unix_socket_permissions = 0777   # begin with 0 to use octal notation
      +          # (change requires restart)
      +#bonjour = off        # advertise server via Bonjour
      +          # (change requires restart)
      +#bonjour_name = ''      # defaults to the computer name
      +          # (change requires restart)

      -# - TCP settings -
      -# see "man 7 tcp" for details
      +# - Security and Authentication -

      -#tcp_keepalives_idle = 0         # TCP_KEEPIDLE, in seconds;
      -                                 # 0 selects the system default
      -#tcp_keepalives_interval = 0             # TCP_KEEPINTVL, in seconds;
      -                                 # 0 selects the system default
      -#tcp_keepalives_count = 0                # TCP_KEEPCNT;
      -                                 # 0 selects the system default
      -#tcp_user_timeout = 0                    # TCP_USER_TIMEOUT, in milliseconds;
      -                                 # 0 selects the system default
      +#authentication_timeout = 1min    # 1s-600s

      -# - Authentication -
      +# change requires restart
      +ssl = on

      -#authentication_timeout = 1min           # 1s-600s
      -#password_encryption = md5               # md5 or scram-sha-256
      +# allowed SSL ciphers
      +ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL:!SSLv3:!TLSv1'
      +
      +ssl_cert_file = 'server.crt'
      +ssl_key_file = 'server.key'
      +ssl_ca_file = '/opt/gitlab/embedded/ssl/certs/cacert.pem'
      +
      +
      +#ssl_renegotiation_limit = 512MB  # amount of data between renegotiations
      +#password_encryption = on
       #db_user_namespace = off

      -# GSSAPI using Kerberos
      -#krb_server_keyfile = 'FILE:${sysconfdir}/krb5.keytab'
      +# Kerberos and GSSAPI
      +#krb_server_keyfile = ''
      +#krb_srvname = 'postgres'   # (Kerberos only)
       #krb_caseins_users = off

      -# - SSL -
      +# - TCP Keepalives -
      +# see "man 7 tcp" for details

      -#ssl = off
      -#ssl_ca_file = ''
      -#ssl_cert_file = 'server.crt'
      -#ssl_crl_file = ''
      -#ssl_key_file = 'server.key'
      -#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
      -#ssl_prefer_server_ciphers = on
      -#ssl_ecdh_curve = 'prime256v1'
      -#ssl_min_protocol_version = 'TLSv1'
      -#ssl_max_protocol_version = ''
      -#ssl_dh_params_file = ''
      -#ssl_passphrase_command = ''
      -#ssl_passphrase_command_supports_reload = off
      +#tcp_keepalives_idle = 0    # TCP_KEEPIDLE, in seconds;
      +          # 0 selects the system default
      +#tcp_keepalives_interval = 0    # TCP_KEEPINTVL, in seconds;
      +          # 0 selects the system default
      +#tcp_keepalives_count = 0   # TCP_KEEPCNT;
      +          # 0 selects the system default


       #------------------------------------------------------------------------------
      @@ -118,228 +119,105 @@

       # - Memory -

      -shared_buffers = 128MB                   # min 128kB
      -                                 # (change requires restart)
      -#huge_pages = try                        # on, off, or try
      -                                 # (change requires restart)
      -#temp_buffers = 8MB                      # min 800kB
      -#max_prepared_transactions = 0           # zero disables the feature
      -                                 # (change requires restart)
      -# Caution: it is not advisable to set max_prepared_transactions nonzero unless
      -# you actively intend to use prepared transactions.
      -#work_mem = 4MB                          # min 64kB
      -#maintenance_work_mem = 64MB             # min 1MB
      -#autovacuum_work_mem = -1                # min 1MB, or -1 to use maintenance_work_mem
      -#max_stack_depth = 2MB                   # min 100kB
      -#shared_memory_type = mmap               # the default is the first option
      -                                 # supported by the operating system:
      -                                 #   mmap
      -                                 #   sysv
      -                                 #   windows
      -                                 # (change requires restart)
      -dynamic_shared_memory_type = posix       # the default is the first option
      -                                 # supported by the operating system:
      -                                 #   posix
      -                                 #   sysv
      -                                 #   windows
      -                                 #   mmap
      -                                 # (change requires restart)
      +shared_buffers = 1994MB # min 128kB
      +          # (change requires restart)
      +#temp_buffers = 8MB     # min 800kB
      +#max_prepared_transactions = 0    # zero disables the feature
      +          # (change requires restart)
      +# Note:  Increasing max_prepared_transactions costs ~600 bytes of shared memory
      +# per transaction slot, plus lock space (see max_locks_per_transaction).
      +# It is not advisable to set max_prepared_transactions nonzero unless you
      +# actively intend to use prepared transactions.
      +#max_stack_depth = 2MB      # min 100kB

      -# - Disk -
      +# - Kernel Resource Usage -

      -#temp_file_limit = -1                    # limits per-process temp file space
      -                                 # in kB, or -1 for no limit
      +#max_files_per_process = 1000   # min 25
      +          # (change requires restart)
      +shared_preload_libraries = ''    # (change requires restart)

      -# - Kernel Resources -
      -
      -#max_files_per_process = 1000            # min 25
      -                                 # (change requires restart)
      -
       # - Cost-Based Vacuum Delay -

      -#vacuum_cost_delay = 0                   # 0-100 milliseconds (0 disables)
      -#vacuum_cost_page_hit = 1                # 0-10000 credits
      -#vacuum_cost_page_miss = 10              # 0-10000 credits
      -#vacuum_cost_page_dirty = 20             # 0-10000 credits
      -#vacuum_cost_limit = 200         # 1-10000 credits
      +#vacuum_cost_delay = 0ms    # 0-100 milliseconds
      +#vacuum_cost_page_hit = 1   # 0-10000 credits
      +#vacuum_cost_page_miss = 10   # 0-10000 credits
      +#vacuum_cost_page_dirty = 20    # 0-10000 credits
      +#vacuum_cost_limit = 200    # 1-10000 credits

       # - Background Writer -

      -#bgwriter_delay = 200ms                  # 10-10000ms between rounds
      -#bgwriter_lru_maxpages = 100             # max buffers written/round, 0 disables
      -#bgwriter_lru_multiplier = 2.0           # 0-10.0 multiplier on buffers scanned/round
      -#bgwriter_flush_after = 512kB            # measured in pages, 0 disables
      +#bgwriter_delay = 200ms     # 10-10000ms between rounds
      +#bgwriter_lru_maxpages = 100    # 0-1000 max buffers written/round
      +#bgwriter_lru_multiplier = 2.0    # 0-10.0 multipler on buffers scanned/round

       # - Asynchronous Behavior -

      -#effective_io_concurrency = 1            # 1-1000; 0 disables prefetching
      -#max_worker_processes = 8                # (change requires restart)
      -#max_parallel_maintenance_workers = 2    # taken from max_parallel_workers
      -#max_parallel_workers_per_gather = 2     # taken from max_parallel_workers
      -#parallel_leader_participation = on
      -#max_parallel_workers = 8                # maximum number of max_worker_processes that
      -                                 # can be used in parallel operations
      -#old_snapshot_threshold = -1             # 1min-60d; -1 disables; 0 is immediate
      -                                 # (change requires restart)
      -#backend_flush_after = 0         # measured in pages, 0 disables
      +#effective_io_concurrency = 1   # 1-1000. 0 disables prefetching


       #------------------------------------------------------------------------------
      -# WRITE-AHEAD LOG
      +# WRITE AHEAD LOG
       #------------------------------------------------------------------------------

       # - Settings -

      -#wal_level = replica                     # minimal, replica, or logical
      -                                 # (change requires restart)
      -#fsync = on                              # flush data to disk for crash safety
      -                                 # (turning this off can cause
      -                                 # unrecoverable data corruption)
      -#synchronous_commit = on         # synchronization level;
      -                                 # off, local, remote_write, remote_apply, or on
      -#wal_sync_method = fsync         # the default is the first option
      -                                 # supported by the operating system:
      -                                 #   open_datasync
      -                                 #   fdatasync (default on Linux)
      -                                 #   fsync
      -                                 #   fsync_writethrough
      -                                 #   open_sync
      -#full_page_writes = on                   # recover from partial page writes
      -#wal_compression = off                   # enable compression of full-page writes
      -#wal_log_hints = off                     # also do full page writes of non-critical updates
      -                                 # (change requires restart)
      -#wal_init_zero = on                      # zero-fill new WAL files
      -#wal_recycle = on                        # recycle WAL files
      -#wal_buffers = -1                        # min 32kB, -1 sets based on shared_buffers
      -                                 # (change requires restart)
      -#wal_writer_delay = 200ms                # 1-10000 milliseconds
      -#wal_writer_flush_after = 1MB            # measured in pages, 0 disables
      +wal_level = minimal
      +wal_log_hints = off      # also do full page writes of non-critical updates
      +          # (change requires restart)
      +#fsync = on       # turns forced synchronization on or off
      +#wal_sync_method = fsync    # the default is the first option
      +          # supported by the operating system:
      +          #   open_datasync
      +          #   fdatasync (default on Linux)
      +          #   fsync
      +          #   fsync_writethrough
      +          #   open_sync
      +#full_page_writes = on      # recover from partial page writes
      +wal_buffers = -1 # -1     # min 32kB, -1 sets based on shared_buffers
      +          # (change requires restart)
      +#wal_writer_delay = 200ms   # 1-10000 milliseconds

      -#commit_delay = 0                        # range 0-100000, in microseconds
      -#commit_siblings = 5                     # range 1-1000
      +#commit_delay = 0     # range 0-100000, in microseconds
      +#commit_siblings = 5      # range 1-1000

      -# - Checkpoints -
      -
      -#checkpoint_timeout = 5min               # range 30s-1d
      -max_wal_size = 1GB
       min_wal_size = 80MB
      -#checkpoint_completion_target = 0.5      # checkpoint target duration, 0.0 - 1.0
      -#checkpoint_flush_after = 256kB          # measured in pages, 0 disables
      -#checkpoint_warning = 30s                # 0 disables
      +max_wal_size = 1GB

      -# - Archiving -
      +# The number of replication slots to reserve.
      +max_replication_slots = 0

      -#archive_mode = off              # enables archiving; off, on, or always
      -                         # (change requires restart)
      -#archive_command = ''            # command to use to archive a logfile segment
      -                         # placeholders: %p = path of file to archive
      -                         #               %f = file name only
      -                         # e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
      -#archive_timeout = 0             # force a logfile segment switch after this
      -                         # number of seconds; 0 disables

      -# - Archive Recovery -
      +# - Archiving -

      -# These are only used in recovery mode.
      +archive_mode = off   # allows archiving to be done
      +        # (change requires restart, also requires 'wal_level' of 'hot_standby' OR 'replica')

      -#restore_command = ''            # command to use to restore an archived logfile segment
      -                         # placeholders: %p = path of file to restore
      -                         #               %f = file name only
      -                         # e.g. 'cp /mnt/server/archivedir/%f %p'
      -                         # (change requires restart)
      -#archive_cleanup_command = ''    # command to execute at every restartpoint
      -#recovery_end_command = ''       # command to execute at completion of recovery
      -
      -# - Recovery Target -
      -
      -# Set these only when performing a targeted recovery.
      -
      -#recovery_target = ''            # 'immediate' to end recovery as soon as a
      -                                # consistent state is reached
      -                         # (change requires restart)
      -#recovery_target_name = ''       # the named restore point to which recovery will proceed
      -                         # (change requires restart)
      -#recovery_target_time = ''       # the time stamp up to which recovery will proceed
      -                         # (change requires restart)
      -#recovery_target_xid = ''        # the transaction ID up to which recovery will proceed
      -                         # (change requires restart)
      -#recovery_target_lsn = ''        # the WAL LSN up to which recovery will proceed
      -                         # (change requires restart)
      -#recovery_target_inclusive = on # Specifies whether to stop:
      -                         # just after the specified recovery target (on)
      -                         # just before the recovery target (off)
      -                         # (change requires restart)
      -#recovery_target_timeline = 'latest'     # 'current', 'latest', or timeline ID
      -                         # (change requires restart)
      -#recovery_target_action = 'pause'        # 'pause', 'promote', 'shutdown'
      -                         # (change requires restart)
      -
      -
       #------------------------------------------------------------------------------
       # REPLICATION
       #------------------------------------------------------------------------------

      -# - Sending Servers -
      -
      -# Set these on the master and on any standby that will send replication data.
      -
      -#max_wal_senders = 10            # max number of walsender processes
      -                         # (change requires restart)
      -#wal_keep_segments = 0           # in logfile segments; 0 disables
      -#wal_sender_timeout = 60s        # in milliseconds; 0 disables
      -
      -#max_replication_slots = 10      # max number of replication slots
      -                         # (change requires restart)
      -#track_commit_timestamp = off    # collect timestamp of transaction commit
      -                         # (change requires restart)
      -
       # - Master Server -

      -# These settings are ignored on a standby server.
      +# These settings are ignored on a standby server

      -#synchronous_standby_names = ''  # standby servers that provide sync rep
      -                         # method to choose sync standbys, number of sync standbys,
      -                         # and comma-separated list of application_name
      -                         # from standby(s); '*' = all
      -#vacuum_defer_cleanup_age = 0    # number of xacts by which cleanup is delayed
      +max_wal_senders = 0
      +        # (change requires restart)
      +#wal_sender_delay = 1s    # walsender cycle time, 1-10000 milliseconds
      +#vacuum_defer_cleanup_age = 0 # number of xacts by which cleanup is delayed
      +#replication_timeout = 60s  # in milliseconds; 0 disables
      +#synchronous_standby_names = '' # standby servers that provide sync rep
      +        # comma-separated list of application_name
      +        # from standby(s); '*' = all

       # - Standby Servers -

      -# These settings are ignored on a master server.
      +# These settings are ignored on a master server

      -#primary_conninfo = ''                   # connection string to sending server
      -                                 # (change requires restart)
      -#primary_slot_name = ''                  # replication slot on sending server
      -                                 # (change requires restart)
      -#promote_trigger_file = ''               # file name whose presence ends recovery
      -#hot_standby = on                        # "off" disallows queries during recovery
      -                                 # (change requires restart)
      -#max_standby_archive_delay = 30s # max delay before canceling queries
      -                                 # when reading WAL from archive;
      -                                 # -1 allows indefinite delay
      -#max_standby_streaming_delay = 30s       # max delay before canceling queries
      -                                 # when reading streaming WAL;
      -                                 # -1 allows indefinite delay
      -#wal_receiver_status_interval = 10s      # send replies at least this often
      -                                 # 0 disables
      -#hot_standby_feedback = off              # send info from standby to prevent
      -                                 # query conflicts
      -#wal_receiver_timeout = 60s              # time that receiver waits for
      -                                 # communication from master
      -                                 # in milliseconds; 0 disables
      -#wal_retrieve_retry_interval = 5s        # time to wait before retrying to
      -                                 # retrieve WAL after a failed attempt
      -#recovery_min_apply_delay = 0            # minimum delay for applying changes during recovery
      +hot_standby = off
      +          # (change requires restart)
      +#wal_receiver_status_interval = 10s # send replies at least this often
      +          # 0 disables

      -# - Subscribers -
      -
      -# These settings are ignored on a publisher.
      -
      -#max_logical_replication_workers = 4     # taken from max_worker_processes
      -                                 # (change requires restart)
      -#max_sync_workers_per_subscription = 2   # taken from max_logical_replication_workers
      -
      -
       #------------------------------------------------------------------------------
       # QUERY TUNING
       #------------------------------------------------------------------------------
      @@ -350,218 +228,126 @@
       #enable_hashagg = on
       #enable_hashjoin = on
       #enable_indexscan = on
      -#enable_indexonlyscan = on
       #enable_material = on
       #enable_mergejoin = on
       #enable_nestloop = on
      -#enable_parallel_append = on
       #enable_seqscan = on
       #enable_sort = on
       #enable_tidscan = on
      -#enable_partitionwise_join = off
      -#enable_partitionwise_aggregate = off
      -#enable_parallel_hash = on
      -#enable_partition_pruning = on

       # - Planner Cost Constants -

      -#seq_page_cost = 1.0                     # measured on an arbitrary scale
      -#random_page_cost = 4.0                  # same scale as above
      -#cpu_tuple_cost = 0.01                   # same scale as above
      -#cpu_index_tuple_cost = 0.005            # same scale as above
      -#cpu_operator_cost = 0.0025              # same scale as above
      -#parallel_tuple_cost = 0.1               # same scale as above
      -#parallel_setup_cost = 1000.0    # same scale as above
      +#cpu_tuple_cost = 0.01      # same scale as above
      +#cpu_index_tuple_cost = 0.005   # same scale as above
      +#cpu_operator_cost = 0.0025   # same scale as above

      -#jit_above_cost = 100000         # perform JIT compilation if available
      -                                 # and query more expensive than this;
      -                                 # -1 disables
      -#jit_inline_above_cost = 500000          # inline small functions if query is
      -                                 # more expensive than this; -1 disables
      -#jit_optimize_above_cost = 500000        # use expensive JIT optimizations if
      -                                 # query is more expensive than this;
      -                                 # -1 disables
      -
      -#min_parallel_table_scan_size = 8MB
      -#min_parallel_index_scan_size = 512kB
      -#effective_cache_size = 4GB
      -
       # - Genetic Query Optimizer -

       #geqo = on
       #geqo_threshold = 12
      -#geqo_effort = 5                 # range 1-10
      -#geqo_pool_size = 0                      # selects default based on effort
      -#geqo_generations = 0                    # selects default based on effort
      -#geqo_selection_bias = 2.0               # range 1.5-2.0
      -#geqo_seed = 0.0                 # range 0.0-1.0
      +#geqo_effort = 5      # range 1-10
      +#geqo_pool_size = 0     # selects default based on effort
      +#geqo_generations = 0     # selects default based on effort
      +#geqo_selection_bias = 2.0    # range 1.5-2.0
      +#geqo_seed = 0.0      # range 0.0-1.0

       # - Other Planner Options -

      -#default_statistics_target = 100 # range 1-10000
      -#constraint_exclusion = partition        # on, off, or partition
      -#cursor_tuple_fraction = 0.1             # range 0.0-1.0
      +#default_statistics_target = 100  # range 1-10000
      +#constraint_exclusion = partition # on, off, or partition
      +#cursor_tuple_fraction = 0.1    # range 0.0-1.0
       #from_collapse_limit = 8
      -#join_collapse_limit = 8         # 1 disables collapsing of explicit
      -                                 # JOIN clauses
      -#force_parallel_mode = off
      -#jit = on                                # allow JIT compilation
      -#plan_cache_mode = auto                  # auto, force_generic_plan or
      -                                 # force_custom_plan
      +#join_collapse_limit = 8    # 1 disables collapsing of explicit
      +          # JOIN clauses


       #------------------------------------------------------------------------------
      -# REPORTING AND LOGGING
      +# ERROR REPORTING AND LOGGING
       #------------------------------------------------------------------------------

      -# - Where to Log -

      -#log_destination = 'stderr'              # Valid values are combinations of
      -                                 # stderr, csvlog, syslog, and eventlog,
      -                                 # depending on platform.  csvlog
      -                                 # requires logging_collector to be on.
      -
      -# This is used when logging to stderr:
      -#logging_collector = off         # Enable capturing of stderr and csvlog
      -                                 # into log files. Required to be on for
      -                                 # csvlogs.
      -                                 # (change requires restart)
      -
      -# These are only used if logging_collector is on:
      -#log_directory = 'log'                   # directory where log files are written,
      -                                 # can be absolute or relative to PGDATA
      -#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' # log file name pattern,
      -                                 # can include strftime() escapes
      -#log_file_mode = 0600                    # creation mode for log files,
      -                                 # begin with 0 to use octal notation
      -#log_truncate_on_rotation = off          # If on, an existing log file with the
      -                                 # same name as the new log file will be
      -                                 # truncated rather than appended to.
      -                                 # But such truncation only occurs on
      -                                 # time-driven rotation, not on restarts
      -                                 # or size-driven rotation.  Default is
      -                                 # off, meaning append to existing files
      -                                 # in all cases.
      -#log_rotation_age = 1d                   # Automatic rotation of logfiles will
      -                                 # happen after that time.  0 disables.
      -#log_rotation_size = 10MB                # Automatic rotation of logfiles will
      -                                 # happen after that much log output.
      -                                 # 0 disables.
      -
       # These are relevant when logging to syslog:
       #syslog_facility = 'LOCAL0'
       #syslog_ident = 'postgres'
      -#syslog_sequence_numbers = on
      -#syslog_split_messages = on

      -# This is only relevant when logging to eventlog (win32):
      -# (change requires restart)
      -#event_source = 'PostgreSQL'
      +#silent_mode = off      # Run server silently.
      +          # DO NOT USE without syslog or
      +          # logging_collector
      +          # (change requires restart)

      +
       # - When to Log -

      -#log_min_messages = warning              # values in order of decreasing detail:
      -                                 #   debug5
      -                                 #   debug4
      -                                 #   debug3
      -                                 #   debug2
      -                                 #   debug1
      -                                 #   info
      -                                 #   notice
      -                                 #   warning
      -                                 #   error
      -                                 #   log
      -                                 #   fatal
      -                                 #   panic
      +#client_min_messages = notice   # values in order of decreasing detail:
      +          #   debug5
      +          #   debug4
      +          #   debug3
      +          #   debug2
      +          #   debug1
      +          #   log
      +          #   notice
      +          #   warning
      +          #   error

      -#log_min_error_statement = error # values in order of decreasing detail:
      -                                 #   debug5
      -                                 #   debug4
      -                                 #   debug3
      -                                 #   debug2
      -                                 #   debug1
      -                                 #   info
      -                                 #   notice
      -                                 #   warning
      -                                 #   error
      -                                 #   log
      -                                 #   fatal
      -                                 #   panic (effectively off)
      +#log_min_messages = warning   # values in order of decreasing detail:
      +          #   debug5
      +          #   debug4
      +          #   debug3
      +          #   debug2
      +          #   debug1
      +          #   info
      +          #   notice
      +          #   warning
      +          #   error
      +          #   log
      +          #   fatal
      +          #   panic

      -#log_min_duration_statement = -1 # -1 is disabled, 0 logs all statements
      -                                 # and their durations, > 0 logs only
      -                                 # statements running at least this number
      -                                 # of milliseconds
      +#log_min_error_statement = error  # values in order of decreasing detail:
      +          #   debug5
      +          #   debug4
      +          #   debug3
      +          #   debug2
      +          #   debug1
      +          #   info
      +          #   notice
      +          #   warning
      +          #   error
      +          #   log
      +          #   fatal
      +          #   panic (effectively off)

      -#log_transaction_sample_rate = 0.0       # Fraction of transactions whose statements
      -                                 # are logged regardless of their duration. 1.0 logs all
      -                                 # statements from all transactions, 0.0 never logs.
      -
       # - What to Log -

       #debug_print_parse = off
       #debug_print_rewritten = off
       #debug_print_plan = off
       #debug_pretty_print = on
      -#log_checkpoints = off
       #log_connections = off
       #log_disconnections = off
       #log_duration = off
      -#log_error_verbosity = default           # terse, default, or verbose messages
      +#log_error_verbosity = default    # terse, default, or verbose messages
       #log_hostname = off
      -#log_line_prefix = '%m [%p] '            # special values:
      -                                 #   %a = application name
      -                                 #   %u = user name
      -                                 #   %d = database name
      -                                 #   %r = remote host and port
      -                                 #   %h = remote host
      -                                 #   %p = process ID
      -                                 #   %t = timestamp without milliseconds
      -                                 #   %m = timestamp with milliseconds
      -                                 #   %n = timestamp with milliseconds (as a Unix epoch)
      -                                 #   %i = command tag
      -                                 #   %e = SQL state
      -                                 #   %c = session ID
      -                                 #   %l = session line number
      -                                 #   %s = session start timestamp
      -                                 #   %v = virtual transaction ID
      -                                 #   %x = transaction ID (0 if none)
      -                                 #   %q = stop here in non-session
      -                                 #        processes
      -                                 #   %% = '%'
      -                                 # e.g. '<%u%%%d> '
      -#log_lock_waits = off                    # log lock waits >= deadlock_timeout
      -#log_statement = 'none'                  # none, ddl, mod, all
      -#log_replication_commands = off
      -#log_temp_files = -1                     # log temporary files equal or larger
      -                                 # than the specified size in kilobytes;
      -                                 # -1 disables, 0 logs all temp files
      -log_timezone = 'Asia/Taipei'
      +#log_lock_waits = off     # log lock waits >= deadlock_timeout
      +#log_statement = 'none'     # none, ddl, mod, all
      +#log_timezone = '(defaults to server environment setting)'

      -#------------------------------------------------------------------------------
      -# PROCESS TITLE
      -#------------------------------------------------------------------------------

      -#cluster_name = ''                       # added to process titles if nonempty
      -                                 # (change requires restart)
      -#update_process_title = on
      -
      -
       #------------------------------------------------------------------------------
      -# STATISTICS
      +# RUNTIME STATISTICS
       #------------------------------------------------------------------------------

      -# - Query and Index Statistics Collector -
      +# - Query/Index Statistics Collector -

       #track_activities = on
       #track_counts = on
      -#track_io_timing = off
      -#track_functions = none                  # none, pl, all
      -#track_activity_query_size = 1024        # (change requires restart)
      +#track_functions = none     # none, pl, all
      +track_activity_query_size = 1024 # (change requires restart)
      +#update_process_title = on
       #stats_temp_directory = 'pg_stat_tmp'


      -# - Monitoring -
      +# - Statistics Monitoring -

       #log_parser_stats = off
       #log_planner_stats = off
      @@ -570,117 +356,53 @@


       #------------------------------------------------------------------------------
      -# AUTOVACUUM
      +# AUTOVACUUM PARAMETERS
       #------------------------------------------------------------------------------

      -#autovacuum = on                 # Enable autovacuum subprocess?  'on'
      -                                 # requires track_counts to also be on.
      -#log_autovacuum_min_duration = -1        # -1 disables, 0 logs all actions and
      -                                 # their durations, > 0 logs only
      -                                 # actions running at least this number
      -                                 # of milliseconds.
      -#autovacuum_max_workers = 3              # max number of autovacuum subprocesses
      -                                 # (change requires restart)
      -#autovacuum_naptime = 1min               # time between autovacuum runs
      -#autovacuum_vacuum_threshold = 50        # min number of row updates before
      -                                 # vacuum
      -#autovacuum_analyze_threshold = 50       # min number of row updates before
      -                                 # analyze
      -#autovacuum_vacuum_scale_factor = 0.2    # fraction of table size before vacuum
      -#autovacuum_analyze_scale_factor = 0.1   # fraction of table size before analyze
      -#autovacuum_freeze_max_age = 200000000   # maximum XID age before forced vacuum
      -                                 # (change requires restart)
      -#autovacuum_multixact_freeze_max_age = 400000000 # maximum multixact age
      -                                 # before forced vacuum
      -                                 # (change requires restart)
      -#autovacuum_vacuum_cost_delay = 2ms      # default vacuum cost delay for
      -                                 # autovacuum, in milliseconds;
      -                                 # -1 means use vacuum_cost_delay
      -#autovacuum_vacuum_cost_limit = -1       # default vacuum cost limit for
      -                                 # autovacuum, -1 means use
      -                                 # vacuum_cost_limit
      -
      -
      +autovacuum_max_workers = 3 # max number of autovacuum subprocesses
      +          # (change requires restart)
      +autovacuum_freeze_max_age = 200000000  # maximum XID age before forced vacuum
      +          # (change requires restart)
       #------------------------------------------------------------------------------
       # CLIENT CONNECTION DEFAULTS
       #------------------------------------------------------------------------------

       # - Statement Behavior -

      -#client_min_messages = notice            # values in order of decreasing detail:
      -                                 #   debug5
      -                                 #   debug4
      -                                 #   debug3
      -                                 #   debug2
      -                                 #   debug1
      -                                 #   log
      -                                 #   notice
      -                                 #   warning
      -                                 #   error
      -#search_path = '"$user", public' # schema names
      -#row_security = on
      -#default_tablespace = ''         # a tablespace name, '' uses the default
      -#temp_tablespaces = ''                   # a list of tablespace names, '' uses
      -                                 # only default tablespace
      -#default_table_access_method = 'heap'
      +#search_path = '"$user",public'   # schema names
      +#default_tablespace = ''    # a tablespace name, '' uses the default
      +#temp_tablespaces = ''      # a list of tablespace names, '' uses
      +          # only default tablespace
       #check_function_bodies = on
       #default_transaction_isolation = 'read committed'
       #default_transaction_read_only = off
       #default_transaction_deferrable = off
       #session_replication_role = 'origin'
      -#statement_timeout = 0                   # in milliseconds, 0 is disabled
      -#lock_timeout = 0                        # in milliseconds, 0 is disabled
      -#idle_in_transaction_session_timeout = 0 # in milliseconds, 0 is disabled
       #vacuum_freeze_min_age = 50000000
       #vacuum_freeze_table_age = 150000000
      -#vacuum_multixact_freeze_min_age = 5000000
      -#vacuum_multixact_freeze_table_age = 150000000
      -#vacuum_cleanup_index_scale_factor = 0.1 # fraction of total number of tuples
      -                                         # before index cleanup, 0 always performs
      -                                         # index cleanup
      -#bytea_output = 'hex'                    # hex, escape
      +#bytea_output = 'hex'     # hex, escape
       #xmlbinary = 'base64'
       #xmloption = 'content'
      -#gin_fuzzy_search_limit = 0
      -#gin_pending_list_limit = 4MB

       # - Locale and Formatting -

      -datestyle = 'iso, ymd'
       #intervalstyle = 'postgres'
      -timezone = 'Asia/Taipei'
      +#timezone = '(defaults to server environment setting)'
       #timezone_abbreviations = 'Default'     # Select the set of available time zone
      -                                 # abbreviations.  Currently, there are
      -                                 #   Default
      -                                 #   Australia (historical usage)
      -                                 #   India
      -                                 # You can create your own file in
      -                                 # share/timezonesets/.
      -#extra_float_digits = 1                  # min -15, max 3; any value >0 actually
      -                                 # selects precise output mode
      -#client_encoding = sql_ascii             # actually, defaults to database
      -                                 # encoding
      +          # abbreviations.  Currently, there are
      +          #   Default
      +          #   Australia
      +          #   India
      +          # You can create your own file in
      +          # share/timezonesets/.
      +#extra_float_digits = 0     # min -15, max 3
      +#client_encoding = sql_ascii    # actually, defaults to database
      +          # encoding

      -# These settings are initialized by initdb, but they can be changed.
      -lc_messages = 'zh_TW.UTF-8'                      # locale for system error message
      -                                 # strings
      -lc_monetary = 'zh_TW.UTF-8'                      # locale for monetary formatting
      -lc_numeric = 'zh_TW.UTF-8'                       # locale for number formatting
      -lc_time = 'zh_TW.UTF-8'                          # locale for time formatting
      -
      -# default configuration for text search
      -default_text_search_config = 'pg_catalog.simple'
      -
      -# - Shared Library Preloading -
      -
      -#shared_preload_libraries = ''   # (change requires restart)
      -#local_preload_libraries = ''
      -#session_preload_libraries = ''
      -#jit_provider = 'llvmjit'                # JIT library to use
      -
       # - Other Defaults -

       #dynamic_library_path = '$libdir'
      +#local_preload_libraries = ''


       #------------------------------------------------------------------------------
      @@ -688,28 +410,27 @@
       #------------------------------------------------------------------------------

       #deadlock_timeout = 1s
      -#max_locks_per_transaction = 64          # min 10
      -                                 # (change requires restart)
      -#max_pred_locks_per_transaction = 64     # min 10
      -                                 # (change requires restart)
      -#max_pred_locks_per_relation = -2        # negative values mean
      -                                 # (max_pred_locks_per_transaction
      -                                 #  / -max_pred_locks_per_relation) - 1
      -#max_pred_locks_per_page = 2            # min 0
      +max_locks_per_transaction = 128   # min 10
      +          # (change requires restart)
      +# Note:  Each lock table slot uses ~270 bytes of shared memory, and there are
      +# max_locks_per_transaction * (max_connections + max_prepared_transactions)
      +# lock table slots.
      +#max_pred_locks_per_transaction = 64  # min 10
      +          # (change requires restart)

      -
       #------------------------------------------------------------------------------
      -# VERSION AND PLATFORM COMPATIBILITY
      +# VERSION/PLATFORM COMPATIBILITY
       #------------------------------------------------------------------------------

       # - Previous PostgreSQL Versions -

       #array_nulls = on
      -#backslash_quote = safe_encoding # on, off, or safe_encoding
      +#backslash_quote = safe_encoding  # on, off, or safe_encoding
      +#default_with_oids = off
       #escape_string_warning = on
       #lo_compat_privileges = off
      -#operator_precedence_warning = off
       #quote_all_identifiers = off
      +#sql_inheritance = on
       #standard_conforming_strings = on
       #synchronize_seqscans = on

      @@ -722,30 +443,15 @@
       # ERROR HANDLING
       #------------------------------------------------------------------------------

      -#exit_on_error = off                     # terminate session on any error?
      -#restart_after_crash = on                # reinitialize after backend crash?
      -#data_sync_retry = off                   # retry or panic on failure to fsync
      -                                 # data?
      -                                 # (change requires restart)
      +#exit_on_error = off        # terminate session on any error?
      +#restart_after_crash = on     # reinitialize after backend crash?


       #------------------------------------------------------------------------------
      -# CONFIG FILE INCLUDES
      -#------------------------------------------------------------------------------
      -
      -# These options allow settings to be loaded from files other than the
      -# default postgresql.conf.  Note that these are directives, not variable
      -# assignments, so they can usefully be given more than once.
      -
      -#include_dir = '...'                     # include files ending in '.conf' from
      -                                 # a directory, e.g., 'conf.d'
      -#include_if_exists = '...'               # include file only if it exists
      -#include = '...'                 # include file
      -
      -
      -#------------------------------------------------------------------------------
       # CUSTOMIZED OPTIONS
       #------------------------------------------------------------------------------

      -# Add settings for extensions here
      +#custom_variable_classes = ''   # list of custom variable class names
      +
      +include 'runtime.conf'
      - change mode from '0600' to '0644'
    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create
      - create new file /var/opt/gitlab/postgresql/data/runtime.conf
      - update content in file /var/opt/gitlab/postgresql/data/runtime.conf from none to 0c884f
      --- /var/opt/gitlab/postgresql/data/runtime.conf  2022-03-18 14:23:09.019817054 +0800
      +++ /var/opt/gitlab/postgresql/data/.chef-runtime20220318-1292-xm24rj.conf        2022-03-18 14:23:09.019817054 +0800
      @@ -1,134 +1,268 @@
      +# This file is managed by gitlab-ctl. Manual changes will be
      +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
      +# and run `sudo gitlab-ctl reconfigure`.
      +
      +# Changing variables in this file should only require a reload of PostgreSQL
      +# As the gitlab-psql user, run:
      +# /opt/gitlab/embedded/bin/pg_ctl reload -D /var/opt/gitlab/postgresql/data
      +work_mem = 16MB                          # min 64kB
      +maintenance_work_mem = 16MB # 16MB    # min 1MB
      +synchronous_commit = on # synchronization level; on, off, or local
      +synchronous_standby_names = ''
      +
      +# - Checkpoints -
      +min_wal_size = 80MB
      +max_wal_size = 1GB
      +
      +checkpoint_timeout = 5min                # range 30s-1h, default 5min
      +checkpoint_completion_target = 0.9       # checkpoint target duration, 0.0 - 1.0, default 0.5
      +checkpoint_warning = 30s         # 0 disables, default 30s
      +
      +# - Logging -
      +log_directory = '/var/log/gitlab/postgresql'
      +
      +# - Archiving -
      +archive_command = ''   # command to use to archive a logfile segment
      +archive_timeout = 0    # force a logfile segment switch after this
      +        # number of seconds; 0 disables
      +
      +# - Replication
      +wal_keep_segments = 10
      +
      +max_standby_archive_delay = 30s # max delay before canceling queries
      +          # when reading WAL from archive;
      +          # -1 allows indefinite delay
      +max_standby_streaming_delay = 30s # max delay before canceling queries
      +          # when reading streaming WAL;
      +          # -1 allows indefinite delay
      +
      +hot_standby_feedback = off   # send info from standby to prevent
      +          # query conflicts
      +
      +# - Planner Cost Constants -
      +#seq_page_cost = 1.0      # measured on an arbitrary scale
      +random_page_cost = 2.0     # same scale as above
      +
      +effective_cache_size = 3988MB # Default 128MB
      +
      +log_min_duration_statement = -1  # -1 is disabled, 0 logs all statements
      +          # and their durations, > 0 logs only
      +          # statements running at least this number
      +          # of milliseconds
      +
      +log_checkpoints = off
      +
      +log_line_prefix = '' # default '', special values:
      +          #   %a = application name
      +          #   %u = user name
      +          #   %d = database name
      +          #   %r = remote host and port
      +          #   %h = remote host
      +          #   %p = process ID
      +          #   %t = timestamp without milliseconds
      +          #   %m = timestamp with milliseconds
      +          #   %i = command tag
      +          #   %e = SQL state
      +          #   %c = session ID
      +          #   %l = session line number
      +          #   %s = session start timestamp
      +          #   %v = virtual transaction ID
      +          #   %x = transaction ID (0 if none)
      +          #   %q = stop here in non-session
      +          #        processes
      +          #   %% = '%'
      +
      +log_temp_files = -1      # log temporary files equal or larger
      +          # than the specified size in kilobytes;
      +          # -1 disables, 0 logs all temp files
      +
      +
      +# - Autovacuum parameters -
      +autovacuum = on # Enable autovacuum subprocess?  'on'
      +          # requires track_counts to also be on.
      +
      +log_autovacuum_min_duration = -1 # -1 disables, 0 logs all actions and
      +          # their durations, > 0 logs only
      +          # actions running at least this number
      +          # of milliseconds.
      +
      +autovacuum_naptime = 1min # time between autovacuum runs
      +autovacuum_vacuum_threshold = 50 # min number of row updates before
      +          # vacuum
      +autovacuum_analyze_threshold = 50 # min number of row updates before
      +          # analyze
      +autovacuum_vacuum_scale_factor = 0.02 # fraction of table size before vacuum
      +autovacuum_analyze_scale_factor = 0.01 # fraction of table size before analyze
      +autovacuum_vacuum_cost_delay = 20ms # default vacuum cost delay for
      +          # autovacuum, in milliseconds;
      +          # -1 means use vacuum_cost_delay
      +autovacuum_vacuum_cost_limit = -1 # default vacuum cost limit for
      +          # autovacuum, -1 means use
      +          # vacuum_cost_limit
      +
      +# Parameters for gathering statistics
      +default_statistics_target = 1000
      +
      +# - Client connection timeouts
      +statement_timeout = 60000
      +
      +idle_in_transaction_session_timeout = 60000
      +
      +# IO settings
      +effective_io_concurrency = 1
      +track_io_timing = 'off'
      +
      +# Parallel worker settings
      +max_worker_processes = 8
      +max_parallel_workers_per_gather = 0
      +
      +# Deadlock handling and logging
      +deadlock_timeout = '5s'
      +log_lock_waits = 1
      +
      +# - Locale and Formatting -
      +datestyle = 'iso, mdy'
      +
      +# These settings are initialized by initdb, but they can be changed.
      +lc_messages = 'C'     # locale for system error message
      +          # strings
      +lc_monetary = 'C'     # locale for monetary formatting
      +lc_numeric = 'C'      # locale for number formatting
      +lc_time = 'C'       # locale for time formatting
      +
      +# default configuration for text search
      +default_text_search_config = 'pg_catalog.english'
      - change mode from '' to '0644'
      - change owner from '' to 'gitlab-psql'
    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create
      - update content in file /var/opt/gitlab/postgresql/data/pg_hba.conf from 98c8d4 to 40e348
      --- /var/opt/gitlab/postgresql/data/pg_hba.conf   2022-03-18 14:22:49.156346318 +0800
      +++ /var/opt/gitlab/postgresql/data/.chef-pg_hba20220318-1292-esn84j.conf 2022-03-18 14:23:09.059815991 +0800
      @@ -1,98 +1,74 @@
      +# This file is managed by gitlab-ctl. Manual changes will be
      +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
      +# and run `sudo gitlab-ctl reconfigure`.
      +
       # PostgreSQL Client Authentication Configuration File
       # ===================================================
       #
      -# Refer to the "Client Authentication" section in the PostgreSQL
      -# documentation for a complete description of this file.  A short
      -# synopsis follows.
      +# Refer to the "Client Authentication" section in the
      +# PostgreSQL documentation for a complete description
      +# of this file.  A short synopsis follows.
       #
       # This file controls: which hosts are allowed to connect, how clients
       # are authenticated, which PostgreSQL user names they can use, which
       # databases they can access.  Records take one of these forms:
       #
      -# local         DATABASE  USER  METHOD  [OPTIONS]
      -# host          DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostssl       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostnossl     DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostgssenc    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostnogssenc  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      +# local      DATABASE  USER  METHOD  [OPTION]
      +# host       DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostssl    DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostnossl  DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
       #
       # (The uppercase items must be replaced by actual values.)
       #
      -# The first field is the connection type: "local" is a Unix-domain
      -# socket, "host" is either a plain or SSL-encrypted TCP/IP socket,
      -# "hostssl" is an SSL-encrypted TCP/IP socket, and "hostnossl" is a
      -# non-SSL TCP/IP socket.  Similarly, "hostgssenc" uses a
      -# GSSAPI-encrypted TCP/IP socket, while "hostnogssenc" uses a
      -# non-GSSAPI socket.
      +# The first field is the connection type: "local" is a Unix-domain socket,
      +# "host" is either a plain or SSL-encrypted TCP/IP socket, "hostssl" is an
      +# SSL-encrypted TCP/IP socket, and "hostnossl" is a plain TCP/IP socket.
       #
      -# DATABASE can be "all", "sameuser", "samerole", "replication", a
      -# database name, or a comma-separated list thereof. The "all"
      -# keyword does not match "replication". Access to replication
      -# must be enabled in a separate record (see example below).
      +# DATABASE can be "all", "sameuser", "samerole", a database name, or
      +# a comma-separated list thereof.
       #
      -# USER can be "all", a user name, a group name prefixed with "+", or a
      -# comma-separated list thereof.  In both the DATABASE and USER fields
      -# you can also write a file name prefixed with "@" to include names
      -# from a separate file.
      +# USER can be "all", a user name, a group name prefixed with "+", or
      +# a comma-separated list thereof.  In both the DATABASE and USER fields
      +# you can also write a file name prefixed with "@" to include names from
      +# a separate file.
       #
      -# ADDRESS specifies the set of hosts the record matches.  It can be a
      -# host name, or it is made up of an IP address and a CIDR mask that is
      -# an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that
      -# specifies the number of significant bits in the mask.  A host name
      -# that starts with a dot (.) matches a suffix of the actual host name.
      -# Alternatively, you can write an IP address and netmask in separate
      -# columns to specify the set of hosts.  Instead of a CIDR-address, you
      -# can write "samehost" to match any of the server's own IP addresses,
      -# or "samenet" to match any address in any subnet that the server is
      -# directly connected to.
      +# CIDR-ADDRESS specifies the set of hosts the record matches.
      +# It is made up of an IP address and a CIDR mask that is an integer
      +# (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that specifies
      +# the number of significant bits in the mask.  Alternatively, you can write
      +# an IP address and netmask in separate columns to specify the set of hosts.
       #
      -# METHOD can be "trust", "reject", "md5", "password", "scram-sha-256",
      -# "gss", "sspi", "ident", "peer", "pam", "ldap", "radius" or "cert".
      -# Note that "password" sends passwords in clear text; "md5" or
      -# "scram-sha-256" are preferred since they send encrypted passwords.
      +# METHOD can be "trust", "reject", "md5", "crypt", "password", "gss", "sspi",
      +# "krb5", "ident", "pam" or "ldap".  Note that "password" sends passwords
      +# in clear text; "md5" is preferred since it sends encrypted passwords.
       #
      -# OPTIONS are a set of options for the authentication in the format
      -# NAME=VALUE.  The available options depend on the different
      -# authentication methods -- refer to the "Client Authentication"
      -# section in the documentation for a list of which options are
      -# available for which authentication methods.
      +# OPTION is the ident map or the name of the PAM service, depending on METHOD.
       #
      -# Database and user names containing spaces, commas, quotes and other
      -# special characters must be quoted.  Quoting one of the keywords
      -# "all", "sameuser", "samerole" or "replication" makes the name lose
      -# its special character, and just match a database or username with
      -# that name.
      +# Database and user names containing spaces, commas, quotes and other special
      +# characters must be quoted. Quoting one of the keywords "all", "sameuser" or
      +# "samerole" makes the name lose its special character, and just match a
      +# database or username with that name.
       #
      -# This file is read on server startup and when the server receives a
      -# SIGHUP signal.  If you edit the file on a running system, you have to
      -# SIGHUP the server for the changes to take effect, run "pg_ctl reload",
      -# or execute "SELECT pg_reload_conf()".
      -#
      +# This file is read on server startup and when the postmaster receives
      +# a SIGHUP signal.  If you edit the file on a running system, you have
      +# to SIGHUP the postmaster for the changes to take effect.  You can use
      +# "pg_ctl reload" to do that.
      +
       # Put your actual configuration here
       # ----------------------------------
       #
       # If you want to allow non-local connections, you need to add more
      -# "host" records.  In that case you will also need to make PostgreSQL
      -# listen on a non-local interface via the listen_addresses
      -# configuration parameter, or via the -i or -h command line switches.
      +# "host" records. In that case you will also need to make PostgreSQL listen
      +# on a non-local interface via the listen_addresses configuration parameter,
      +# or via the -i or -h command line switches.
      +#

      -# CAUTION: Configuring the system for local "trust" authentication
      -# allows any local user to connect as any PostgreSQL user, including
      -# the database superuser.  If you do not trust all your local users,
      -# use another authentication method.

      +# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD

      -# TYPE  DATABASE        USER            ADDRESS                 METHOD
      -
       # "local" is for Unix domain socket connections only
      -local   all             all                                     trust
      -# IPv4 local connections:
      -host    all             all             127.0.0.1/32            trust
      -# IPv6 local connections:
      -host    all             all             ::1/128                 trust
      -# Allow replication connections from localhost, by a user with the
      -# replication privilege.
      -local   replication     all                                     trust
      -host    replication     all             127.0.0.1/32            trust
      -host    replication     all             ::1/128                 trust
      +local   all         all                               peer map=gitlab
      +
      +
      +
      - change mode from '0600' to '0644'
    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create
      - update content in file /var/opt/gitlab/postgresql/data/pg_ident.conf from 297f46 to 5399a1
      --- /var/opt/gitlab/postgresql/data/pg_ident.conf 2022-03-18 14:22:49.156346318 +0800
      +++ /var/opt/gitlab/postgresql/data/.chef-pg_ident20220318-1292-fmk0ad.conf       2022-03-18 14:23:09.091815140 +0800
      @@ -40,4 +40,8 @@
       # ----------------------------------

       # MAPNAME       SYSTEM-USERNAME         PG-USERNAME
      +gitlab  git  gitlab
      +gitlab  mattermost  gitlab_mattermost
      +# Default to a 1-1 mapping between system usernames and Postgres usernames
      +gitlab  /^(.*)$  \1
      - change mode from '0600' to '0644'

Recipe: postgresql::standalone
  * execute[start postgresql] action run
    [execute] ok: run: postgresql: (pid 1366) 0s
    - execute /opt/gitlab/bin/gitlab-ctl start postgresql
  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/config] action create
      - create new file /opt/gitlab/sv/postgresql/log/config
      - update content in file /opt/gitlab/sv/postgresql/log/config from none to 623c00
      --- /opt/gitlab/sv/postgresql/log/config  2022-03-18 14:23:10.327782297 +0800
      +++ /opt/gitlab/sv/postgresql/log/.chef-config20220318-1292-3rn34r        2022-03-18 14:23:10.327782297 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_postgresql] action create
      - execute the ruby block verify_chown_persisted_on_postgresql
    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create
      - unlink existing symlink to file at /var/log/gitlab/postgresql/config
      - create symlink at /var/log/gitlab/postgresql/config to /opt/gitlab/sv/postgresql/log/config
    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
    * link[/opt/gitlab/init/postgresql] action create (up to date)
    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/postgresql] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/postgresql/config] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
      * link[/opt/gitlab/init/postgresql] action create (up to date)
      * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/postgresql] action create (up to date)
      * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
      * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
      * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
      * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/supervise/status] action touch
        - change owner from 'root' to 'gitlab-psql'
        - change group from 'root' to 'gitlab-psql'
        - update utime on file /opt/gitlab/service/postgresql/supervise/status
      * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch
      - change owner from 'root' to 'gitlab-psql'
      - change group from 'root' to 'gitlab-psql'
      - update utime on file /opt/gitlab/service/postgresql/log/supervise/status
    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)

  * execute[/opt/gitlab/bin/gitlab-ctl start postgresql] action run
    [execute] ok: run: postgresql: (pid 1366) 2s
    - execute /opt/gitlab/bin/gitlab-ctl start postgresql
  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)
      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run
        * execute[enable btree_gist extension (postgresql)] action run
          [execute] CREATE EXTENSION
          - execute /opt/gitlab/bin/gitlab-psql -d gitlabhq_production -c "CREATE EXTENSION IF NOT EXISTS btree_gist"



  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)

Running handlers:
Running handlers complete
Chef Infra Client finished, 20/120 resources updated in 10 seconds
Running restart on postgresql:ok: run: postgresql: (pid 1469) 0s
Running restart on postgresql: OK
Running reconfigure to re-generate any dependent service configuration
Running reconfigure:Starting Chef Infra Client, version 15.14.0
resolving cookbooks for run list: ["gitlab"]
Synchronizing Cookbooks:
  - logrotate (0.1.0)
  - redis (0.1.0)
  - registry (0.1.0)
  - gitaly (0.1.0)
  - gitlab-kas (0.1.0)
  - letsencrypt (0.1.0)
  - nginx (0.1.0)
  - acme (4.1.1)
  - consul (0.1.0)
  - package (0.1.0)
  - postgresql (0.1.0)
  - gitlab (0.0.1)
  - gitlab-pages (0.1.0)
  - praefect (0.1.0)
  - runit (5.1.3)
  - mattermost (0.1.0)
  - monitoring (0.1.0)
  - crond (0.1.0)
Installing Cookbook Gems:
Compiling Cookbooks...
Recipe: gitlab::default
  * directory[/etc/gitlab] action create (up to date)
  Converging 277 resources
  * directory[/etc/gitlab] action create (up to date)
  * directory[Create /var/opt/gitlab] action create (up to date)
  * directory[Create /var/log/gitlab] action create (up to date)
  * directory[/opt/gitlab/embedded/etc] action create (up to date)
  * template[/opt/gitlab/embedded/etc/gitconfig] action create
    - update content in file /opt/gitlab/embedded/etc/gitconfig from 147a3a to 5a725a
    --- /opt/gitlab/embedded/etc/gitconfig      2022-03-18 13:48:32.143411098 +0800
    +++ /opt/gitlab/embedded/etc/.chef-gitconfig20220318-1478-1y9vzui   2022-03-18 14:23:25.171388643 +0800
    @@ -1,6 +1,5 @@
     [pack]
       threads = 1
    -useSparse = true
     [receive]
       fsckObjects = true
     advertisePushOptions = true
Recipe: gitlab::web-server
  * account[Webserver user and group] action create
    * group[Webserver user and group] action create (up to date)
    * linux_user[Webserver user and group] action create (up to date)
     (up to date)
Recipe: gitlab::users
  * directory[/var/opt/gitlab] action create (up to date)
  * account[GitLab user and group] action create
    * group[GitLab user and group] action create (up to date)
    * linux_user[GitLab user and group] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/.gitconfig] action create (up to date)
  * directory[/var/opt/gitlab/.bundle] action create (up to date)
Recipe: gitlab::gitlab-shell
  * storage_directory[/var/opt/gitlab/.ssh] action create
    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run (skipped due to not_if)
     (up to date)
  * directory[/var/log/gitlab/gitlab-shell/] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-shell] action create (up to date)
  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create
      - update content in file /var/opt/gitlab/gitlab-shell/config.yml from d7eafb to 301fbf
      --- /var/opt/gitlab/gitlab-shell/config.yml       2022-03-18 14:11:46.701609595 +0800
      +++ /var/opt/gitlab/gitlab-shell/.chef-config20220318-1478-kyiasx.yml     2022-03-18 14:23:25.319384726 +0800
      @@ -6,8 +6,10 @@
       user: git

       # Url to gitlab instance. Used for api calls. May but need not end with a slash.
      -gitlab_url: "http://127.0.0.1:8080"
      +gitlab_url: "http+unix://%2Fvar%2Fopt%2Fgitlab%2Fgitlab-workhorse%2Fsockets%2Fsocket"

      +gitlab_relative_url_root:
      +
       http_settings:

       #  user: someone
      @@ -18,6 +20,10 @@

       # File used as authorized_keys for gitlab user
       auth_file: "/var/opt/gitlab/.ssh/authorized_keys"
      +
      +# SSL certificate dir where custom certificates can be placed
      +# https://golang.org/pkg/crypto/x509/
      +ssl_cert_dir: "/opt/gitlab/embedded/ssl/certs/"

       # Log file.
       # Default is gitlab-shell.log in the root directory.
    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)

  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)
  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing (up to date)
Recipe: gitlab::gitlab-rails
  * storage_directory[/var/opt/gitlab/git-data] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run
      - execute the ruby block directory resource: /var/opt/gitlab/git-data

  * storage_directory[/var/opt/gitlab/git-data/repositories] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run
      - execute the ruby block directory resource: /var/opt/gitlab/git-data/repositories

Recipe: gitlab::rails_pages_shared_path
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::gitlab-rails
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/packages

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings

  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/uploads

  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-ci/builds

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/cache

  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run
      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp

  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)
  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create (up to date)
  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/working] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create (up to date)
  * directory[create /var/log/gitlab/gitlab-rails] action create (up to date)
  * storage_directory[/home/it/gitlab_backup] action create
    * ruby_block[directory resource: /home/it/gitlab_backup] action run (skipped due to not_if)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-rails] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-ci] action create (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-rails/gitlab-rails-rc] action create (up to date)
  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)
  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create
      - update content in file /var/opt/gitlab/gitlab-rails/etc/database.yml from ea931b to 35aaf2
      --- /var/opt/gitlab/gitlab-rails/etc/database.yml 2022-03-18 13:48:33.091392300 +0800
      +++ /var/opt/gitlab/gitlab-rails/etc/.chef-database20220318-1478-nr1ith.yml       2022-03-18 14:23:28.011313493 +0800
      @@ -7,7 +7,6 @@
         encoding: unicode
         collation:
         database: gitlabhq_production
      -  pool: 1
         username: "gitlab"
         password:
         host: "/var/opt/gitlab/postgresql"
      @@ -20,7 +19,13 @@
         load_balancing: {"hosts":[]}
         prepared_statements: false
         statement_limit: 1000
      -  fdw:
      +  connect_timeout:
      +  keepalives:
      +  keepalives_idle:
      +  keepalives_interval:
      +  keepalives_count:
      +  tcp_user_timeout:
      +  application_name:
         variables:
           statement_timeout:
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)

  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create
      - update content in file /var/opt/gitlab/gitlab-rails/etc/secrets.yml from de9e0d to bd9c3d
      - suppressed sensitive resource
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)

  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)
  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)
  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)
  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)
     (up to date)
  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create
      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab.yml from c17400 to f9a352
      --- /var/opt/gitlab/gitlab-rails/etc/gitlab.yml   2022-03-18 14:11:47.521591539 +0800
      +++ /var/opt/gitlab/gitlab-rails/etc/.chef-gitlab20220318-1478-gsszwm.yml 2022-03-18 14:23:28.311305558 +0800
      @@ -37,6 +37,7 @@
           trusted_proxies:


      +
           # Uncomment and customize if you can't use the default user to run GitLab (default: 'git')
           user: git

      @@ -106,6 +107,9 @@
           ## Impersonation settings
           impersonation_enabled:

      +    ## Application settings cache expiry in seconds. (default: 60)
      +    application_settings_cache_seconds:
      +
           usage_ping_enabled:

           # Seat link setting
      @@ -138,6 +142,9 @@
           # Whether the IMAP server uses StartTLS
           start_tls:

      +    # Inbox configuration (for Microsoft Graph)
      +    inbox_method: imap
      +
           # The mailbox where incoming mail will end up. Usually "inbox".
           mailbox: "inbox"
           # The IDLE command timeout.
      @@ -148,6 +155,7 @@
           # Whether to expunge (permanently remove) messages from the mailbox when they are deleted after delivery
           expunge_deleted:

      +
         ## Service desk email
         # Allow users to use a separate service desk address
         # For documentation on how to set this up, see http://doc.gitlab.com/ce/administration/reply_by_email.html
      @@ -174,6 +182,9 @@
           # Whether the IMAP server uses StartTLS
           start_tls:

      +    # Inbox configuration (for Microsoft Graph)
      +    inbox_method: imap
      +
           # The mailbox where incoming mail will end up. Usually "inbox".
           mailbox: "inbox"
           # The IDLE command timeout.
      @@ -232,7 +243,7 @@
             remote_directory: "uploads"
             connection: {}

      -  ## Packages (EE only)
      +  ## Packages
         packages:
           enabled:
           # The location where build packages are stored (default: shared/packages).
      @@ -265,7 +276,7 @@
           storage_path: /var/opt/gitlab/gitlab-rails/shared/terraform_state
           object_store:
             enabled: false
      -      remote_directory: "terraform_state"
      +      remote_directory: "terraform"
             connection: {}

         ## Container Registry
      @@ -279,6 +290,12 @@
           issuer: omnibus-gitlab-issuer
           notification_secret:

      +  ## Kubernetes Agent Server
      +  gitlab_kas:
      +    enabled: false
      +    internal_url:
      +    external_url:
      +
         ## Error Reporting and Logging with Sentry
         sentry:
           enabled: false
      @@ -298,9 +315,16 @@
           host:
           port:
           https: false
      -    external_http: null
      -    external_https: null
      +    external_http: false
      +    external_https: false
           artifacts_server: true
      +    object_store:
      +      enabled: false
      +      remote_directory: "pages"
      +      connection: {}
      +    local_store:
      +      enabled: true
      +      path: /var/opt/gitlab/gitlab-rails/shared/pages

         ## Gravatar
         ## For Libravatar see: https://docs.gitlab.com/ee/customization/libravatar.html
      @@ -318,54 +342,47 @@
         # Please read here for more information: https://github.com/ondrejbartas/sidekiq-cron#adding-cron-job
         cron_jobs:
           # Flag stuck CI builds as failed
      -    stuck_ci_jobs_worker:
      -      cron:
      +
           # Remove expired build artifacts
      -    expire_build_artifacts_worker:
      -      cron:
      +
           # Stop expired environments
      -    environments_auto_stop_cron_worker:
      -      cron:
      +
           # Schedule pipelines in the near future
      -    pipeline_schedule_worker:
      -      cron:
      +
           # Periodically run 'git fsck' on all repositories. If started more than
           # once per hour you will have concurrent 'git fsck' jobs.
      -    repository_check_worker:
      -      cron:
      +
           # Send admin emails once a week
      -    admin_email_worker:
      -      cron:
      +
           # Send emails about personal tokens about to expired
      -    personal_access_tokens_expiring_worker:
      -      cron:
      +
      +    # Send emails about personal tokens that have expired
      +
           # Remove outdated repository archives
      -    repository_archive_cache_worker:
      -      cron:

           # Archive live traces which have not been archived yet
      -    ci_archive_traces_cron_worker:
      -      cron:

           # Verify custom GitLab Pages domains
      -    pages_domain_verification_cron_worker:
      -      cron:

           # Obtain and renew SSL certificates for pages domain through Let's Encrypt
      -    pages_domain_ssl_renewal_cron_worker:
      -      cron:

           # Removes unverified pages domains
      -    pages_domain_removal_cron_worker:
      -      cron:

      +    # Remove unaccepted member invitations
      +
           # Periodically migrate diffs from the database to external storage
      -    schedule_migrate_external_diffs_worker:
      -      cron:

      +    # Update CI Platform Metrics daily
      +
      +    # Send emails about ssh keys that have expired
      +
      +    # Send emails about ssh keys that are expiring soon
      +
           ##
           # GitLab EE only jobs:

      +    # Snapshot Devops Adoption statistics
      +
           # Snapshot active users statistics

           # In addition to refreshing users when they log in,
      @@ -384,6 +401,9 @@
           # GitLab Geo registry backfill worker
           # NOTE: This will only take effect if Geo is enabled (secondary nodes only)

      +    # GitLab Geo Secondary Usage Data worker
      +    # NOTE: This will only take effect if Geo and Usage Data are enabled (secondary nodes only)
      +
           # GitLab Geo file download dispatch worker
           # NOTE: This will only take effect if Geo is enabled

      @@ -399,6 +419,14 @@
           # Export pseudonymized data in CSV format for analysis


      +    # Worker for triggering counter jobs for usage trends and keep backward compatibiltity with analytics_instance_statistics_count_job_trigger_worker_cron until 14.0
      +
      +    # Worker for triggering member invitation reminder emails
      +
      +    # Worker for the scheduled user status cleanup
      +
      +    # Worker for triggering in-product marketing emails
      +
         ## Geo
         # NOTE: These settings will only take effect if Geo is enabled
         geo:
      @@ -417,9 +445,6 @@
         feature_flags:
           unleash:
             enabled: false
      -      url:
      -      app_name:  # Environment name of your GitLab instance
      -      instance_id:

         #
         # 2. GitLab CI settings
      @@ -484,6 +509,12 @@
           # (default: accept any service name in keytab file)
           service_principal_name:

      +    # Kerberos realms/domains that are allowed to automatically link LDAP identities.
      +    # By default, GitLab accepts a realm that matches the domain derived from the
      +    # LDAP `base` DN. For example, `ou=users,dc=example,dc=com` would allow users
      +    # with a realm matching `example.com`.
      +    simple_ldap_linking_allowed_realms: null
      +
           # Dedicated port: Git before 2.4 does not fall back to Basic authentication if Negotiate fails.
           # To support both Basic and Negotiate methods with older versions of Git, configure
           # nginx to proxy GitLab on an extra port (e.g. 8443) and uncomment the following lines
      @@ -533,6 +564,13 @@
           # (default: false)
           auto_link_saml_user: null

      +    # Allow users with existing accounts to sign in and auto link their account via OmniAuth
      +    # login, without having to do a manual login first and manually add OmniAuth. Links on email.
      +    # Define the allowed providers using an array, e.g. ["saml", "twitter"], or as true/false to
      +    # allow all providers or none.
      +    # (default: false)
      +    auto_link_user: null
      +
           # Set different Omniauth providers as external so that all users creating accounts
           # via these providers will not be able to have access to internal projects. You
           # will need to use the full name of the provider, like `google_oauth2` for Google.
      @@ -564,10 +602,26 @@
             #     app_secret: 'YOUR APP SECRET',
             #     args: { scope: 'user:email' } }

      +  # FortiAuthenticator settings
      +  forti_authenticator:
      +    # Allow using FortiAuthenticator as OTP provider
      +    enabled: false
      +
      +
      +  # FortiToken Cloud settings
      +  forti_token_cloud:
      +    # Allow using FortiToken Cloud as OTP provider
      +    enabled: false
      +
      +
         # Shared file storage settings
         shared:
           path: /var/opt/gitlab/gitlab-rails/shared

      +  # Encrypted Settings configuration
      +  encrypted_settings:
      +    path: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings
      +
         # Gitaly settings
         # This setting controls whether GitLab uses Gitaly
         # Eventually Gitaly use will become mandatory and
      @@ -642,6 +696,7 @@
           # Sidekiq exporter is webserver built in to Sidekiq to expose Prometheus metrics
           sidekiq_exporter:
             enabled: true
      +      log_enabled: false
             address: 127.0.0.1
             port: 8082

      @@ -654,11 +709,6 @@
         shutdown:
           blackout_seconds: 10

      -  ## ActionCable settings
      -  action_cable:
      -    # Number of threads used to process ActionCable connection callbacks and channel actions
      -    worker_pool_size: 4
      -
         ## Prometheus settings
         # Do not modify these settings here. They should be modified in /etc/gitlab/gitlab.rb
         # if you installed GitLab via Omnibus.
      @@ -666,14 +716,19 @@
         # yourself, and then update the values here.
         # https://docs.gitlab.com/ee/administration/monitoring/prometheus/
         prometheus:
      -    enable: true
      -    listen_address: "localhost:9090"
      +    enabled: true
      +    server_address: "localhost:9090"

      +  ## Consul settings
      +  consul:
      +    api_url: ""
      +
         #
         # 5. Extra customization
         # ==========================

         extra:
      +


         rack_attack:
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)

  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create
      - create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret
      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret from none to 422079
      - suppressed sensitive resource
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create
      - unlink existing symlink to file at /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret
      - create symlink at /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret

  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create
    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/LD_PRELOAD] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)
  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete
    - delete link to file at /var/log/gitlab/gitlab-rails/sidekiq.log
  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create
    - change owner from 'root' to 'git'
  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create/opt/gitlab/embedded/lib/ruby/gems/2.7.0/gems/chef-15.14.0/lib/chef/provider/remote_file/local_file.rb:43: warning: URI.unescape is obsolete

    - update content in file /var/opt/gitlab/gitlab-rails/VERSION from 48de45 to 9851b8
    --- /var/opt/gitlab/gitlab-rails/VERSION    2022-03-18 14:11:47.609589601 +0800
    +++ /var/opt/gitlab/gitlab-rails/.chef-VERSION20220318-1478-n0rj1y  2022-03-18 14:23:28.775293286 +0800
    @@ -1 +1 @@
    -13.0.14
    +13.12.15
  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create/opt/gitlab/embedded/lib/ruby/gems/2.7.0/gems/chef-15.14.0/lib/chef/provider/remote_file/local_file.rb:43: warning: URI.unescape is obsolete

    - update content in file /var/opt/gitlab/gitlab-rails/REVISION from 69a5cf to eefed3
    --- /var/opt/gitlab/gitlab-rails/REVISION   2022-03-18 14:11:47.613589512 +0800
    +++ /var/opt/gitlab/gitlab-rails/.chef-REVISION20220318-1478-gd5kdw 2022-03-18 14:23:28.803292545 +0800
    @@ -1 +1 @@
    -ad4adc9d0e1
    +6614e1562c6
  * version_file[Create version file for Rails] action create
    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create
      - update content in file /var/opt/gitlab/gitlab-rails/RUBY_VERSION from d89bae to 22dcc2
      --- /var/opt/gitlab/gitlab-rails/RUBY_VERSION     2022-03-18 13:48:33.335387461 +0800
      +++ /var/opt/gitlab/gitlab-rails/.chef-RUBY_VERSION20220318-1478-cuw4q6   2022-03-18 14:23:28.867290852 +0800
      @@ -1 +1 @@
      -ruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-linux]
      +ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-linux]

  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)
  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)
Recipe: gitlab::selinux
  * bash[Set proper security context on ssh files for selinux] action nothing (skipped due to action :nothing)
Recipe: gitlab::add_trusted_certs
  * directory[/etc/gitlab/trusted-certs] action create (up to date)
  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)
  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)
  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run

  * Moving existing certificates found in /opt/gitlab/embedded/ssl/certs

  * Symlinking existing certificates found in /etc/gitlab/trusted-certs

    - execute the ruby block Move existing certs and link to /opt/gitlab/embedded/ssl/certs
Recipe: gitlab::default
  * service[create a temporary unicorn service] action nothing (skipped due to action :nothing)
  * service[create a temporary puma service] action nothing (skipped due to action :nothing)
  * service[create a temporary actioncable service] action nothing (skipped due to action :nothing)
  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)
  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)
Recipe: package::runit_systemd
  * directory[/usr/lib/systemd/system] action create (up to date)
  * template[/usr/lib/systemd/system/gitlab-runsvdir.service] action create (up to date)
  * file[/etc/systemd/system/default.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * file[/etc/systemd/system/basic.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
  * execute[systemctl enable gitlab-runsvdir] action nothing (skipped due to action :nothing)
  * execute[systemctl start gitlab-runsvdir] action nothing (skipped due to action :nothing)
Recipe: package::sysctl
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: logrotate::folders_and_configs
  * directory[/var/opt/gitlab/logrotate] action create (up to date)
  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create (up to date)
  * directory[/var/log/gitlab/logrotate] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.conf from bf32ec to 8068c8
    --- /var/opt/gitlab/logrotate/logrotate.conf        2022-03-18 14:12:22.424822766 +0800
    +++ /var/opt/gitlab/logrotate/.chef-logrotate20220318-1478-bx1rp7.conf      2022-03-18 14:23:29.063285668 +0800
    @@ -9,4 +9,6 @@
     include /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell
     include /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse
     include /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages
    +include /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas
    +include /var/opt/gitlab/logrotate/logrotate.d/gitaly
  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/nginx from 85cdbe to e17e19
    --- /var/opt/gitlab/logrotate/logrotate.d/nginx     2022-03-18 13:49:16.890519394 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-nginx20220318-1478-sckggd   2022-03-18 14:23:29.091284928 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/puma from 488f46 to 44ad27
    --- /var/opt/gitlab/logrotate/logrotate.d/puma      2022-03-18 13:49:16.898519233 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-puma20220318-1478-1n0hhkw   2022-03-18 14:23:29.119284188 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/actioncable] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/actioncable from cc6937 to e09d23
    --- /var/opt/gitlab/logrotate/logrotate.d/actioncable       2022-03-18 14:12:22.440822413 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-actioncable20220318-1478-1uagz1f    2022-03-18 14:23:29.151283342 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/unicorn] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/unicorn from 5bb132 to ca6456
    --- /var/opt/gitlab/logrotate/logrotate.d/unicorn   2022-03-18 13:49:16.910518993 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-unicorn20220318-1478-1wxdhk0        2022-03-18 14:23:29.179282601 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails from 46f691 to 26254a
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails      2022-03-18 13:49:16.918518833 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-rails20220318-1478-12id77z   2022-03-18 14:23:29.207281860 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell from d296e1 to 3a880d
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell      2022-03-18 13:49:16.926518673 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-shell20220318-1478-r4fgr4    2022-03-18 14:23:29.231281226 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse from 6f35eb to 3453f6
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse  2022-03-18 13:49:16.930518593 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-workhorse20220318-1478-np36cs        2022-03-18 14:23:29.259280486 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages from 59438b to 3c118a
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages      2022-03-18 13:49:16.950518192 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-pages20220318-1478-5lat87    2022-03-18 14:23:29.283279851 +0800
    @@ -10,6 +10,7 @@
       compress
       copytruncate
       missingok
    +  notifempty
       postrotate

       endscript
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] action create
    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas from none to 0ba4f0
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas        2022-03-18 14:23:29.311279110 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-kas20220318-1478-1fyuisi     2022-03-18 14:23:29.311279110 +0800
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitlab-kas/*.log {
    +  su git git
    +  daily
    +
    +
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] action create
    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitaly
    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitaly from none to 02bda7
    --- /var/opt/gitlab/logrotate/logrotate.d/gitaly    2022-03-18 14:23:29.339278370 +0800
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitaly20220318-1478-2cn1ab  2022-03-18 14:23:29.339278370 +0800
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitaly/*.log {
    +  su git git
    +  daily
    +
    +
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +
    +  endscript
    +}
Recipe: logrotate::enable
  * service[logrotate] action nothing (skipped due to action :nothing)
  * runit_service[logrotate] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/logrotate] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/config] action create
      - create new file /opt/gitlab/sv/logrotate/log/config
      - update content in file /opt/gitlab/sv/logrotate/log/config from none to 623c00
      --- /opt/gitlab/sv/logrotate/log/config   2022-03-18 14:23:29.411276466 +0800
      +++ /opt/gitlab/sv/logrotate/log/.chef-config20220318-1478-fu6sqw 2022-03-18 14:23:29.411276466 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_logrotate] action create
      - execute the ruby block verify_chown_persisted_on_logrotate
    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/logrotate/config] action create
      - unlink existing symlink to file at /var/log/gitlab/logrotate/config
      - create symlink at /var/log/gitlab/logrotate/config to /opt/gitlab/sv/logrotate/log/config
    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
    * link[/opt/gitlab/init/logrotate] action create (up to date)
    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/logrotate] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/logrotate/config] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
      * link[/opt/gitlab/init/logrotate] action create (up to date)
      * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/logrotate] action create (up to date)
      * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/logrotate] action create (up to date)
    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)

Recipe: redis::enable
  * redis_service[redis] action create
    * account[user and group for redis] action create
      * group[user and group for redis] action create (up to date)
      * linux_user[user and group for redis] action create (up to date)
       (up to date)
    * group[Socket group] action create (up to date)
    * directory[/var/opt/gitlab/redis] action create (up to date)
    * directory[/var/log/gitlab/redis] action create (up to date)
    * template[/var/opt/gitlab/redis/redis.conf] action create
      - update content in file /var/opt/gitlab/redis/redis.conf from bce53e to d126ed
      --- /var/opt/gitlab/redis/redis.conf      2022-03-18 14:11:47.793585549 +0800
      +++ /var/opt/gitlab/redis/.chef-redis20220318-1478-1ru44xg.conf   2022-03-18 14:23:30.119257746 +0800
      @@ -628,6 +628,55 @@
       lazyfree-lazy-server-del no
       replica-lazy-flush no

      +################################ THREADED I/O #################################
      +
      +# Redis is mostly single threaded, however there are certain threaded
      +# operations such as UNLINK, slow I/O accesses and other things that are
      +# performed on side threads.
      +#
      +# Now it is also possible to handle Redis clients socket reads and writes
      +# in different I/O threads. Since especially writing is so slow, normally
      +# Redis users use pipelining in order to speed up the Redis performances per
      +# core, and spawn multiple instances in order to scale more. Using I/O
      +# threads it is possible to easily speedup two times Redis without resorting
      +# to pipelining nor sharding of the instance.
      +#
      +# By default threading is disabled, we suggest enabling it only in machines
      +# that have at least 4 or more cores, leaving at least one spare core.
      +# Using more than 8 threads is unlikely to help much. We also recommend using
      +# threaded I/O only if you actually have performance problems, with Redis
      +# instances being able to use a quite big percentage of CPU time, otherwise
      +# there is no point in using this feature.
      +#
      +# So for instance if you have a four cores boxes, try to use 2 or 3 I/O
      +# threads, if you have a 8 cores, try to use 6 threads. In order to
      +# enable I/O threads use the following configuration directive:
      +#
      +# io-threads 4
      +#
      +# Setting io-threads to 1 will just use the main thread as usual.
      +# When I/O threads are enabled, we only use threads for writes, that is
      +# to thread the write(2) syscall and transfer the client buffers to the
      +# socket. However it is also possible to enable threading of reads and
      +# protocol parsing using the following configuration directive, by setting
      +# it to yes:
      +#
      +# io-threads-do-reads no
      +#
      +# Usually threading reads doesn't help much.
      +#
      +# NOTE 1: This configuration directive cannot be changed at runtime via
      +# CONFIG SET. Aso this feature currently does not work when SSL is
      +# enabled.
      +#
      +# NOTE 2: If you want to test the Redis speedup using redis-benchmark, make
      +# sure you also run the benchmark itself in threaded mode, using the
      +# --threads option to match the number of Redis threads, otherwise you'll not
      +# be able to notice the improvements.
      +
      +io-threads 1
      +io-threads-do-reads no
      +
       ############################## APPEND ONLY MODE ###############################

       # By default Redis asynchronously dumps the dataset on disk. This mode is
    * runit_service[redis] action restart (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis] action create (up to date)
      * template[/opt/gitlab/sv/redis/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/config] action create
        - create new file /opt/gitlab/sv/redis/log/config
        - update content in file /opt/gitlab/sv/redis/log/config from none to 623c00
        --- /opt/gitlab/sv/redis/log/config     2022-03-18 14:23:30.655243576 +0800
        +++ /opt/gitlab/sv/redis/log/.chef-config20220318-1478-fik2w5   2022-03-18 14:23:30.655243576 +0800
        @@ -1,6 +1,12 @@
        +s209715200
        +n30
        +t86400
        +!gzip
        +
        +
        - change mode from '' to '0644'
        - change owner from '' to 'root'
        - change group from '' to 'root'
      * ruby_block[verify_chown_persisted_on_redis] action create
        - execute the ruby block verify_chown_persisted_on_redis
      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis/config] action create
        - unlink existing symlink to file at /var/log/gitlab/redis/config
        - create symlink at /var/log/gitlab/redis/config to /opt/gitlab/sv/redis/log/config
      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis/control] action create (up to date)
      * link[/opt/gitlab/init/redis] action create (up to date)
      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action create
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/sv/redis] action create (up to date)
        * template[/opt/gitlab/sv/redis/run] action create (up to date)
        * directory[/opt/gitlab/sv/redis/log] action create (up to date)
        * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
        * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
        * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
        * link[/var/log/gitlab/redis/config] action create (up to date)
        * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
        * directory[/opt/gitlab/sv/redis/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
        * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
        * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
        * directory[/opt/gitlab/sv/redis/control] action create (up to date)
        * link[/opt/gitlab/init/redis] action create (up to date)
        * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/service] action create (up to date)
        * link[/opt/gitlab/service/redis] action create (up to date)
        * ruby_block[wait for redis service socket] action run (skipped due to not_if)
        - execute the ruby block reload_log_service
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis] action create (up to date)
      * ruby_block[wait for redis service socket] action run (skipped due to not_if)

    * ruby_block[warn pending redis restart] action run (skipped due to only_if)

Recipe: redis::enable
  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)
Recipe: gitaly::enable
  * directory[/var/opt/gitlab/gitaly] action create (up to date)
  * directory[/var/log/gitlab/gitaly] action create (up to date)
  * directory[/var/opt/gitlab/gitaly/internal_sockets] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitaly/env] action create
    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)
     (up to date)
  * template[Create Gitaly config.toml] action create
    - update content in file /var/opt/gitlab/gitaly/config.toml from b2ff9a to 2d31eb
    --- /var/opt/gitlab/gitaly/config.toml      2022-03-18 14:11:48.489570223 +0800
    +++ /var/opt/gitlab/gitaly/.chef-config20220318-1478-3698tn.toml    2022-03-18 14:23:31.563219574 +0800
    @@ -34,6 +34,23 @@

     [gitlab-shell]
     dir = "/opt/gitlab/embedded/service/gitlab-shell"
    -gitlab_url = 'http://127.0.0.1:8080'
    +
    +[gitlab]
    +url = 'http+unix://%2Fvar%2Fopt%2Fgitlab%2Fgitlab-workhorse%2Fsockets%2Fsocket'
    +relative_url_root = ''
    +
    +
    +[hooks]
    +
    +
    +
    +[daily_maintenance]
    +
    +
    +
    +
    +
    +
    +

  * service[gitaly] action nothing (skipped due to action :nothing)
  * runit_service[gitaly] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitaly] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/config] action create
      - create new file /opt/gitlab/sv/gitaly/log/config
      - update content in file /opt/gitlab/sv/gitaly/log/config from none to 623c00
      --- /opt/gitlab/sv/gitaly/log/config      2022-03-18 14:23:31.639217566 +0800
      +++ /opt/gitlab/sv/gitaly/log/.chef-config20220318-1478-10fp8hc   2022-03-18 14:23:31.639217566 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_gitaly] action create
      - execute the ruby block verify_chown_persisted_on_gitaly
    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitaly/config] action create
      - unlink existing symlink to file at /var/log/gitlab/gitaly/config
      - create symlink at /var/log/gitlab/gitaly/config to /opt/gitlab/sv/gitaly/log/config
    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
    * link[/opt/gitlab/init/gitaly] action create (up to date)
    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitaly] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitaly/config] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
      * link[/opt/gitlab/init/gitaly] action create (up to date)
      * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitaly] action create (up to date)
      * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitaly] action create (up to date)
    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)

  * version_file[Create version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/VERSION] action create
      - update content in file /var/opt/gitlab/gitaly/VERSION from 2eedf2 to 9d34f1
      --- /var/opt/gitlab/gitaly/VERSION        2022-03-18 14:11:48.765564145 +0800
      +++ /var/opt/gitlab/gitaly/.chef-VERSION20220318-1478-ue37eb      2022-03-18 14:23:32.511194523 +0800
      @@ -1 +1 @@
      -Gitaly, version 13.0.14
      +Gitaly, version 13.12.15

  * version_file[Create Ruby version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/RUBY_VERSION] action create
      - create new file /var/opt/gitlab/gitaly/RUBY_VERSION
      - update content in file /var/opt/gitlab/gitaly/RUBY_VERSION from none to 22dcc2
      --- /var/opt/gitlab/gitaly/RUBY_VERSION   2022-03-18 14:23:32.575192832 +0800
      +++ /var/opt/gitlab/gitaly/.chef-RUBY_VERSION20220318-1478-1lf19mc        2022-03-18 14:23:32.575192832 +0800
      @@ -1 +1,2 @@
      +ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-linux]

  * consul_service[gitaly] action delete
    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)
     (up to date)
Recipe: postgresql::bin
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)
Recipe: postgresql::user
  * account[Postgresql user and group] action create
    * group[Postgresql user and group] action create (up to date)
    * linux_user[Postgresql user and group] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)
Recipe: postgresql::sysctl
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)
    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: postgresql::enable
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/log/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * link[/var/opt/gitlab/postgresql/data] action create (skipped due to not_if)
  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)
  * file[/var/opt/gitlab/postgresql/data/server.crt] action create (up to date)
  * file[/var/opt/gitlab/postgresql/data/server.key] action create (up to date)
  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create (up to date)
     (up to date)
Recipe: postgresql::standalone
  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
    * link[/opt/gitlab/init/postgresql] action create (up to date)
    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch
      - change owner from 'root' to 'gitlab-psql'
      - change group from 'root' to 'gitlab-psql'
      - update utime on file /opt/gitlab/service/postgresql/supervise/status
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)

  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)
      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
     (up to date)
  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)
Recipe: praefect::disable
  * service[praefect] action nothing (skipped due to action :nothing)
  * runit_service[praefect] action disable
    * ruby_block[disable praefect] action run (skipped due to only_if)
     (up to date)
  * consul_service[praefect] action delete
    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab-kas::disable
  * service[gitlab-kas] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-kas] action disable
    * ruby_block[disable gitlab-kas] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::database_migrations
  * ruby_block[check remote PG version] action nothing (skipped due to action :nothing)
  * rails_migration[gitlab-rails] action run
    * bash[migrate gitlab-rails database] action run
      [execute] == 20191112212815 CreateWebAuthnTable: migrating ==============================
                -- create_table(:webauthn_registrations)
                   -> 0.0262s
                == 20191112212815 CreateWebAuthnTable: migrated (0.0263s) =====================

                == 20200229171700 CreateCustomEmojis: migrating ===============================
                -- table_exists?(:custom_emoji)
                   -> 0.0005s
                -- create_table(:custom_emoji, {})
                   -> 0.0060s
                -- index_exists?(:custom_emoji, [:namespace_id, :name], {:unique=>true})
                   -> 0.0015s
                -- add_index(:custom_emoji, [:namespace_id, :name], {:unique=>true})
                   -> 0.0033s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE custom_emoji\nADD CONSTRAINT check_8c586dd507\nCHECK ( char_length(name) <= 36 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE custom_emoji VALIDATE CONSTRAINT check_8c586dd507;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE custom_emoji\nADD CONSTRAINT check_dd5d60f1fb\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE custom_emoji VALIDATE CONSTRAINT check_dd5d60f1fb;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200229171700 CreateCustomEmojis: migrated (0.0243s) ======================

                == 20200305020458 AddLabelRestoreTable: migrating =============================
                -- execute("CREATE TABLE backup_labels (LIKE labels INCLUDING ALL);")
                   -> 0.0123s
                -- execute("ALTER TABLE backup_labels ALTER COLUMN ID DROP DEFAULT;")
                   -> 0.0004s
                -- execute("ALTER TABLE backup_labels ADD COLUMN restore_action INTEGER;")
                   -> 0.0003s
                -- execute("ALTER TABLE backup_labels ADD COLUMN new_title VARCHAR;")
                   -> 0.0003s
                == 20200305020458 AddLabelRestoreTable: migrated (0.0133s) ====================

                == 20200305020459 AddLabelRestoreForeignKeys: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:backup_labels)
                   -> 0.0036s
                -- execute("ALTER TABLE backup_labels\nADD CONSTRAINT fk_7de4989a69\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0013s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE backup_labels VALIDATE CONSTRAINT fk_7de4989a69;")
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:backup_labels)
                   -> 0.0040s
                -- execute("ALTER TABLE backup_labels\nADD CONSTRAINT fk_rails_c1ac5161d8\nFOREIGN KEY (group_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE backup_labels VALIDATE CONSTRAINT fk_rails_c1ac5161d8;")
                   -> 0.0017s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200305020459 AddLabelRestoreForeignKeys: migrated (0.0236s) ==============

                == 20200305082754 RemoveDuplicateLabelsFromProject: migrating =================
                -- transaction()
                   -> 0.0046s
                -- transaction()
                   -> 0.0011s
                == 20200305082754 RemoveDuplicateLabelsFromProject: migrated (0.0967s) ========

                == 20200305082858 AddUniquenessIndexToLabelTitleAndProject: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:labels, [:project_id, :title], {:where=>"labels.group_id IS NULL", :unique=>true, :name=>"index_labels_on_project_id_and_title_unique", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:labels, [:project_id, :title], {:where=>"labels.group_id IS NULL", :unique=>true, :name=>"index_labels_on_project_id_and_title_unique", :algorithm=>:concurrently})
                   -> 0.0069s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:labels, [:project_id, :title], {:name=>"index_labels_on_project_id_and_title", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:labels, {:name=>"index_labels_on_project_id_and_title", :algorithm=>:concurrently, :column=>[:project_id, :title]})
                   -> 0.0077s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200305082858 AddUniquenessIndexToLabelTitleAndProject: migrated (0.0237s)

                == 20200325094612 AddAllowMergeOnSkippedPipelineToProjectSettings: migrating ==
                -- add_column(:project_settings, :allow_merge_on_skipped_pipeline, :boolean)
                   -> 0.0007s
                == 20200325094612 AddAllowMergeOnSkippedPipelineToProjectSettings: migrated (0.0007s)

                == 20200330203826 DropFkInCiRef: migrating ====================================
                -- foreign_keys(:ci_refs)
                   -> 0.0038s
                -- remove_foreign_key(:ci_refs, {:column=>:project_id})
                   -> 0.0044s
                -- foreign_keys(:ci_refs)
                   -> 0.0037s
                -- remove_foreign_key(:ci_refs, {:column=>:last_updated_by_pipeline_id})
                   -> 0.0041s
                == 20200330203826 DropFkInCiRef: migrated (0.0193s) ===========================

                == 20200330203837 RecreateCiRef: migrating ====================================
                -- drop_table(:ci_refs)
                   -> 0.0014s
                -- create_table(:ci_refs)
                   -> 0.0086s
                == 20200330203837 RecreateCiRef: migrated (0.0113s) ===========================

                == 20200331103637 AddCiRefIdToCiPipelines: migrating ==========================
                -- add_column(:ci_pipelines, :ci_ref_id, :bigint)
                   -> 0.0006s
                == 20200331103637 AddCiRefIdToCiPipelines: migrated (0.0020s) =================

                == 20200331113728 AddIndexToCiRefId: migrating ================================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:ci_ref_id], {:where=>"ci_ref_id IS NOT NULL", :algorithm=>:concurrently})
                   -> 0.0064s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:ci_ref_id], {:where=>"ci_ref_id IS NOT NULL", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200331113728 AddIndexToCiRefId: migrated (0.0111s) =======================

                == 20200331113738 AddFkToCiRefId: migrating ===================================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:ci_pipelines)
                   -> 0.0037s
                -- execute("ALTER TABLE ci_pipelines\nADD CONSTRAINT fk_d80e161c54\nFOREIGN KEY (ci_ref_id)\nREFERENCES ci_refs (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipelines VALIDATE CONSTRAINT fk_d80e161c54;")
                   -> 0.0015s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200331113738 AddFkToCiRefId: migrated (0.0083s) ==========================

                == 20200408132152 RemoveNamespacesTrialEndsOn: migrating ======================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:namespaces)
                   -> 0.0071s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:namespaces, {:algorithm=>:concurrently, :name=>"index_namespaces_on_trial_ends_on"})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- remove_column(:namespaces, :trial_ends_on)
                   -> 0.0005s
                == 20200408132152 RemoveNamespacesTrialEndsOn: migrated (0.0131s) =============

                == 20200421054930 RemoveIndexOnPipelineIdFromCiPipelineVariables: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_pipeline_variables)
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_pipeline_variables, {:algorithm=>:concurrently, :name=>"index_ci_pipeline_variables_on_pipeline_id"})
                   -> 0.0023s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200421054930 RemoveIndexOnPipelineIdFromCiPipelineVariables: migrated (0.0050s)

                == 20200421054948 RemoveIndexOnPipelineIdFromCiVariables: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_variables)
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_variables, {:algorithm=>:concurrently, :name=>"index_ci_variables_on_project_id"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200421054948 RemoveIndexOnPipelineIdFromCiVariables: migrated (0.0051s) ==

                == 20200421195234 BackfillStatusPagePublishedIncidents: migrating =============
                == 20200421195234 BackfillStatusPagePublishedIncidents: migrated (0.0194s) ====

                == 20200424102023 AddSharedRunnersEnabledAndOverrideToNamespaces: migrating ===
                -- add_column(:namespaces, :shared_runners_enabled, :boolean, {:default=>true, :null=>false})
                   -> 0.0011s
                -- add_column(:namespaces, :allow_descendants_override_disabled_shared_runners, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20200424102023 AddSharedRunnersEnabledAndOverrideToNamespaces: migrated (0.0035s)

                == 20200429023324 AddComposerMetadata: migrating ==============================
                -- create_table(:packages_composer_metadata, {:id=>false})
                   -> 0.0051s
                == 20200429023324 AddComposerMetadata: migrated (0.0052s) =====================

                == 20200430123614 CreateProjectAccessTokens: migrating ========================
                -- create_table(:project_access_tokens, {:primary_key=>[:personal_access_token_id, :project_id]})
                   -> 0.0022s
                -- add_index(:project_access_tokens, :project_id)
                   -> 0.0027s
                == 20200430123614 CreateProjectAccessTokens: migrated (0.0050s) ===============

                == 20200430174637 CreateGroupDeployKeys: migrating ============================
                -- table_exists?(:group_deploy_keys)
                   -> 0.0004s
                -- create_table(:group_deploy_keys)
                   -> 0.0130s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE group_deploy_keys\nADD CONSTRAINT check_f58fa0a0f7\nCHECK ( char_length(key) <= 4096 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE group_deploy_keys VALIDATE CONSTRAINT check_f58fa0a0f7;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE group_deploy_keys\nADD CONSTRAINT check_cc0365908d\nCHECK ( char_length(title) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE group_deploy_keys VALIDATE CONSTRAINT check_cc0365908d;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE group_deploy_keys\nADD CONSTRAINT check_e4526dcf91\nCHECK ( char_length(fingerprint) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE group_deploy_keys VALIDATE CONSTRAINT check_e4526dcf91;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200430174637 CreateGroupDeployKeys: migrated (0.0303s) ===================

                == 20200504191813 AddFingerprintToEvents: migrating ===========================
                -- column_exists?(:events, :fingerprint)
                   -> 0.0013s
                -- add_column(:events, :fingerprint, :binary)
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE events\nADD CONSTRAINT check_97e06e05ad\nCHECK ( octet_length(fingerprint) <= 128 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE events VALIDATE CONSTRAINT check_97e06e05ad;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200504191813 AddFingerprintToEvents: migrated (0.0096s) ==================

                == 20200504200709 AddIndexOnFingerprintAndTargetTypeToEvents: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:events, [:target_type, :target_id, :fingerprint], {:using=>:btree, :unique=>true, :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:events, [:target_type, :target_id, :fingerprint], {:using=>:btree, :unique=>true, :algorithm=>:concurrently})
                   -> 0.0051s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200504200709 AddIndexOnFingerprintAndTargetTypeToEvents: migrated (0.0098s)

                == 20200508021128 RemoveUltraauthProviderFromIdentities: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:identities, :provider, {:algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:identities, :provider, {:algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- execute("DELETE FROM identities WHERE provider = 'ultraauth'")
                   -> 0.0006s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:identities, :provider, {:algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:identities, {:algorithm=>:concurrently, :column=>:provider})
                   -> 0.0048s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200508021128 RemoveUltraauthProviderFromIdentities: migrated (0.0150s) ===

                == 20200508050301 AddSpamCheckEndpointToApplicationSettings: migrating ========
                -- column_exists?(:application_settings, :spam_check_endpoint_url)
                   -> 0.0340s
                -- add_column(:application_settings, :spam_check_endpoint_url, :text)
                   -> 0.0010s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_d820146492\nCHECK ( char_length(spam_check_endpoint_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_d820146492;")
                   -> 0.0009s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- column_exists?(:application_settings, :spam_check_endpoint_enabled)
                   -> 0.0345s
                -- add_column(:application_settings, :spam_check_endpoint_enabled, :boolean, {:null=>false, :default=>false})
                   -> 0.0016s
                == 20200508050301 AddSpamCheckEndpointToApplicationSettings: migrated (0.0771s)

                == 20200508140959 AddElasticsearchPauseIndexingToApplicationSettings: migrating
                -- add_column(:application_settings, :elasticsearch_pause_indexing, :boolean, {:default=>false, :null=>false})
                   -> 0.0012s
                == 20200508140959 AddElasticsearchPauseIndexingToApplicationSettings: migrated (0.0028s)

                == 20200508203901 AddRepositoryStoragesWeightedToApplicationSettings: migrating
                -- add_column(:application_settings, :repository_storages_weighted, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0014s
                == 20200508203901 AddRepositoryStoragesWeightedToApplicationSettings: migrated (0.2811s)

                == 20200509203901 ReseedRepositoryStoragesWeighted: migrating =================
                == 20200509203901 ReseedRepositoryStoragesWeighted: migrated (0.3069s) ========

                == 20200510181937 AddWebAuthnXidToUserDetails: migrating ======================
                -- add_column(:user_details, :webauthn_xid, :text)
                   -> 0.0028s
                == 20200510181937 AddWebAuthnXidToUserDetails: migrated (0.0029s) =============

                == 20200510182218 AddTextLimitToUserDetailsWebauthnXid: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE user_details\nADD CONSTRAINT check_245664af82\nCHECK ( char_length(webauthn_xid) <= 100 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE user_details VALIDATE CONSTRAINT check_245664af82;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200510182218 AddTextLimitToUserDetailsWebauthnXid: migrated (0.0054s) ====

                == 20200510182556 AddTextLimitToWebauthnRegistrationsName: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE webauthn_registrations\nADD CONSTRAINT check_2f02e74321\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE webauthn_registrations VALIDATE CONSTRAINT check_2f02e74321;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200510182556 AddTextLimitToWebauthnRegistrationsName: migrated (0.0049s) =

                == 20200510182824 AddTextLimitToWebauthnRegistrationsCredentialXid: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE webauthn_registrations\nADD CONSTRAINT check_242f0cc65c\nCHECK ( char_length(credential_xid) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                NOTICE:  extension "btree_gist" already exists, skipping
                -- execute("ALTER TABLE webauthn_registrations VALIDATE CONSTRAINT check_242f0cc65c;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200510182824 AddTextLimitToWebauthnRegistrationsCredentialXid: migrated (0.0073s)

                == 20200510183128 AddForeignKeyFromWebauthnRegistrationsToUsers: migrating ====
                -- add_foreign_key(:webauthn_registrations, :users, {:column=>:user_id, :on_delete=>:cascade})
                   -> 0.0025s
                == 20200510183128 AddForeignKeyFromWebauthnRegistrationsToUsers: migrated (0.0038s)

                == 20200511181027 CreateTestReports: migrating ================================
                -- create_table(:requirements_management_test_reports)
                   -> 0.0120s
                == 20200511181027 CreateTestReports: migrated (0.0121s) =======================

                == 20200511191027 AddAuthorForeignKeyToTestReports: migrating =================
                -- add_foreign_key(:requirements_management_test_reports, :users, {:column=>:author_id, :on_delete=>:nullify})
                   -> 0.0015s
                == 20200511191027 AddAuthorForeignKeyToTestReports: migrated (0.0028s) ========

                == 20200511208012 AddPipelineForeignKeyToTestReports: migrating ===============
                -- add_foreign_key(:requirements_management_test_reports, :ci_pipelines, {:column=>:pipeline_id, :on_delete=>:nullify})
                   -> 0.0011s
                == 20200511208012 AddPipelineForeignKeyToTestReports: migrated (0.0024s) ======

                == 20200512160004 AddIndexToCiJobArtifactsForTerraformReports: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_job_artifacts, [:project_id, :id], {:where=>"file_type = 18", :name=>"index_ci_job_artifacts_for_terraform_reports", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_job_artifacts, [:project_id, :id], {:where=>"file_type = 18", :name=>"index_ci_job_artifacts_for_terraform_reports", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200512160004 AddIndexToCiJobArtifactsForTerraformReports: migrated (0.0077s)

                == 20200512195442 UpdateIndexOnNameTypeEqCiBuildToCiBuilds: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:name, :id], {:name=>"index_security_ci_builds_on_name_and_id", :where=>"((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text,\n                ('dast'::character varying)::text,\n                ('dependency_scanning'::character varying)::text,\n                ('license_management'::character varying)::text,\n                ('sast'::character varying)::text,\n                ('secret_detection'::character varying)::text,\n                ('license_scanning'::character varying)::text])) AND ((type)::text = 'Ci::Build'::text)", :algorithm=>:concurrently})
                   -> 0.0113s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:name, :id], {:name=>"index_security_ci_builds_on_name_and_id", :where=>"((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text,\n                ('dast'::character varying)::text,\n                ('dependency_scanning'::character varying)::text,\n                ('license_management'::character varying)::text,\n                ('sast'::character varying)::text,\n                ('secret_detection'::character varying)::text,\n                ('license_scanning'::character varying)::text])) AND ((type)::text = 'Ci::Build'::text)", :algorithm=>:concurrently})
                   -> 0.0044s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0110s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"index_ci_builds_on_name_and_security_type_eq_ci_build"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200512195442 UpdateIndexOnNameTypeEqCiBuildToCiBuilds: migrated (0.0311s)

                == 20200515152649 EnableBtreeGistExtension: migrating =========================
                -- execute("CREATE EXTENSION IF NOT EXISTS btree_gist")
                   -> 0.0008s
                == 20200515152649 EnableBtreeGistExtension: migrated (0.0009s) ================

                == 20200515153633 IterationDateRangeConstraint: migrating =====================
                -- execute("ALTER TABLE sprints\n  ADD CONSTRAINT iteration_start_and_due_daterange_project_id_constraint\n  EXCLUDE USING gist\n  ( project_id WITH =,\n    daterange(start_date, due_date, '[]') WITH &&\n  )\n  WHERE (project_id IS NOT NULL)\n")
                   -> 0.0017s
                -- execute("ALTER TABLE sprints\n  ADD CONSTRAINT iteration_start_and_due_daterange_group_id_constraint\n  EXCLUDE USING gist\n  ( group_id WITH =,\n    daterange(start_date, due_date, '[]') WITH &&\n  )\n  WHERE (group_id IS NOT NULL)\n")
                   -> 0.0008s
                == 20200515153633 IterationDateRangeConstraint: migrated (0.0026s) ============

                == 20200518091745 AddIndexToPersonalAccessTokenImpersonation: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:personal_access_tokens, [:id, :expires_at], {:where=>"impersonation = FALSE AND revoked = FALSE AND expire_notification_delivered = FALSE", :name=>"index_expired_and_not_notified_personal_access_tokens", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:personal_access_tokens, [:id, :expires_at], {:where=>"impersonation = FALSE AND revoked = FALSE AND expire_notification_delivered = FALSE", :name=>"index_expired_and_not_notified_personal_access_tokens", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200518091745 AddIndexToPersonalAccessTokenImpersonation: migrated (0.0072s)

                == 20200518114540 ScheduleFixRubyObjectInAuditEvents: migrating ===============
                == 20200518114540 ScheduleFixRubyObjectInAuditEvents: migrated (0.0001s) ======

                == 20200518133123 AddIndexOnStartingEndingAtToMetricsDashboardAnnotations: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:metrics_dashboard_annotations, "COALESCE(ending_at, starting_at)", {:name=>"index_metrics_dashboard_annotations_on_timespan_end", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:metrics_dashboard_annotations, "COALESCE(ending_at, starting_at)", {:name=>"index_metrics_dashboard_annotations_on_timespan_end", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200518133123 AddIndexOnStartingEndingAtToMetricsDashboardAnnotations: migrated (0.0061s)

                == 20200519074709 UpdateResourceStateEventsConstraintToSupportEpicId: migrating
                -- execute("ALTER TABLE resource_state_events\nDROP CONSTRAINT IF EXISTS resource_state_events_must_belong_to_issue_or_merge_request\n")
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE resource_state_events\nADD CONSTRAINT resource_state_events_must_belong_to_issue_or_merge_request_or_\nCHECK ( (issue_id != NULL AND merge_request_id IS NULL AND epic_id IS NULL) OR (issue_id IS NULL AND merge_request_id != NULL AND epic_id IS NULL) OR(issue_id IS NULL AND merge_request_id IS NULL AND epic_id != NULL) )\nNOT VALID;\n")
                   -> 0.0006s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE resource_state_events VALIDATE CONSTRAINT resource_state_events_must_belong_to_issue_or_merge_request_or_;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200519074709 UpdateResourceStateEventsConstraintToSupportEpicId: migrated (0.0075s)

                == 20200519101002 AddErrorMessageColumnToJiraImports: migrating ===============
                -- column_exists?(:jira_imports, :error_message)
                   -> 0.0014s
                -- add_column(:jira_imports, :error_message, :text)
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE jira_imports\nADD CONSTRAINT check_9ed451c5b1\nCHECK ( char_length(error_message) <= 1000 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE jira_imports VALIDATE CONSTRAINT check_9ed451c5b1;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200519101002 AddErrorMessageColumnToJiraImports: migrated (0.0072s) ======

                == 20200519115908 AddEpicsConfidentialIndex: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:epics, :confidential, {:algorithm=>:concurrently})
                   -> 0.0058s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:epics, :confidential, {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200519115908 AddEpicsConfidentialIndex: migrated (0.0103s) ===============

                == 20200519141534 AddInstanceLevelVariablesColumnToPlanLimits: migrating ======
                -- add_column(:plan_limits, :ci_instance_level_variables, :integer, {:default=>25, :null=>false})
                   -> 0.0010s
                == 20200519141534 AddInstanceLevelVariablesColumnToPlanLimits: migrated (0.0010s)

                == 20200519171058 UpdateIndexCiBuildsOnCommitIdAndArtifactsExpireatandidpartial: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:commit_id, :artifacts_expire_at, :id], {:name=>"index_ci_builds_on_commit_id_artifacts_expired_at_and_id", :where=>"type::text = 'Ci::Build'::text AND (retried = false OR retried IS NULL) AND\n               (name::text = ANY (ARRAY['sast'::character varying,\n               'secret_detection'::character varying,\n               'dependency_scanning'::character varying,\n               'container_scanning'::character varying,\n               'dast'::character varying]::text[]))", :algorithm=>:concurrently})
                   -> 0.0108s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:commit_id, :artifacts_expire_at, :id], {:name=>"index_ci_builds_on_commit_id_artifacts_expired_at_and_id", :where=>"type::text = 'Ci::Build'::text AND (retried = false OR retried IS NULL) AND\n               (name::text = ANY (ARRAY['sast'::character varying,\n               'secret_detection'::character varying,\n               'dependency_scanning'::character varying,\n               'container_scanning'::character varying,\n               'dast'::character varying]::text[]))", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0110s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"index_ci_builds_on_commit_id_and_artifacts_expireatandidpartial"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200519171058 UpdateIndexCiBuildsOnCommitIdAndArtifactsExpireatandidpartial: migrated (0.0301s)

                == 20200519194042 UpdateContainerExpirationPoliciesDefaults: migrating ========
                -- change_column_default(:container_expiration_policies, :cadence, "1d")
                   -> 0.0019s
                -- change_column_default(:container_expiration_policies, :keep_n, 10)
                   -> 0.0016s
                -- change_column_default(:container_expiration_policies, :older_than, "90d")
                   -> 0.0015s
                == 20200519194042 UpdateContainerExpirationPoliciesDefaults: migrated (0.0065s)

                == 20200519201128 MigrateVulnerabilityDismissalFeedback: migrating ============
                == 20200519201128 MigrateVulnerabilityDismissalFeedback: migrated (0.0001s) ===

                == 20200520103514 AddTodoResolvedByAction: migrating ==========================
                -- add_column(:todos, :resolved_by_action, :integer, {:limit=>2})
                   -> 0.0005s
                == 20200520103514 AddTodoResolvedByAction: migrated (0.0017s) =================

                == 20200521022725 AddExperienceLevelToUserPreferences: migrating ==============
                -- add_column(:user_preferences, :experience_level, :integer, {:limit=>2})
                   -> 0.0007s
                == 20200521022725 AddExperienceLevelToUserPreferences: migrated (0.0008s) =====

                == 20200521225327 CreateAlertManagementAlertAssignees: migrating ==============
                -- create_table(:alert_management_alert_assignees)
                   -> 0.0082s
                == 20200521225327 CreateAlertManagementAlertAssignees: migrated (0.0082s) =====

                == 20200521225337 AddForeignKeyToUserIdOnAlertManagementAlertAssignees: migrating
                -- add_foreign_key(:alert_management_alert_assignees, :users, {:column=>:user_id, :on_delete=>:cascade})
                   -> 0.0015s
                == 20200521225337 AddForeignKeyToUserIdOnAlertManagementAlertAssignees: migrated (0.0028s)

                == 20200521225346 AddForeignKeyToAlertIdOnAlertMangagementAlertAssignees: migrating
                -- add_foreign_key(:alert_management_alert_assignees, :alert_management_alerts, {:column=>:alert_id, :on_delete=>:cascade})
                   -> 0.0012s
                == 20200521225346 AddForeignKeyToAlertIdOnAlertMangagementAlertAssignees: migrated (0.0025s)

                == 20200522205606 CreateGroupDeployKeysGroup: migrating =======================
                -- create_table(:group_deploy_keys_groups)
                   -> 0.0092s
                == 20200522205606 CreateGroupDeployKeysGroup: migrated (0.0106s) ==============

                == 20200522235146 AddIndexOnSnippetTypeAndId: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippets, [:id, :type], {:algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippets, [:id, :type], {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200522235146 AddIndexOnSnippetTypeAndId: migrated (0.0087s) ==============

                == 20200524104346 AddSourceToResourceStateEvent: migrating ====================
                -- column_exists?(:resource_state_events, :source_commit)
                   -> 0.0012s
                -- add_column(:resource_state_events, :source_commit, :text)
                   -> 0.0027s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE resource_state_events\nADD CONSTRAINT check_f0bcfaa3a2\nCHECK ( char_length(source_commit) <= 40 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE resource_state_events VALIDATE CONSTRAINT check_f0bcfaa3a2;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200524104346 AddSourceToResourceStateEvent: migrated (0.0091s) ===========

                == 20200525114553 RenameUserTypeIndex: migrating ==============================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:users, [:state, :user_type], {:name=>"index_users_on_state_and_user_type", :algorithm=>:concurrently})
                   -> 0.0093s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:users, [:state, :user_type], {:name=>"index_users_on_state_and_user_type", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:users)
                   -> 0.0096s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:users, {:algorithm=>:concurrently, :name=>"index_users_on_state_and_user_type_internal"})
                   -> 0.0031s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200525114553 RenameUserTypeIndex: migrated (0.0272s) =====================

                == 20200525121014 DropUsersGhostColumn: migrating =============================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:users)
                   -> 0.0092s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:users, {:algorithm=>:concurrently, :name=>"index_users_on_ghost"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- remove_column(:users, :ghost)
                   -> 0.0006s
                == 20200525121014 DropUsersGhostColumn: migrated (0.0146s) ====================

                == 20200525144525 MigrateStuckImportJobsQueueToStuckProjectImportJobs: migrating
                == 20200525144525 MigrateStuckImportJobsQueueToStuckProjectImportJobs: migrated (0.0006s)

                == 20200526000407 SeedRepositoryStoragesWeighted: migrating ===================
                == 20200526000407 SeedRepositoryStoragesWeighted: migrated (0.2801s) ==========

                == 20200526013844 AddAlertEventsToServices: migrating =========================
                -- add_column(:services, :alert_events, :boolean)
                   -> 0.0006s
                == 20200526013844 AddAlertEventsToServices: migrated (0.0021s) ================

                == 20200526115436 DedupMrMetrics: migrating ===================================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_metrics, :merge_request_id, {:where=>"id > 28", :unique=>true, :name=>"tmp_unique_merge_request_metrics_by_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_metrics, :merge_request_id, {:where=>"id > 28", :unique=>true, :name=>"tmp_unique_merge_request_metrics_by_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_metrics, :merge_request_id, {:unique=>true, :name=>"unique_merge_request_metrics_by_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_metrics, :merge_request_id, {:unique=>true, :name=>"unique_merge_request_metrics_by_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_request_metrics)
                   -> 0.0044s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_request_metrics, {:algorithm=>:concurrently, :name=>"tmp_unique_merge_request_metrics_by_merge_request_id"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200526115436 DedupMrMetrics: migrated (0.0618s) ==========================

                == 20200526120714 ChangePartialIndexesOnServices: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:services, [:type, :instance], {:unique=>true, :where=>"instance = true", :name=>"index_services_on_type_and_instance_partial", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:services, [:type, :instance], {:unique=>true, :where=>"instance = true", :name=>"index_services_on_type_and_instance_partial", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:services)
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:services, {:algorithm=>:concurrently, :name=>"index_services_on_type_and_instance"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:services, [:type, :template], {:unique=>true, :where=>"template = true", :name=>"index_services_on_type_and_template_partial", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:services, [:type, :template], {:unique=>true, :where=>"template = true", :name=>"index_services_on_type_and_template_partial", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:services)
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:services, {:algorithm=>:concurrently, :name=>"index_services_on_type_and_template"})
                   -> 0.0023s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200526120714 ChangePartialIndexesOnServices: migrated (0.0318s) ==========

                == 20200526142550 DropNullConstraintOnGroupImportStateJid: migrating ==========
                -- change_column_null(:group_import_states, :jid, true)
                   -> 0.0006s
                == 20200526142550 DropNullConstraintOnGroupImportStateJid: migrated (0.0006s) =

                == 20200526153844 AddIssuesLastEditedByIdIndex: migrating =====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, :last_edited_by_id, {:algorithm=>:concurrently})
                   -> 0.0093s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, :last_edited_by_id, {:algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:epics, :last_edited_by_id, {:algorithm=>:concurrently})
                   -> 0.0064s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:epics, :last_edited_by_id, {:algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200526153844 AddIssuesLastEditedByIdIndex: migrated (0.0246s) ============

                == 20200526164946 CreateOperationsFeatureFlagsIssues: migrating ===============
                -- create_table(:operations_feature_flags_issues)
                   -> 0.0090s
                == 20200526164946 CreateOperationsFeatureFlagsIssues: migrated (0.0091s) ======

                == 20200526164947 AddForeignKeyToOpsFeatureFlagsIssues: migrating =============
                -- add_foreign_key(:operations_feature_flags_issues, :issues, {:column=>:issue_id, :on_delete=>:cascade})
                   -> 0.0014s
                == 20200526164947 AddForeignKeyToOpsFeatureFlagsIssues: migrated (0.0031s) ====

                == 20200526193555 AddSquashOptionToProject: migrating =========================
                -- add_column(:project_settings, :squash_option, :integer, {:default=>3, :limit=>2})
                   -> 0.0010s
                == 20200526193555 AddSquashOptionToProject: migrated (0.0011s) ================

                == 20200526231421 UpdateIndexApprovalRuleNameForCodeOwnersRuleType: migrating =
                -- indexes(:approval_merge_request_rules)
                   -> 0.0033s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approval_merge_request_rules, [:merge_request_id, :name, :section], {:unique=>true, :where=>"rule_type = 2", :name=>"index_approval_rule_name_for_sectional_code_owners_rule_type", :algorithm=>:concurrently})
                   -> 0.0031s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approval_merge_request_rules, [:merge_request_id, :name, :section], {:unique=>true, :where=>"rule_type = 2", :name=>"index_approval_rule_name_for_sectional_code_owners_rule_type", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:approval_merge_request_rules)
                   -> 0.0035s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:approval_merge_request_rules, {:algorithm=>:concurrently, :name=>"index_approval_rule_name_for_code_owners_rule_type"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:approval_merge_request_rules)
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:approval_merge_request_rules, {:algorithm=>:concurrently, :name=>"approval_rule_name_index_for_code_owners"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approval_merge_request_rules, [:merge_request_id, :name], {:unique=>true, :where=>"rule_type = 2 AND section IS NULL", :name=>"index_approval_rule_name_for_code_owners_rule_type", :algorithm=>:concurrently})
                   -> 0.0028s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approval_merge_request_rules, [:merge_request_id, :name], {:unique=>true, :where=>"rule_type = 2 AND section IS NULL", :name=>"index_approval_rule_name_for_code_owners_rule_type", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approval_merge_request_rules, [:merge_request_id, :code_owner, :name], {:unique=>true, :where=>"code_owner = true AND section IS NULL", :name=>"approval_rule_name_index_for_code_owners", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approval_merge_request_rules, [:merge_request_id, :code_owner, :name], {:unique=>true, :where=>"code_owner = true AND section IS NULL", :name=>"approval_rule_name_index_for_code_owners", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200526231421 UpdateIndexApprovalRuleNameForCodeOwnersRuleType: migrated (0.0418s)

                == 20200527092027 AddLinkTypeToReleaseLinks: migrating ========================
                -- add_column(:release_links, :link_type, :integer, {:limit=>2, :default=>0})
                   -> 0.0009s
                == 20200527092027 AddLinkTypeToReleaseLinks: migrated (0.0025s) ===============

                == 20200527094322 DropVulnerabilityConfidenceIndex: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerabilities)
                   -> 0.0054s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerabilities, {:algorithm=>:concurrently, :name=>"index_vulnerability_on_id_and_confidence_eq_zero"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200527094322 DropVulnerabilityConfidenceIndex: migrated (0.0122s) ========

                == 20200527095401 DropVulnerabilityOccurrenceConfidenceIndex: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerability_occurrences)
                   -> 0.0036s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerability_occurrences, {:algorithm=>:concurrently, :name=>"index_vulnerability_occurrences_on_id_and_confidence_eq_zero"})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0011s
                == 20200527095401 DropVulnerabilityOccurrenceConfidenceIndex: migrated (0.0187s)

                == 20200527135313 AddRequirementsBuildReference: migrating ====================
                -- add_column(:requirements_management_test_reports, :build_id, :bigint)
                   -> 0.0012s
                -- add_index(:requirements_management_test_reports, :build_id, {:name=>"index_requirements_management_test_reports_on_build_id"})
                   -> 0.0033s
                -- add_foreign_key(:requirements_management_test_reports, :ci_builds, {:column=>:build_id, :on_delete=>:nullify})
                   -> 0.0024s
                == 20200527135313 AddRequirementsBuildReference: migrated (0.0099s) ===========

                == 20200527151413 CreateCiBuildReportResultsTable: migrating ==================
                -- create_table(:ci_build_report_results, {:id=>false})
                   -> 0.0075s
                == 20200527151413 CreateCiBuildReportResultsTable: migrated (0.0076s) =========

                == 20200527152116 AddForeignKeyToBuildIdOnBuildReportResults: migrating =======
                -- add_foreign_key(:ci_build_report_results, :ci_builds, {:column=>:build_id, :on_delete=>:cascade})
                   -> 0.0012s
                == 20200527152116 AddForeignKeyToBuildIdOnBuildReportResults: migrated (0.0033s)

                == 20200527152657 AddForeignKeyToProjectIdOnBuildReportResults: migrating =====
                -- add_foreign_key(:ci_build_report_results, :projects, {:column=>:project_id, :on_delete=>:cascade})
                   -> 0.0019s
                == 20200527152657 AddForeignKeyToProjectIdOnBuildReportResults: migrated (0.0033s)

                == 20200527170649 CreateAlertManagementAlertUserMentions: migrating ===========
                -- create_table(:alert_management_alert_user_mentions)
                   -> 0.0050s
                -- add_index(:alert_management_alert_user_mentions, [:note_id], {:where=>"note_id IS NOT NULL", :unique=>true, :name=>"index_alert_user_mentions_on_note_id"})
                   -> 0.0027s
                -- add_index(:alert_management_alert_user_mentions, [:alert_management_alert_id], {:where=>"note_id IS NULL", :unique=>true, :name=>"index_alert_user_mentions_on_alert_id"})
                   -> 0.0029s
                -- add_index(:alert_management_alert_user_mentions, [:alert_management_alert_id, :note_id], {:unique=>true, :name=>"index_alert_user_mentions_on_alert_id_and_note_id"})
                   -> 0.0027s
                == 20200527170649 CreateAlertManagementAlertUserMentions: migrated (0.0136s) ==

                == 20200527211000 AddMaxImportSize: migrating =================================
                -- add_column(:application_settings, :max_import_size, :integer, {:default=>50, :null=>false})
                   -> 0.0014s
                == 20200527211000 AddMaxImportSize: migrated (0.0014s) ========================

                == 20200527211605 AddLockedToCiPipelines: migrating ===========================
                -- add_column(:ci_pipelines, :locked, :integer, {:limit=>2, :null=>false, :default=>0})
                   -> 0.0008s
                == 20200527211605 AddLockedToCiPipelines: migrated (0.0029s) ==================

                == 20200528054112 AddIndexToPackageName: migrating ============================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_packages, :name, {:name=>"package_name_index", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_packages, :name, {:name=>"package_name_index", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200528054112 AddIndexToPackageName: migrated (0.0081s) ===================

                == 20200528123703 AddMergeRequestPartialIndexToEvents: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:events, [:author_id, :created_at], {:name=>"index_events_on_author_id_and_created_at_merge_requests", :where=>"(target_type = 'MergeRequest')", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:events, [:author_id, :created_at], {:name=>"index_events_on_author_id_and_created_at_merge_requests", :where=>"(target_type = 'MergeRequest')", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200528123703 AddMergeRequestPartialIndexToEvents: migrated (0.0096s) =====

                == 20200528125905 AddProjectIdUserIdStatusRefIndexToCiPipelines: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:project_id, :user_id, :status, :ref], {:where=>"source != 12", :algorithm=>:concurrently})
                   -> 0.0074s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:project_id, :user_id, :status, :ref], {:where=>"source != 12", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200528125905 AddProjectIdUserIdStatusRefIndexToCiPipelines: migrated (0.0129s)

                == 20200528171933 RemoveNotNullFromExternalDashboardUrl: migrating ============
                -- change_column_null(:project_metrics_settings, :external_dashboard_url, true)
                   -> 0.0005s
                == 20200528171933 RemoveNotNullFromExternalDashboardUrl: migrated (0.0006s) ===

                == 20200601120434 MigrateAllMergeRequestUserMentionsToDb: migrating ===========
                == 20200601120434 MigrateAllMergeRequestUserMentionsToDb: migrated (0.0821s) ==

                == 20200601210148 AddDashboardTimezoneToProjectMetricsSetting: migrating ======
                -- add_column(:project_metrics_settings, :dashboard_timezone, :integer, {:limit=>2, :null=>false, :default=>0})
                   -> 0.0013s
                == 20200601210148 AddDashboardTimezoneToProjectMetricsSetting: migrated (0.0013s)

                == 20200602013900 AddLimitToDesignsFilename: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE design_management_designs\nADD CONSTRAINT check_07155e2715\nCHECK ( char_length(filename) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                == 20200602013900 AddLimitToDesignsFilename: migrated (0.0038s) ===============

                == 20200602013901 CapDesignsFilenameLengthToNewLimit: migrating ===============
                == 20200602013901 CapDesignsFilenameLengthToNewLimit: migrated (0.0009s) ======

                == 20200602143020 UpdateRoutesForLostAndFoundGroupAndOrphanedProjects: migrating
                == 20200602143020 UpdateRoutesForLostAndFoundGroupAndOrphanedProjects: migrated (0.3784s)

                == 20200603073101 ChangeConstraintNameOnResourceStateEvents: migrating ========
                -- execute("ALTER TABLE resource_state_events RENAME CONSTRAINT resource_state_events_must_belong_to_issue_or_merge_request_or_ TO state_events_must_belong_to_issue_or_merge_request_or_epic;")
                   -> 0.0006s
                == 20200603073101 ChangeConstraintNameOnResourceStateEvents: migrated (0.0007s)

                == 20200603180338 AddEnforcePatExpirationToApplicationSettings: migrating =====
                -- add_column(:application_settings, :enforce_pat_expiration, :boolean, {:default=>true, :null=>false})
                   -> 0.0015s
                == 20200603180338 AddEnforcePatExpirationToApplicationSettings: migrated (0.0016s)

                == 20200604001128 AddSecretsToCiBuildsMetadata: migrating =====================
                -- add_column(:ci_builds_metadata, :secrets, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0015s
                == 20200604001128 AddSecretsToCiBuildsMetadata: migrated (0.0029s) ============

                == 20200604143628 CreateProjectSecuritySettings: migrating ====================
                -- create_table(:project_security_settings, {:id=>false})
                   -> 0.0066s
                == 20200604143628 CreateProjectSecuritySettings: migrated (0.0085s) ===========

                == 20200604145731 CreateBoardUserPreferences: migrating =======================
                -- create_table(:board_user_preferences)
                   -> 0.0090s
                -- add_index(:board_user_preferences, [:user_id, :board_id], {:unique=>true})
                   -> 0.0035s
                == 20200604145731 CreateBoardUserPreferences: migrated (0.0126s) ==============

                == 20200604174544 AddUsersForeignKeyToBoardUserPreferences: migrating =========
                -- add_foreign_key(:board_user_preferences, :users, {:column=>:user_id, :on_delete=>:cascade})
                   -> 0.0014s
                == 20200604174544 AddUsersForeignKeyToBoardUserPreferences: migrated (0.0045s)

                == 20200604174558 AddBoardsForeignKeyToBoardUserPreferences: migrating ========
                -- add_foreign_key(:board_user_preferences, :boards, {:column=>:board_id, :on_delete=>:cascade})
                   -> 0.0011s
                == 20200604174558 AddBoardsForeignKeyToBoardUserPreferences: migrated (0.0029s)

                == 20200605003204 AddForeignKeyToAlertManagementAlertUserMentions: migrating ==
                -- add_foreign_key(:alert_management_alert_user_mentions, :notes, {:column=>:note_id, :on_delete=>:cascade})
                   -> 0.0016s
                == 20200605003204 AddForeignKeyToAlertManagementAlertUserMentions: migrated (0.0031s)

                == 20200605093113 AddIpAddressToAuditEvents: migrating ========================
                -- add_column(:audit_events, :ip_address, :inet)
                   -> 0.0008s
                == 20200605093113 AddIpAddressToAuditEvents: migrated (0.0008s) ===============

                == 20200605160806 AddIndexOnRepositorySizeAndProjectIdToProjectStatistics: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_statistics, [:repository_size, :project_id], {:algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_statistics, [:repository_size, :project_id], {:algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200605160806 AddIndexOnRepositorySizeAndProjectIdToProjectStatistics: migrated (0.0067s)

                == 20200605160836 AddIndexOnStorageSizeAndProjectIdToProjectStatistics: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_statistics, [:storage_size, :project_id], {:algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_statistics, [:storage_size, :project_id], {:algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200605160836 AddIndexOnStorageSizeAndProjectIdToProjectStatistics: migrated (0.0071s)

                == 20200605160851 AddIndexOnWikiSizeAndProjectIdToProjectStatistics: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_statistics, [:wiki_size, :project_id], {:algorithm=>:concurrently})
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_statistics, [:wiki_size, :project_id], {:algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200605160851 AddIndexOnWikiSizeAndProjectIdToProjectStatistics: migrated (0.0074s)

                == 20200607223047 CreateClusterAgents: migrating ==============================
                -- table_exists?(:cluster_agents)
                   -> 0.0004s
                -- create_table(:cluster_agents)
                   -> 0.0107s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agents\nADD CONSTRAINT check_3498369510\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agents VALIDATE CONSTRAINT check_3498369510;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200607223047 CreateClusterAgents: migrated (0.0185s) =====================

                == 20200607235435 CreateClusterAgentTokens: migrating =========================
                -- table_exists?(:cluster_agent_tokens)
                   -> 0.0005s
                -- create_table(:cluster_agent_tokens)
                   -> 0.0112s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens\nADD CONSTRAINT check_c60daed227\nCHECK ( char_length(token_encrypted) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens VALIDATE CONSTRAINT check_c60daed227;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200607235435 CreateClusterAgentTokens: migrated (0.0176s) ================

                == 20200608072931 BackfillImportedSnippetRepositories: migrating ==============
                == 20200608072931 BackfillImportedSnippetRepositories: migrated (0.0572s) =====

                == 20200608075553 AddIndexOnUserIdAndCreatedAtAndSourceToCiPipelines: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:user_id, :created_at, :source], {:algorithm=>:concurrently})
                   -> 0.0086s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0010s
                -- add_index(:ci_pipelines, [:user_id, :created_at, :source], {:algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:user_id, :created_at], {:algorithm=>:concurrently})
                   -> 0.0089s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_pipelines, {:algorithm=>:concurrently, :column=>[:user_id, :created_at]})
                   -> 0.0120s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200608075553 AddIndexOnUserIdAndCreatedAtAndSourceToCiPipelines: migrated (0.0360s)

                == 20200608195222 SetLockVersionNotNullConstraint: migrating ==================
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE epics\nADD CONSTRAINT check_fcfb4a93ff\nCHECK ( lock_version IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE merge_requests\nADD CONSTRAINT check_970d272570\nCHECK ( lock_version IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE issues\nADD CONSTRAINT check_fba63f706d\nCHECK ( lock_version IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0005s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_stages\nADD CONSTRAINT check_81b431e49b\nCHECK ( lock_version IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_builds\nADD CONSTRAINT check_1e2fbd1b39\nCHECK ( lock_version IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipelines\nADD CONSTRAINT check_d7e99a025e\nCHECK ( lock_version IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20200608195222 SetLockVersionNotNullConstraint: migrated (0.0435s) =========

                == 20200608203426 SetProperLockVersionIndices: migrating ======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:epics, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0080s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:epics, {:where=>"lock_version IS NULL", :algorithm=>:concurrently, :column=>:lock_version})
                   -> 0.0105s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0108s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_requests, {:where=>"lock_version IS NULL", :algorithm=>:concurrently, :column=>:lock_version})
                   -> 0.0162s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0110s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issues, {:where=>"lock_version IS NULL", :algorithm=>:concurrently, :column=>:lock_version})
                   -> 0.0124s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:epics, :id, {:where=>"lock_version IS NULL", :name=>"index_epics_on_id", :algorithm=>:concurrently})
                   -> 0.0070s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:epics, :id, {:where=>"lock_version IS NULL", :name=>"index_epics_on_id", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, :id, {:where=>"lock_version IS NULL", :name=>"index_merge_requests_on_id", :algorithm=>:concurrently})
                   -> 0.0118s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, :id, {:where=>"lock_version IS NULL", :name=>"index_merge_requests_on_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, :id, {:where=>"lock_version IS NULL", :name=>"index_issues_on_id", :algorithm=>:concurrently})
                   -> 0.0115s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, :id, {:where=>"lock_version IS NULL", :name=>"index_issues_on_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0032s
                == 20200608203426 SetProperLockVersionIndices: migrated (0.1266s) =============

                == 20200608205813 SetLockVersionToNotNull: migrating ==========================
                == 20200608205813 SetLockVersionToNotNull: migrated (0.0518s) =================

                == 20200608212030 LockVersionCleanupForEpics: migrating =======================
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE epics VALIDATE CONSTRAINT check_fcfb4a93ff;")
                   -> 0.0009s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:epics)
                   -> 0.0855s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:epics, {:algorithm=>:concurrently, :name=>"index_epics_on_id"})
                   -> 0.0031s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200608212030 LockVersionCleanupForEpics: migrated (0.0919s) ==============

                == 20200608212435 LockVersionCleanupForMergeRequests: migrating ===============
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE merge_requests VALIDATE CONSTRAINT check_970d272570;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_requests)
                   -> 0.0095s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_requests, {:algorithm=>:concurrently, :name=>"index_merge_requests_on_id"})
                   -> 0.0023s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200608212435 LockVersionCleanupForMergeRequests: migrated (0.0151s) ======

                == 20200608212549 LockVersionCleanupForIssues: migrating ======================
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE issues VALIDATE CONSTRAINT check_fba63f706d;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issues)
                   -> 0.0091s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issues, {:algorithm=>:concurrently, :name=>"index_issues_on_id"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200608212549 LockVersionCleanupForIssues: migrated (0.0149s) =============

                == 20200608212652 LockVersionCleanupForCiStages: migrating ====================
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_stages VALIDATE CONSTRAINT check_81b431e49b;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_stages, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_stages_lock_version", :algorithm=>:concurrently})
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_stages, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_stages_lock_version", :algorithm=>:concurrently, :column=>:id})
                   -> 0.0057s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200608212652 LockVersionCleanupForCiStages: migrated (0.0118s) ===========

                == 20200608212807 LockVersionCleanupForCiBuilds: migrating ====================
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_builds VALIDATE CONSTRAINT check_1e2fbd1b39;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_builds_lock_version", :algorithm=>:concurrently})
                   -> 0.0110s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_builds_lock_version", :algorithm=>:concurrently, :column=>:id})
                   -> 0.0132s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200608212807 LockVersionCleanupForCiBuilds: migrated (0.0278s) ===========

                == 20200608212824 LockVersionCleanupForCiPipelines: migrating =================
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipelines VALIDATE CONSTRAINT check_d7e99a025e;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_pipelines_lock_version", :algorithm=>:concurrently})
                   -> 0.0071s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_pipelines, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_pipelines_lock_version", :algorithm=>:concurrently, :column=>:id})
                   -> 0.0093s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200608212824 LockVersionCleanupForCiPipelines: migrated (0.0196s) ========

                == 20200608214008 ChangeColumnDefaultProjectIncidentManagementSettings: migrating
                -- change_column_default(:project_incident_management_settings, :create_issue, {:from=>true, :to=>false})
                   -> 0.0019s
                == 20200608214008 ChangeColumnDefaultProjectIncidentManagementSettings: migrated (0.0020s)

                == 20200609002841 AddPartialIndexOnLockedStateIdToMergeRequests: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, :target_project_id, {:where=>"(state_id = 4)", :name=>"idx_merge_requests_on_target_project_id_and_locked_state", :algorithm=>:concurrently})
                   -> 0.0090s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, :target_project_id, {:where=>"(state_id = 4)", :name=>"idx_merge_requests_on_target_project_id_and_locked_state", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200609002841 AddPartialIndexOnLockedStateIdToMergeRequests: migrated (0.0141s)

                == 20200609012539 AddTraversalIdsToNamespaces: migrating ======================
                -- add_column(:namespaces, :traversal_ids, :integer, {:array=>true, :default=>[], :null=>false})
                   -> 0.0010s
                == 20200609012539 AddTraversalIdsToNamespaces: migrated (0.0024s) =============

                == 20200609142506 RemoveNotNullConstraintFromWeightEventsTable: migrating =====
                -- change_column_null(:resource_weight_events, :user_id, true)
                   -> 0.0005s
                == 20200609142506 RemoveNotNullConstraintFromWeightEventsTable: migrated (0.0006s)

                == 20200609142507 RemoveNotNullConstraintFromMilestoneEventsTable: migrating ==
                -- change_column_null(:resource_milestone_events, :user_id, true)
                   -> 0.0005s
                == 20200609142507 RemoveNotNullConstraintFromMilestoneEventsTable: migrated (0.0006s)

                == 20200609142508 RemoveNotNullConstraintFromStateEventsTable: migrating ======
                -- change_column_null(:resource_state_events, :user_id, true)
                   -> 0.0005s
                == 20200609142508 RemoveNotNullConstraintFromStateEventsTable: migrated (0.0006s)

                == 20200609212701 AddIncidentSettingsToAllExistingProjects: migrating =========
                -- execute("      WITH project_ids AS MATERIALIZED(\n        SELECT DISTINCT issues.project_id AS id\n        FROM issues\n        LEFT OUTER JOIN project_incident_management_settings\n                    ON project_incident_management_settings.project_id = issues.project_id\n        INNER JOIN label_links\n               ON label_links.target_type = 'Issue'\n                  AND label_links.target_id = issues.id\n        INNER JOIN labels\n               ON labels.id = label_links.label_id\n        WHERE  ( project_incident_management_settings.project_id IS NULL )\n               -- Use incident labels even though they could be manually added by users who\n               -- are not using alert funtionality.\n               AND labels.title = 'incident'\n               AND labels.color = '#CC0033'\n               AND labels.description = 'Denotes a disruption to IT services and the associated issues require immediate attention'\n      )\n      INSERT INTO project_incident_management_settings (project_id, create_issue, send_email, issue_template_key)\n      SELECT project_ids.id, TRUE, FALSE, NULL\n      FROM project_ids\n      ON CONFLICT (project_id) DO NOTHING;\n")
                   -> 0.0014s
                == 20200609212701 AddIncidentSettingsToAllExistingProjects: migrated (0.0015s)

                == 20200610033228 CreateTerraformStateVersions: migrating =====================
                -- create_table(:terraform_state_versions, {:if_not_exists=>true})
                   -> 0.0125s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0005s
                -- execute("ALTER TABLE terraform_state_versions\nADD CONSTRAINT check_0824bb7bbd\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_state_versions VALIDATE CONSTRAINT check_0824bb7bbd;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200610033228 CreateTerraformStateVersions: migrated (0.0203s) ============

                == 20200610040615 AddVersioningEnabledToTerraformStates: migrating ============
                -- add_column(:terraform_states, :versioning_enabled, :boolean, {:null=>false, :default=>false})
                   -> 0.0009s
                == 20200610040615 AddVersioningEnabledToTerraformStates: migrated (0.0009s) ===

                == 20200610130002 CreateVulnerabilityStatistics: migrating ====================
                -- create_table(:vulnerability_statistics)
                   -> 0.0124s
                == 20200610130002 CreateVulnerabilityStatistics: migrated (0.0137s) ===========

                == 20200611013227 AddUsersForeignKeyToTerraformStateVersions: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:terraform_state_versions)
                   -> 0.0039s
                -- execute("ALTER TABLE terraform_state_versions\nADD CONSTRAINT fk_6e81384d7f\nFOREIGN KEY (created_by_user_id)\nREFERENCES users (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_state_versions VALIDATE CONSTRAINT fk_6e81384d7f;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200611013227 AddUsersForeignKeyToTerraformStateVersions: migrated (0.0084s)

                == 20200613104045 AddComplianceFrameworksToApplicationSettings: migrating =====
                -- add_column(:application_settings, :compliance_frameworks, :integer, {:limit=>2, :array=>true, :default=>[], :null=>false})
                   -> 0.0013s
                == 20200613104045 AddComplianceFrameworksToApplicationSettings: migrated (0.0026s)

                == 20200615083635 AddComposerJsonToMetadata: migrating ========================
                -- add_column(:packages_composer_metadata, :composer_json, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0009s
                == 20200615083635 AddComposerJsonToMetadata: migrated (0.0010s) ===============

                == 20200615111857 UnconfirmWrongfullyVerifiedEmails: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:emails, :id, {:where=>"confirmed_at IS NOT NULL", :name=>"tmp_index_for_email_unconfirmation_migration", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:emails, :id, {:where=>"confirmed_at IS NOT NULL", :name=>"tmp_index_for_email_unconfirmation_migration", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200615111857 UnconfirmWrongfullyVerifiedEmails: migrated (0.3110s) =======

                == 20200615121217 AddProjectsForeignKeyToProjectAccessTokens: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:project_access_tokens)
                   -> 0.0038s
                -- execute("ALTER TABLE project_access_tokens\nADD CONSTRAINT fk_b27801bfbf\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_access_tokens VALIDATE CONSTRAINT fk_b27801bfbf;")
                   -> 0.0015s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200615121217 AddProjectsForeignKeyToProjectAccessTokens: migrated (0.0089s)

                == 20200615123055 AddPersonalAccessTokenForeignKeyToProjectAccessTokens: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:project_access_tokens)
                   -> 0.0036s
                -- execute("ALTER TABLE project_access_tokens\nADD CONSTRAINT fk_5f7e8450e1\nFOREIGN KEY (personal_access_token_id)\nREFERENCES personal_access_tokens (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_access_tokens VALIDATE CONSTRAINT fk_5f7e8450e1;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200615123055 AddPersonalAccessTokenForeignKeyToProjectAccessTokens: migrated (0.0078s)

                == 20200615141554 AddClosedByFieldsToResourceStateEvents: migrating ===========
                -- add_column(:resource_state_events, :close_after_error_tracking_resolve, :boolean, {:default=>false, :null=>false})
                   -> 0.0010s
                -- add_column(:resource_state_events, :close_auto_resolve_prometheus_alert, :boolean, {:default=>false, :null=>false})
                   -> 0.0007s
                == 20200615141554 AddClosedByFieldsToResourceStateEvents: migrated (0.0018s) ==

                == 20200615193524 AddVerifyKnownSignInToApplicationSettings: migrating ========
                -- add_column(:application_settings, :notify_on_unknown_sign_in, :boolean, {:default=>true, :null=>false})
                   -> 0.0012s
                == 20200615193524 AddVerifyKnownSignInToApplicationSettings: migrated (0.0013s)

                == 20200615232735 AddIndexToComposerMetadata: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_composer_metadata, [:package_id, :target_sha], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_composer_metadata, [:package_id, :target_sha], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200615232735 AddIndexToComposerMetadata: migrated (0.0054s) ==============

                == 20200615234047 CreateClustersApplicationsCilium: migrating =================
                -- create_table(:clusters_applications_cilium)
                   -> 0.0082s
                == 20200615234047 CreateClustersApplicationsCilium: migrated (0.0082s) ========

                == 20200616124338 AddPlanLimitsForMaxSizePerArtifactType: migrating ===========
                -- add_column(:plan_limits, "ci_max_artifact_size_lsif", :integer, {:default=>20, :null=>false})
                   -> 0.0010s
                -- add_column(:plan_limits, "ci_max_artifact_size_archive", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_metadata", :integer, {:default=>0, :null=>false})
                   -> 0.0006s
                -- add_column(:plan_limits, "ci_max_artifact_size_trace", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_junit", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_sast", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_dependency_scanning", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_container_scanning", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_dast", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_codequality", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_license_management", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_license_scanning", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_performance", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_metrics", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_metrics_referee", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_network_referee", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_dotenv", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_cobertura", :integer, {:default=>0, :null=>false})
                   -> 0.0008s
                -- add_column(:plan_limits, "ci_max_artifact_size_terraform", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_accessibility", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_cluster_applications", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                -- add_column(:plan_limits, "ci_max_artifact_size_secret_detection", :integer, {:default=>0, :null=>false})
                   -> 0.0011s
                -- add_column(:plan_limits, "ci_max_artifact_size_requirements", :integer, {:default=>0, :null=>false})
                   -> 0.0008s
                -- add_column(:plan_limits, "ci_max_artifact_size_coverage_fuzzing", :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20200616124338 AddPlanLimitsForMaxSizePerArtifactType: migrated (0.0210s) ==

                == 20200616145031 AddAuthorIdIndexToAuditEvents: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:audit_events, [:entity_id, :entity_type, :id, :author_id], {:order=>{:id=>:desc}, :name=>"index_audit_events_on_entity_id_entity_type_id_desc_author_id", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:audit_events, [:entity_id, :entity_type, :id, :author_id], {:order=>{:id=>:desc}, :name=>"index_audit_events_on_entity_id_entity_type_id_desc_author_id", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:audit_events)
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:audit_events, {:algorithm=>:concurrently, :name=>"index_audit_events_on_entity_id_and_entity_type_and_id_desc"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200616145031 AddAuthorIdIndexToAuditEvents: migrated (0.0128s) ===========

                == 20200617000757 CleanUpFileStoreLfsObjects: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"lfs_objects\" WHERE \"lfs_objects\".\"file_store\" IS NULL")
                   -> 0.0007s
                == 20200617000757 CleanUpFileStoreLfsObjects: migrated (0.0009s) ==============

                == 20200617001001 CleanUpStoreUploads: migrating ==============================
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"uploads\" WHERE \"uploads\".\"store\" IS NULL")
                   -> 0.0007s
                == 20200617001001 CleanUpStoreUploads: migrated (0.0008s) =====================

                == 20200617001118 CleanUpFileStoreCiJobArtifacts: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"ci_job_artifacts\" WHERE \"ci_job_artifacts\".\"file_store\" IS NULL")
                   -> 0.0007s
                == 20200617001118 CleanUpFileStoreCiJobArtifacts: migrated (0.0009s) ==========

                == 20200617001637 ValidateFileStoreNotNullConstraintOnLfsObjects: migrating ===
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE lfs_objects VALIDATE CONSTRAINT check_eecfc5717d;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200617001637 ValidateFileStoreNotNullConstraintOnLfsObjects: migrated (0.0023s)

                == 20200617001848 ValidateStoreNotNullConstraintUploads: migrating ============
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE uploads VALIDATE CONSTRAINT check_5e9547379c;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200617001848 ValidateStoreNotNullConstraintUploads: migrated (0.0023s) ===

                == 20200617002030 ValidateFileStoreNotNullConstraintOnCiJobArtifacts: migrating
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_job_artifacts VALIDATE CONSTRAINT check_27f0f6dbab;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200617002030 ValidateFileStoreNotNullConstraintOnCiJobArtifacts: migrated (0.0022s)

                == 20200617150041 CreateNamespaceLimits: migrating ============================
                -- create_table(:namespace_limits, {:id=>false})
                   -> 0.0035s
                == 20200617150041 CreateNamespaceLimits: migrated (0.0048s) ===================

                == 20200617205000 AddDeployKeyIdToPushAccessLevels: migrating =================
                -- column_exists?(:protected_branch_push_access_levels, :deploy_key_id)
                   -> 0.0013s
                -- add_column(:protected_branch_push_access_levels, :deploy_key_id, :integer)
                   -> 0.0007s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:protected_branch_push_access_levels)
                   -> 0.0037s
                -- execute("ALTER TABLE protected_branch_push_access_levels\nADD CONSTRAINT fk_15d2a7a4ae\nFOREIGN KEY (deploy_key_id)\nREFERENCES keys (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE protected_branch_push_access_levels VALIDATE CONSTRAINT fk_15d2a7a4ae;")
                   -> 0.0013s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:protected_branch_push_access_levels, :deploy_key_id, {:name=>"index_deploy_key_id_on_protected_branch_push_access_levels", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:protected_branch_push_access_levels, :deploy_key_id, {:name=>"index_deploy_key_id_on_protected_branch_push_access_levels", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200617205000 AddDeployKeyIdToPushAccessLevels: migrated (0.0169s) ========

                == 20200618105638 AddIndexOnIdAndCreatedAtToSnippets: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippets, [:id, :created_at], {:algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippets, [:id, :created_at], {:algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200618105638 AddIndexOnIdAndCreatedAtToSnippets: migrated (0.0085s) ======

                == 20200618134223 RestorePreviousSchemaWithoutLockVersionNullConstraint: migrating
                -- execute("ALTER TABLE epics\nDROP CONSTRAINT IF EXISTS check_fcfb4a93ff\n")
                   -> 0.0004s
                -- execute("ALTER TABLE merge_requests\nDROP CONSTRAINT IF EXISTS check_970d272570\n")
                   -> 0.0004s
                -- execute("ALTER TABLE issues\nDROP CONSTRAINT IF EXISTS check_fba63f706d\n")
                   -> 0.0004s
                -- execute("ALTER TABLE ci_stages\nDROP CONSTRAINT IF EXISTS check_81b431e49b\n")
                   -> 0.0003s
                -- execute("ALTER TABLE ci_builds\nDROP CONSTRAINT IF EXISTS check_1e2fbd1b39\n")
                   -> 0.0004s
                -- execute("ALTER TABLE ci_pipelines\nDROP CONSTRAINT IF EXISTS check_d7e99a025e\n")
                   -> 0.0004s
                == 20200618134223 RestorePreviousSchemaWithoutLockVersionNullConstraint: migrated (0.0112s)

                == 20200618134723 RestorePreviousSchemaWithLockVersionIndices: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0085s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0094s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:epics, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0058s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:epics, :lock_version, {:where=>"lock_version IS NULL", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_stages, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_stages_lock_version", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_stages, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_stages_lock_version", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_builds_lock_version", :algorithm=>:concurrently})
                   -> 0.0103s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_builds_lock_version", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_pipelines_lock_version", :algorithm=>:concurrently})
                   -> 0.0065s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, :id, {:where=>"lock_version IS NULL", :name=>"tmp_index_ci_pipelines_lock_version", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200618134723 RestorePreviousSchemaWithLockVersionIndices: migrated (0.0738s)

                == 20200618152212 UpdateSecureSmauIndex: migrating ============================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:user_id, :created_at], {:where=>"(((type)::text = 'Ci::Build'::text) AND ((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text, ('dast'::character varying)::text, ('dependency_scanning'::character varying)::text, ('license_management'::character varying)::text, ('license_scanning'::character varying)::text, ('sast'::character varying)::text, ('secret_detection'::character varying)::text])))", :name=>"index_secure_ci_builds_on_user_id_created_at", :algorithm=>:concurrently})
                   -> 0.0113s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:user_id, :created_at], {:where=>"(((type)::text = 'Ci::Build'::text) AND ((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text, ('dast'::character varying)::text, ('dependency_scanning'::character varying)::text, ('license_management'::character varying)::text, ('license_scanning'::character varying)::text, ('sast'::character varying)::text, ('secret_detection'::character varying)::text])))", :name=>"index_secure_ci_builds_on_user_id_created_at", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200618152212 UpdateSecureSmauIndex: migrated (0.0161s) ===================

                == 20200619000316 AddHasConfluenceToProjectSettings: migrating ================
                -- add_column(:project_settings, :has_confluence, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20200619000316 AddHasConfluenceToProjectSettings: migrated (0.0022s) =======

                == 20200619154527 AddProjectKeyToJiraTrackerData: migrating ===================
                -- add_column(:jira_tracker_data, :project_key, :text)
                   -> 0.0006s
                == 20200619154527 AddProjectKeyToJiraTrackerData: migrated (0.0006s) ==========

                == 20200619154528 AddTextLimitToJiraTrackerDataProjectKey: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE jira_tracker_data\nADD CONSTRAINT check_214cf6a48b\nCHECK ( char_length(project_key) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE jira_tracker_data VALIDATE CONSTRAINT check_214cf6a48b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200619154528 AddTextLimitToJiraTrackerDataProjectKey: migrated (0.0053s) =

                == 20200622040750 AddPrometheusAlertIdToAlertManagementAlerts: migrating ======
                -- add_column(:alert_management_alerts, :prometheus_alert_id, :integer)
                   -> 0.0006s
                -- add_column(:alert_management_alerts, :environment_id, :integer)
                   -> 0.0004s
                == 20200622040750 AddPrometheusAlertIdToAlertManagementAlerts: migrated (0.0011s)

                == 20200622070606 AddVendorToVulnerabilityScanners: migrating =================
                -- add_column(:vulnerability_scanners, :vendor, :text, {:default=>"GitLab", :null=>false})
                   -> 0.0009s
                == 20200622070606 AddVendorToVulnerabilityScanners: migrated (0.0023s) ========

                == 20200622070620 AddLimitToVulnerabilityScannersVendor: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_scanners\nADD CONSTRAINT check_37608c9db5\nCHECK ( char_length(vendor) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                == 20200622070620 AddLimitToVulnerabilityScannersVendor: migrated (0.0029s) ===

                == 20200622095419 AddSnippetsSizeToProjectStatistics: migrating ===============
                -- add_column(:project_statistics, :snippets_size, :bigint)
                   -> 0.0006s
                == 20200622095419 AddSnippetsSizeToProjectStatistics: migrated (0.0006s) ======

                == 20200622103836 CreateSnippetStatistics: migrating ==========================
                -- create_table(:snippet_statistics, {:id=>false})
                   -> 0.0038s
                == 20200622103836 CreateSnippetStatistics: migrated (0.0052s) =================

                == 20200622104923 CreateCiPipelineMessagesTable: migrating ====================
                -- create_table(:ci_pipeline_messages)
                   -> 0.0076s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_messages\nADD CONSTRAINT check_58ca2981b2\nCHECK ( char_length(content) <= 10000 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_messages VALIDATE CONSTRAINT check_58ca2981b2;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200622104923 CreateCiPipelineMessagesTable: migrated (0.0145s) ===========

                == 20200622235737 RemoveIndexCiJobArtifactsFileStoreIsNull: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_job_artifacts)
                   -> 0.0036s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_job_artifacts, {:algorithm=>:concurrently, :name=>"index_ci_job_artifacts_file_store_is_null"})
                   -> 0.0030s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200622235737 RemoveIndexCiJobArtifactsFileStoreIsNull: migrated (0.0074s)

                == 20200623000148 RemoveIndexLfsObjectsFileStoreIsNull: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:lfs_objects)
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:lfs_objects, {:algorithm=>:concurrently, :name=>"index_lfs_objects_file_store_is_null"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200623000148 RemoveIndexLfsObjectsFileStoreIsNull: migrated (0.0057s) ====

                == 20200623000320 RemoveIndexUploadsStoreIsNull: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:uploads)
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:uploads, {:algorithm=>:concurrently, :name=>"index_uploads_store_is_null"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200623000320 RemoveIndexUploadsStoreIsNull: migrated (0.0062s) ===========

                == 20200623073431 AddSourceMergeRequestIdToResourceStateEvents: migrating =====
                -- column_exists?(:resource_state_events, :source_merge_request_id)
                   -> 0.0014s
                -- add_column(:resource_state_events, :source_merge_request_id, :bigint)
                   -> 0.0008s
                -- index_exists?(:resource_state_events, :source_merge_request_id, {:name=>"index_resource_state_events_on_source_merge_request_id"})
                   -> 0.0026s
                -- add_index(:resource_state_events, :source_merge_request_id, {:name=>"index_resource_state_events_on_source_merge_request_id"})
                   -> 0.0035s
                -- foreign_keys(:resource_state_events)
                   -> 0.0037s
                -- add_foreign_key(:resource_state_events, :merge_requests, {:column=>:source_merge_request_id, :on_delete=>:nullify})
                   -> 0.0017s
                == 20200623073431 AddSourceMergeRequestIdToResourceStateEvents: migrated (0.0156s)

                == 20200623090030 AddAuthorNameToAuditEvent: migrating ========================
                -- column_exists?(:audit_events, :author_name)
                   -> 0.0012s
                -- add_column(:audit_events, :author_name, :text)
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events\nADD CONSTRAINT check_83ff8406e2\nCHECK ( char_length(author_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events VALIDATE CONSTRAINT check_83ff8406e2;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200623090030 AddAuthorNameToAuditEvent: migrated (0.0084s) ===============

                == 20200623121135 CreateDynamicPartitionsSchema: migrating ====================
                -- execute("CREATE SCHEMA gitlab_partitions_dynamic")
                   -> 0.0005s
                -- execute("COMMENT ON schema gitlab_partitions_dynamic IS 'Schema to hold partitions managed dynamically from the application, e.g. for time space partitioning.'")
                   -> 0.0004s
                == 20200623121135 CreateDynamicPartitionsSchema: migrated (0.0029s) ===========

                == 20200623141217 AddViewDiffsFileByFileToUserPreferences: migrating ==========
                -- add_column(:user_preferences, :view_diffs_file_by_file, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20200623141217 AddViewDiffsFileByFileToUserPreferences: migrated (0.0023s) =

                == 20200623141544 CreateElasticReindexingTask: migrating ======================
                -- create_table(:elastic_reindexing_tasks)
                   -> 0.0087s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks\nADD CONSTRAINT check_04151aca42\nCHECK ( char_length(index_name_from) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks VALIDATE CONSTRAINT check_04151aca42;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks\nADD CONSTRAINT check_85ebff7124\nCHECK ( char_length(index_name_to) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks VALIDATE CONSTRAINT check_85ebff7124;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks\nADD CONSTRAINT check_942e5aae53\nCHECK ( char_length(elastic_task) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks VALIDATE CONSTRAINT check_942e5aae53;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks\nADD CONSTRAINT check_7f64acda8e\nCHECK ( char_length(error_message) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_tasks VALIDATE CONSTRAINT check_7f64acda8e;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- add_index(:elastic_reindexing_tasks, :in_progress, {:unique=>true, :where=>"in_progress"})
                   -> 0.0033s
                == 20200623141544 CreateElasticReindexingTask: migrated (0.0321s) =============

                == 20200623142159 RemoveGitlabIssueTrackerServiceRecords: migrating ===========
                == 20200623142159 RemoveGitlabIssueTrackerServiceRecords: migrated (0.0431s) ==

                == 20200623170000 CreateStaticPartitionsSchema: migrating =====================
                -- execute("CREATE SCHEMA gitlab_partitions_static")
                   -> 0.0004s
                -- execute("COMMENT ON schema gitlab_partitions_static IS 'Schema to hold static partitions, e.g. for hash partitioning'")
                   -> 0.0002s
                == 20200623170000 CreateStaticPartitionsSchema: migrated (0.0007s) ============

                == 20200623185440 AddProductAnalyticsTable: migrating =========================
                -- execute("CREATE TABLE \"product_analytics_events_experimental\" (\n  id bigserial NOT NULL,\n  -- App\n  \"project_id\" integer NOT NULL REFERENCES projects(id) ON DELETE CASCADE,\n  \"platform\" varchar(255),\n  -- Date/time\n  \"etl_tstamp\" timestamp with time zone,\n  \"collector_tstamp\" timestamp with time zone NOT NULL,\n  \"dvce_created_tstamp\" timestamp with time zone,\n  -- Date/time\n  \"event\" varchar(128),\n  \"event_id\" char(36) NOT NULL,\n  \"txn_id\" integer,\n  -- Versioning\n  \"name_tracker\" varchar(128),\n  \"v_tracker\" varchar(100),\n  \"v_collector\" varchar(100) NOT NULL,\n  \"v_etl\" varchar(100) NOT NULL,\n  -- User and visit\n  \"user_id\" varchar(255),\n  \"user_ipaddress\" varchar(45),\n  \"user_fingerprint\" varchar(50),\n  \"domain_userid\" varchar(36),\n  \"domain_sessionidx\" smallint,\n  \"network_userid\" varchar(38),\n  -- Location\n  \"geo_country\" char(2),\n  \"geo_region\" char(3),\n  \"geo_city\" varchar(75),\n  \"geo_zipcode\" varchar(15),\n  \"geo_latitude\" double precision,\n  \"geo_longitude\" double precision,\n  \"geo_region_name\" varchar(100),\n  -- IP lookups\n  \"ip_isp\" varchar(100),\n  \"ip_organization\" varchar(100),\n  \"ip_domain\" varchar(100),\n  \"ip_netspeed\" varchar(100),\n  -- Page\n  \"page_url\" text,\n  \"page_title\" varchar(2000),\n  \"page_referrer\" text,\n  -- Page URL components\n  \"page_urlscheme\" varchar(16),\n  \"page_urlhost\" varchar(255),\n  \"page_urlport\" integer,\n  \"page_urlpath\" varchar(3000),\n  \"page_urlquery\" varchar(6000),\n  \"page_urlfragment\" varchar(3000),\n  -- Referrer URL components\n  \"refr_urlscheme\" varchar(16),\n  \"refr_urlhost\" varchar(255),\n  \"refr_urlport\" integer,\n  \"refr_urlpath\" varchar(6000),\n  \"refr_urlquery\" varchar(6000),\n  \"refr_urlfragment\" varchar(3000),\n  -- Referrer details\n  \"refr_medium\" varchar(25),\n  \"refr_source\" varchar(50),\n  \"refr_term\" varchar(255),\n  -- Marketing\n  \"mkt_medium\" varchar(255),\n  \"mkt_source\" varchar(255),\n  \"mkt_term\" varchar(255),\n  \"mkt_content\" varchar(500),\n  \"mkt_campaign\" varchar(255),\n  -- Custom structured event\n  \"se_category\" varchar(1000),\n  \"se_action\" varchar(1000),\n  \"se_label\" varchar(1000),\n  \"se_property\" varchar(1000),\n  \"se_value\" double precision,\n  -- Ecommerce\n  \"tr_orderid\" varchar(255),\n  \"tr_affiliation\" varchar(255),\n  \"tr_total\" decimal(18,2),\n  \"tr_tax\" decimal(18,2),\n  \"tr_shipping\" decimal(18,2),\n  \"tr_city\" varchar(255),\n  \"tr_state\" varchar(255),\n  \"tr_country\" varchar(255),\n  \"ti_orderid\" varchar(255),\n  \"ti_sku\" varchar(255),\n  \"ti_name\" varchar(255),\n  \"ti_category\" varchar(255),\n  \"ti_price\" decimal(18,2),\n  \"ti_quantity\" integer,\n  -- Page ping\n  \"pp_xoffset_min\" integer,\n  \"pp_xoffset_max\" integer,\n  \"pp_yoffset_min\" integer,\n  \"pp_yoffset_max\" integer,\n  -- User Agent\n  \"useragent\" varchar(1000),\n  -- Browser\n  \"br_name\" varchar(50),\n  \"br_family\" varchar(50),\n  \"br_version\" varchar(50),\n  \"br_type\" varchar(50),\n  \"br_renderengine\" varchar(50),\n  \"br_lang\" varchar(255),\n  \"br_features_pdf\" boolean,\n  \"br_features_flash\" boolean,\n  \"br_features_java\" boolean,\n  \"br_features_director\" boolean,\n  \"br_features_quicktime\" boolean,\n  \"br_features_realplayer\" boolean,\n  \"br_features_windowsmedia\" boolean,\n  \"br_features_gears\" boolean,\n  \"br_features_silverlight\" boolean,\n  \"br_cookies\" boolean,\n  \"br_colordepth\" varchar(12),\n  \"br_viewwidth\" integer,\n  \"br_viewheight\" integer,\n  -- Operating System\n  \"os_name\" varchar(50),\n  \"os_family\" varchar(50),\n  \"os_manufacturer\" varchar(50),\n  \"os_timezone\" varchar(50),\n  -- Device/Hardware\n  \"dvce_type\" varchar(50),\n  \"dvce_ismobile\" boolean,\n  \"dvce_screenwidth\" integer,\n  \"dvce_screenheight\" integer,\n  -- Document\n  \"doc_charset\" varchar(128),\n  \"doc_width\" integer,\n  \"doc_height\" integer,\n  -- Currency\n  \"tr_currency\" char(3),\n  \"tr_total_base\" decimal(18, 2),\n  \"tr_tax_base\" decimal(18, 2),\n  \"tr_shipping_base\" decimal(18, 2),\n  \"ti_currency\" char(3),\n  \"ti_price_base\" decimal(18, 2),\n  \"base_currency\" char(3),\n  -- Geolocation\n  \"geo_timezone\" varchar(64),\n  -- Click ID\n  \"mkt_clickid\" varchar(128),\n  \"mkt_network\" varchar(64),\n  -- ETL tags\n  \"etl_tags\" varchar(500),\n  -- Time event was sent\n  \"dvce_sent_tstamp\" timestamp with time zone,\n  -- Referer\n  \"refr_domain_userid\" varchar(36),\n  \"refr_dvce_tstamp\" timestamp with time zone,\n  -- Session ID\n  \"domain_sessionid\" char(36),\n  -- Derived timestamp\n  \"derived_tstamp\" timestamp with time zone,\n  -- Event schema\n  \"event_vendor\" varchar(1000),\n  \"event_name\" varchar(1000),\n  \"event_format\" varchar(128),\n  \"event_version\" varchar(128),\n  -- Event fingerprint\n  \"event_fingerprint\" varchar(128),\n  -- True timestamp\n  \"true_tstamp\" timestamp with time zone,\n  PRIMARY KEY (id, project_id)\n) PARTITION BY HASH (project_id)\n  WITHOUT OIDS;\n\nCREATE INDEX index_product_analytics_events_experimental_project_and_time ON product_analytics_events_experimental (project_id, collector_tstamp);\n")
                   -> 0.0041s
                -- transaction()
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_00\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 0);\n")
                   -> 0.0085s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_01\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 1);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_02\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 2);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_03\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 3);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_04\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 4);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_05\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 5);\n")
                   -> 0.0076s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_06\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 6);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_07\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 7);\n")
                   -> 0.0070s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_08\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 8);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_09\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 9);\n")
                   -> 0.0110s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_10\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 10);\n")
                   -> 0.0070s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_11\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 11);\n")
                   -> 0.0068s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_12\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 12);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_13\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 13);\n")
                   -> 0.0074s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_14\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 14);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_15\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 15);\n")
                   -> 0.0073s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_16\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 16);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_17\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 17);\n")
                   -> 0.0070s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_18\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 18);\n")
                   -> 0.0070s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_19\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 19);\n")
                   -> 0.0075s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_20\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 20);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_21\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 21);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_22\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 22);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_23\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 23);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_24\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 24);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_25\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 25);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_26\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 26);\n")
                   -> 0.0076s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_27\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 27);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_28\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 28);\n")
                   -> 0.0075s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_29\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 29);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_30\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 30);\n")
                   -> 0.0077s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_31\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 31);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_32\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 32);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_33\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 33);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_34\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 34);\n")
                   -> 0.0073s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_35\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 35);\n")
                   -> 0.0074s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_36\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 36);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_37\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 37);\n")
                   -> 0.0161s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_38\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 38);\n")
                   -> 0.0073s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_39\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 39);\n")
                   -> 0.0083s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_40\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 40);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_41\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 41);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_42\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 42);\n")
                   -> 0.0074s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_43\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 43);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_44\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 44);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_45\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 45);\n")
                   -> 0.0074s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_46\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 46);\n")
                   -> 0.0077s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_47\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 47);\n")
                   -> 0.0073s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_48\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 48);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_49\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 49);\n")
                   -> 0.0073s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_50\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 50);\n")
                   -> 0.0077s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_51\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 51);\n")
                   -> 0.0070s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_52\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 52);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_53\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 53);\n")
                   -> 0.0069s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_54\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 54);\n")
                   -> 0.0074s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_55\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 55);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_56\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 56);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_57\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 57);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_58\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 58);\n")
                   -> 0.0072s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_59\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 59);\n")
                   -> 0.0071s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_60\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 60);\n")
                   -> 0.0075s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_61\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 61);\n")
                   -> 0.0076s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_62\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 62);\n")
                   -> 0.0075s
                -- execute("CREATE TABLE gitlab_partitions_static.product_analytics_events_experimental_63\nPARTITION OF product_analytics_events_experimental\nFOR VALUES WITH (MODULUS 64, REMAINDER 63);\n")
                   -> 0.0075s
                   -> 0.4796s
                == 20200623185440 AddProductAnalyticsTable: migrated (0.4868s) ================

                == 20200624075411 AddStorageSizeLimitToPlanLimit: migrating ===================
                -- add_column(:plan_limits, :storage_size_limit, :integer, {:default=>0, :null=>false})
                   -> 0.0054s
                == 20200624075411 AddStorageSizeLimitToPlanLimit: migrated (0.0054s) ==========

                == 20200624142107 CreateAnalyticsCycleAnalyticsGroupValueStreams: migrating ===
                -- table_exists?(:analytics_cycle_analytics_group_value_streams)
                   -> 0.0013s
                -- create_table(:analytics_cycle_analytics_group_value_streams)
                   -> 0.0091s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_cycle_analytics_group_value_streams\nADD CONSTRAINT check_bc1ed5f1f7\nCHECK ( char_length(name) <= 100 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_cycle_analytics_group_value_streams VALIDATE CONSTRAINT check_bc1ed5f1f7;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200624142107 CreateAnalyticsCycleAnalyticsGroupValueStreams: migrated (0.0175s)

                == 20200624142207 AddGroupValueStreamToCycleAnalyticsGroupStages: migrating ===
                -- add_column(:analytics_cycle_analytics_group_stages, :group_value_stream_id, :bigint)
                   -> 0.0005s
                == 20200624142207 AddGroupValueStreamToCycleAnalyticsGroupStages: migrated (0.0019s)

                == 20200624222443 AddDefaultBranchNameToApplicationSettings: migrating ========
                -- add_column(:application_settings, :default_branch_name, :text)
                   -> 0.0011s
                == 20200624222443 AddDefaultBranchNameToApplicationSettings: migrated (0.0011s)

                == 20200625045442 AddIdxAndFkForPrometheusAndEnvironmentToAlertManagementAlerts: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:alert_management_alerts, :prometheus_alert_id, {:where=>"prometheus_alert_id is not null", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:alert_management_alerts, :prometheus_alert_id, {:where=>"prometheus_alert_id is not null", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:alert_management_alerts)
                   -> 0.0040s
                -- execute("ALTER TABLE alert_management_alerts\nADD CONSTRAINT fk_51ab4b6089\nFOREIGN KEY (prometheus_alert_id)\nREFERENCES prometheus_alerts (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_alerts VALIDATE CONSTRAINT fk_51ab4b6089;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:alert_management_alerts, :environment_id, {:where=>"environment_id is not null", :algorithm=>:concurrently})
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:alert_management_alerts, :environment_id, {:where=>"environment_id is not null", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:alert_management_alerts)
                   -> 0.0036s
                -- execute("ALTER TABLE alert_management_alerts\nADD CONSTRAINT fk_aad61aedca\nFOREIGN KEY (environment_id)\nREFERENCES environments (id)\nON DELETE SET NULL\nNOT VALID;\n")NOTICE:  schema "partitions_dynamic" does not exist, skipping

                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0003s
                -- execute("ALTER TABLE alert_management_alerts VALIDATE CONSTRAINT fk_aad61aedca;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200625045442 AddIdxAndFkForPrometheusAndEnvironmentToAlertManagementAlerts: migrated (0.0337s)

                == 20200625082258 AddSnippetsSizeToRootStorageStatistics: migrating ===========
                -- add_column(:namespace_root_storage_statistics, :snippets_size, :bigint, {:default=>0, :null=>false})
                   -> 0.0009s
                == 20200625082258 AddSnippetsSizeToRootStorageStatistics: migrated (0.0022s) ==

                == 20200625113337 AddLastUsedToPersonalAccessTokens: migrating ================
                -- add_column(:personal_access_tokens, :last_used_at, :datetime_with_timezone)
                   -> 0.0004s
                == 20200625113337 AddLastUsedToPersonalAccessTokens: migrated (0.0018s) =======

                == 20200625174052 AddPartialIndexToLockedPipelines: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:ci_ref_id, :id], {:name=>"idx_ci_pipelines_artifacts_locked", :where=>"locked = 1", :algorithm=>:concurrently})
                   -> 0.0077s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:ci_ref_id, :id], {:name=>"idx_ci_pipelines_artifacts_locked", :where=>"locked = 1", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200625174052 AddPartialIndexToLockedPipelines: migrated (0.0130s) ========

                == 20200625190458 AddLimitToDefaultBranchNameToApplicationSettings: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_51700b31b5\nCHECK ( char_length(default_branch_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0009s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_51700b31b5;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200625190458 AddLimitToDefaultBranchNameToApplicationSettings: migrated (0.0062s)

                == 20200625193358 IncreaseSizeOnInstanceLevelVariableValues: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_instance_variables\nADD CONSTRAINT check_956afd70f1\nCHECK ( char_length(encrypted_value) <= 13579 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_instance_variables VALIDATE CONSTRAINT check_956afd70f1;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_instance_variables\nDROP CONSTRAINT IF EXISTS check_5ebd0515a0\n")
                   -> 0.0004s
                == 20200625193358 IncreaseSizeOnInstanceLevelVariableValues: migrated (0.0073s)

                == 20200626060151 AddDisableOverridingApproversPerMergeRequestIndices: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, [:id, :created_at], {:where=>"disable_overriding_approvers_per_merge_request = TRUE", :name=>"idx_projects_id_created_at_disable_overriding_approvers_true", :algorithm=>:concurrently})
                   -> 0.0183s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, [:id, :created_at], {:where=>"disable_overriding_approvers_per_merge_request = TRUE", :name=>"idx_projects_id_created_at_disable_overriding_approvers_true", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, [:id, :created_at], {:where=>"(disable_overriding_approvers_per_merge_request = FALSE) OR (disable_overriding_approvers_per_merge_request IS NULL)", :name=>"idx_projects_id_created_at_disable_overriding_approvers_false", :algorithm=>:concurrently})
                   -> 0.0179s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, [:id, :created_at], {:where=>"(disable_overriding_approvers_per_merge_request = FALSE) OR (disable_overriding_approvers_per_merge_request IS NULL)", :name=>"idx_projects_id_created_at_disable_overriding_approvers_false", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200626060151 AddDisableOverridingApproversPerMergeRequestIndices: migrated (0.0470s)

                == 20200626130220 DropPartitionsDynamicSchemaIfExists: migrating ==============
                -- execute("DROP SCHEMA IF EXISTS partitions_dynamic")
                   -> 0.0009s
                == 20200626130220 DropPartitionsDynamicSchemaIfExists: migrated (0.0009s) =====

                == 20200628210938 AddMaintenanceModeApplicationToSettings: migrating ==========
                -- column_exists?(:application_settings, :maintenance_mode)
                   -> 0.0399s
                -- change_table(:application_settings)
                   -> 0.0029s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_9c6c447a13\nCHECK ( char_length(maintenance_mode_message) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_9c6c447a13;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200628210938 AddMaintenanceModeApplicationToSettings: migrated (0.0490s) =

                == 20200629134747 AddExtraIndexToLabelLinks: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:label_links, [:target_id, :label_id, :target_type], {:name=>"index_on_label_links_all_columns", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:label_links, [:target_id, :label_id, :target_type], {:name=>"index_on_label_links_all_columns", :algorithm=>:concurrently})
                   -> 0.0050s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:label_links, [:label_id, :target_type], {:name=>"index_label_links_on_label_id_and_target_type", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:label_links, [:label_id, :target_type], {:name=>"index_label_links_on_label_id_and_target_type", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:label_links)
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:label_links, {:algorithm=>:concurrently, :name=>"index_label_links_on_label_id"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0004s
                == 20200629134747 AddExtraIndexToLabelLinks: migrated (0.0208s) ===============

                == 20200629192638 AddUniqIndexOnMetricIdentifierAndProjectId: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:prometheus_metrics, [:identifier, :project_id], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0028s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:prometheus_metrics, [:identifier, :project_id], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200629192638 AddUniqIndexOnMetricIdentifierAndProjectId: migrated (0.0075s)

                == 20200630091656 AddBioHtmlToUserDetails: migrating ==========================
                -- add_column(:user_details, :bio_html, :text)
                   -> 0.0005s
                -- add_column(:user_details, :cached_markdown_version, :integer)
                   -> 0.0004s
                == 20200630091656 AddBioHtmlToUserDetails: migrated (0.0024s) =================

                == 20200630110826 AddDocumentsCountTargetToElasticReindexingTasks: migrating ==
                -- add_column(:elastic_reindexing_tasks, :documents_count_target, :integer)
                   -> 0.0006s
                == 20200630110826 AddDocumentsCountTargetToElasticReindexingTasks: migrated (0.0006s)

                == 20200701064756 AddNotValidForeignKeyToCycleAnalyticsGroupStages: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:analytics_cycle_analytics_group_stages, :group_value_stream_id, {:name=>"index_analytics_ca_group_stages_on_value_stream_id", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:analytics_cycle_analytics_group_stages, :group_value_stream_id, {:name=>"index_analytics_ca_group_stages_on_value_stream_id", :algorithm=>:concurrently})
                   -> 0.0036sNOTICE:  table "untracked_files_for_uploads" does not exist, skipping

                -- execute("RESET ALL")
                   -> 0.0004s
                -- add_foreign_key(:analytics_cycle_analytics_group_stages, :analytics_cycle_analytics_group_value_streams, {:column=>:group_value_stream_id, :name=>"fk_analytics_cycle_analytics_group_stages_group_value_stream_id", :on_delete=>:cascade, :validate=>false})
                   -> 0.0012s
                == 20200701064756 AddNotValidForeignKeyToCycleAnalyticsGroupStages: migrated (0.0154s)

                == 20200701070435 AddDefaultValueStreamToGroupsWithGroupStages: migrating =====
                -- change_column_null(:analytics_cycle_analytics_group_stages, :group_value_stream_id, false)
                   -> 0.0007s
                == 20200701070435 AddDefaultValueStreamToGroupsWithGroupStages: migrated (0.0162s)

                == 20200701091253 ValidateForeignKeyOnCycleAnalyticsGroupStages: migrating ====
                -- foreign_keys(:analytics_cycle_analytics_group_stages)
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_cycle_analytics_group_stages VALIDATE CONSTRAINT fk_analytics_cycle_analytics_group_stages_group_value_stream_id;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200701091253 ValidateForeignKeyOnCycleAnalyticsGroupStages: migrated (0.0053s)

                == 20200701093859 AddImportExportLimitsToApplicationSettings: migrating =======
                -- add_column(:application_settings, :project_import_limit, :integer, {:default=>6, :null=>false})
                   -> 0.0016s
                -- add_column(:application_settings, :project_export_limit, :integer, {:default=>6, :null=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :project_download_export_limit, :integer, {:default=>1, :null=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :group_import_limit, :integer, {:default=>6, :null=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :group_export_limit, :integer, {:default=>6, :null=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :group_download_export_limit, :integer, {:default=>1, :null=>false})
                   -> 0.0011s
                == 20200701093859 AddImportExportLimitsToApplicationSettings: migrated (0.0073s)

                == 20200701190523 AddDelayedProjectRemovalToNamespaces: migrating =============
                -- add_column(:namespaces, :delayed_project_removal, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20200701190523 AddDelayedProjectRemovalToNamespaces: migrated (0.0023s) ====

                == 20200701205710 CreateBackgroundMigrationJobs: migrating ====================
                -- table_exists?(:background_migration_jobs)
                   -> 0.0005s
                -- create_table(:background_migration_jobs)
                   -> 0.0118s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE background_migration_jobs\nADD CONSTRAINT check_b0de0a5852\nCHECK ( char_length(class_name) <= 200 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE background_migration_jobs VALIDATE CONSTRAINT check_b0de0a5852;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200701205710 CreateBackgroundMigrationJobs: migrated (0.0175s) ===========

                == 20200701221303 ChangeDefaultValueOfCiMaxArtifactSizeTerraformOfPlanLimitsFrom0To5: migrating
                -- change_column_default(:plan_limits, :ci_max_artifact_size_terraform, 5)
                   -> 0.0028s
                -- execute("UPDATE plan_limits SET ci_max_artifact_size_terraform = 5 WHERE ci_max_artifact_size_terraform = 0")
                   -> 0.0005s
                == 20200701221303 ChangeDefaultValueOfCiMaxArtifactSizeTerraformOfPlanLimitsFrom0To5: migrated (0.0046s)

                == 20200702123805 ChangeProjectIdIndexToBeUniqueOnVulnerabilityStatisticsTable: migrating
                -- remove_index(:vulnerability_statistics, :project_id)
                   -> 0.0025s
                -- add_index(:vulnerability_statistics, :project_id, {:name=>"index_vulnerability_statistics_on_unique_project_id", :unique=>true})
                   -> 0.0031s
                == 20200702123805 ChangeProjectIdIndexToBeUniqueOnVulnerabilityStatisticsTable: migrated (0.0057s)

                == 20200702201039 ChangePrometheusMetricsIdentifierIndex: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:prometheus_metrics, :identifier, {:name=>:index_prometheus_metrics_on_identifier_and_null_project, :unique=>true, :where=>"project_id IS NULL", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:prometheus_metrics, :identifier, {:name=>:index_prometheus_metrics_on_identifier_and_null_project, :unique=>true, :where=>"project_id IS NULL", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:prometheus_metrics)
                   -> 0.0031s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:prometheus_metrics, {:algorithm=>:concurrently, :name=>:index_prometheus_metrics_on_identifier})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200702201039 ChangePrometheusMetricsIdentifierIndex: migrated (0.0147s) ==

                == 20200703035021 AddNotesToTimelogs: migrating ===============================
                -- add_column(:timelogs, :note_id, :integer)
                   -> 0.0005s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:timelogs, :note_id, {:algorithm=>:concurrently})
                   -> 0.0028s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:timelogs, :note_id, {:algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:timelogs)
                   -> 0.0037s
                -- execute("ALTER TABLE timelogs\nADD CONSTRAINT fk_8d058cd571\nFOREIGN KEY (note_id)\nREFERENCES notes (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE timelogs VALIDATE CONSTRAINT fk_8d058cd571;")
                   -> 0.0015s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200703035021 AddNotesToTimelogs: migrated (0.0180s) ======================

                == 20200703064117 GenerateMissingRoutesForBots: migrating =====================
                == 20200703064117 GenerateMissingRoutesForBots: migrated (0.0085s) ============

                == 20200703121557 RemoveFKeysFromCiDailyReportResultsTable: migrating =========
                -- foreign_keys(:ci_daily_report_results)
                   -> 0.0036s
                -- remove_foreign_key(:ci_daily_report_results, :projects)
                   -> 0.0045s
                -- foreign_keys(:ci_daily_report_results)
                   -> 0.0035s
                -- remove_foreign_key(:ci_daily_report_results, :ci_pipelines)
                   -> 0.0043s
                == 20200703121557 RemoveFKeysFromCiDailyReportResultsTable: migrated (0.0178s)

                == 20200703124823 CreateNamespaceSettings: migrating ==========================
                -- create_table(:namespace_settings, {:id=>false})
                   -> 0.0030s
                == 20200703124823 CreateNamespaceSettings: migrated (0.0046s) =================

                == 20200703125016 BackfillNamespaceSettings: migrating ========================
                -- Scheduling `BackfillNamespaceSettings` jobs
                -- Scheduled 1 BackfillNamespaceSettings jobs with a maximum of 10000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:25:57 +0800."
                == 20200703125016 BackfillNamespaceSettings: migrated (0.0467s) ===============

                == 20200703154822 AddIssuesEnabledToJiraTrackerData: migrating ================
                -- add_column(:jira_tracker_data, :issues_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0011s
                == 20200703154822 AddIssuesEnabledToJiraTrackerData: migrated (0.0011s) =======

                == 20200703165434 DropTemporaryTableUntrackedFilesForUploadsIfExists: migrating
                -- execute("DROP TABLE IF EXISTS untracked_files_for_uploads")
                   -> 0.0007s
                == 20200703165434 DropTemporaryTableUntrackedFilesForUploadsIfExists: migrated (0.0008s)

                == 20200704143633 AddIndexOnUserIdAndCreatedAtWhereSourceToCiPipelines: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:user_id, :created_at, :config_source], {:algorithm=>:concurrently})
                   -> 0.0076s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:user_id, :created_at, :config_source], {:algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200704143633 AddIndexOnUserIdAndCreatedAtWhereSourceToCiPipelines: migrated (0.0126s)

                == 20200704161600 AddIndexOnIdAndStatusAndCreatedAtToDeployments: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:id, :status, :created_at], {:algorithm=>:concurrently})
                   -> 0.0080s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:id, :status, :created_at], {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:id, :status], {:algorithm=>:concurrently})
                   -> 0.0077s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:deployments, {:algorithm=>:concurrently, :column=>[:id, :status]})
                   -> 0.0109s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200704161600 AddIndexOnIdAndStatusAndCreatedAtToDeployments: migrated (0.0337s)

                == 20200706005325 RemoveElasticBatchProjectIndexerWorkerQueue: migrating ======
                == 20200706005325 RemoveElasticBatchProjectIndexerWorkerQueue: migrated (0.0002s)

                == 20200706035141 AdjustUniqueIndexAlertManagementAlerts: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:alert_management_alerts, ["project_id", "fingerprint"], {:where=>"status <> 2", :name=>"index_partial_am_alerts_on_project_id_and_fingerprint", :unique=>true, :using=>:btree, :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:alert_management_alerts, ["project_id", "fingerprint"], {:where=>"status <> 2", :name=>"index_partial_am_alerts_on_project_id_and_fingerprint", :unique=>true, :using=>:btree, :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:alert_management_alerts)
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:alert_management_alerts, {:algorithm=>:concurrently, :name=>"index_alert_management_alerts_on_project_id_and_fingerprint"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20200706035141 AdjustUniqueIndexAlertManagementAlerts: migrated (0.0146s) ==

                == 20200706154619 DropCiDailyReportResultsTable: migrating ====================
                -- drop_table(:ci_daily_report_results)
                   -> 0.0013s
                == 20200706154619 DropCiDailyReportResultsTable: migrated (0.0014s) ===========

                == 20200706170536 AddTemporaryStorageIncreaseToNamespaceLimits: migrating =====
                -- add_column(:namespace_limits, :temporary_storage_increase_ends_on, :date, {:null=>true})
                   -> 0.0007s
                == 20200706170536 AddTemporaryStorageIncreaseToNamespaceLimits: migrated (0.0008s)

                == 20200707071941 DropOldNonUniqueIndexOnMrMetrics: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_request_metrics)
                   -> 0.0044s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_request_metrics, {:algorithm=>:concurrently, :name=>"index_merge_request_metrics"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200707071941 DropOldNonUniqueIndexOnMrMetrics: migrated (0.0077s) ========

                == 20200707094341 AddBrowserPerformanceToPlanLimits: migrating ================
                -- add_column(:plan_limits, "ci_max_artifact_size_browser_performance", :integer, {:default=>0, :null=>false})
                   -> 0.0012s
                == 20200707094341 AddBrowserPerformanceToPlanLimits: migrated (0.0013s) =======

                == 20200707095849 AddLoadPerformanceToPlanLimits: migrating ===================
                -- add_column(:plan_limits, "ci_max_artifact_size_load_performance", :integer, {:default=>0, :null=>false})
                   -> 0.0010s
                == 20200707095849 AddLoadPerformanceToPlanLimits: migrated (0.0010s) ==========

                == 20200708080631 AddPagerDutyIntegrationColumnsToProjectIncidentManagementSettings: migrating
                -- add_column(:project_incident_management_settings, :pagerduty_active, :boolean, {:null=>false, :default=>false})
                   -> 0.0009s
                -- add_column(:project_incident_management_settings, :encrypted_pagerduty_token, :binary, {:null=>true})
                   -> 0.0004s
                -- add_column(:project_incident_management_settings, :encrypted_pagerduty_token_iv, :binary, {:null=>true})
                   -> 0.0004s
                == 20200708080631 AddPagerDutyIntegrationColumnsToProjectIncidentManagementSettings: migrated (0.0018s)

                == 20200709101408 SchedulePopulateProjectSnippetStatistics: migrating =========
                -- exec_query("SELECT snippets.id\nFROM snippets\nINNER JOIN projects ON projects.id = snippets.project_id\nWHERE snippets.type = 'ProjectSnippet'\nORDER BY projects.namespace_id ASC, snippets.project_id ASC, snippets.id ASC\n")
                   -> 0.0024s
                == 20200709101408 SchedulePopulateProjectSnippetStatistics: migrated (0.0036s)

                == 20200710102418 DeleteUserCalloutAlertsMoved: migrating =====================
                == 20200710102418 DeleteUserCalloutAlertsMoved: migrated (0.0174s) ============

                == 20200710102846 DropIndexRubyObjectsInDetailsOnAuditEvents: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:audit_events)
                   -> 0.0021s
                -- current_schema()
                   -> 0.0002s
                == 20200710102846 DropIndexRubyObjectsInDetailsOnAuditEvents: migrated (0.0044s)

                == 20200710105332 ChangeIssuesCreateLimitDefault: migrating ===================
                -- change_column_default(:application_settings, :issues_create_limit, {:from=>300, :to=>0})
                   -> 0.0444s
                == 20200710105332 ChangeIssuesCreateLimitDefault: migrated (0.0458s) ==========

                == 20200710113437 AddContainerRegistryDeleteTagsServiceTimeoutToApplicationSettings: migrating
                -- add_column(:application_settings, :container_registry_delete_tags_service_timeout, :integer, {:default=>250, :null=>false})
                   -> 0.0015s
                == 20200710113437 AddContainerRegistryDeleteTagsServiceTimeoutToApplicationSettings: migrated (0.0015s)

                == 20200710130234 AddLimitConstraintsToProjectIncidentManagementSettingsToken: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE project_incident_management_settings\nADD CONSTRAINT pagerduty_token_length_constraint\nCHECK ( octet_length(encrypted_pagerduty_token) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_incident_management_settings VALIDATE CONSTRAINT pagerduty_token_length_constraint;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE project_incident_management_settings\nADD CONSTRAINT pagerduty_token_iv_length_constraint\nCHECK ( octet_length(encrypted_pagerduty_token_iv) <= 12 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_incident_management_settings VALIDATE CONSTRAINT pagerduty_token_iv_length_constraint;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200710130234 AddLimitConstraintsToProjectIncidentManagementSettingsToken: migrated (0.0109s)

                == 20200710152642 AddVerificationStateToTerraformStates: migrating ============
                -- change_table(:terraform_states)
                   -> 0.0021s
                == 20200710152642 AddVerificationStateToTerraformStates: migrated (0.0021s) ===

                == 20200710153009 AddVerificationFailureLimitAndIndexToTerraformStates: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_states, :verification_failure, {:where=>"(verification_failure IS NOT NULL)", :name=>"terraform_states_verification_failure_partial", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_states, :verification_failure, {:where=>"(verification_failure IS NOT NULL)", :name=>"terraform_states_verification_failure_partial", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_states, :verification_checksum, {:where=>"(verification_checksum IS NOT NULL)", :name=>"terraform_states_verification_checksum_partial", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_states, :verification_checksum, {:where=>"(verification_checksum IS NOT NULL)", :name=>"terraform_states_verification_checksum_partial", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_states\nADD CONSTRAINT check_21a47163ea\nCHECK ( char_length(verification_failure) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_states VALIDATE CONSTRAINT check_21a47163ea;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200710153009 AddVerificationFailureLimitAndIndexToTerraformStates: migrated (0.0221s)

                == 20200712084655 CreateDastSites: migrating ==================================
                -- create_table(:dast_sites)
                   -> 0.0050s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:dast_sites, [:project_id, :url], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:dast_sites, [:project_id, :url], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_sites\nADD CONSTRAINT check_46df8b449c\nCHECK ( char_length(url) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_sites VALIDATE CONSTRAINT check_46df8b449c;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200712084655 CreateDastSites: migrated (0.0169s) =========================

                == 20200712235622 CreateDastSiteProfiles: migrating ===========================
                -- create_table(:dast_site_profiles)
                   -> 0.0092s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:dast_site_profiles, [:project_id, :name], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:dast_site_profiles, [:project_id, :name], {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles\nADD CONSTRAINT check_6cfab17b48\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles VALIDATE CONSTRAINT check_6cfab17b48;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200712235622 CreateDastSiteProfiles: migrated (0.0220s) ==================

                == 20200713071042 ConfirmProjectBotUsers: migrating ===========================
                == 20200713071042 ConfirmProjectBotUsers: migrated (0.0173s) ==================

                == 20200713141854 AddWikiPageMaxContentBytesToApplicationSettings: migrating ==
                -- add_column(:application_settings, :wiki_page_max_content_bytes, :bigint, {:default=>52428800, :null=>false})
                   -> 0.0016s
                == 20200713141854 AddWikiPageMaxContentBytesToApplicationSettings: migrated (0.0017s)

                == 20200713152443 AddBackgroundMigrationJobIndexForPartitioningMigrations: migrating
                -- add_index(:background_migration_jobs, "((arguments ->> 2))", {:name=>"index_background_migration_jobs_for_partitioning_migrations", :where=>"class_name = 'Gitlab::Database::PartitioningMigrationHelpers::BackfillPartitionedTable'"})
                   -> 0.0034s
                == 20200713152443 AddBackgroundMigrationJobIndexForPartitioningMigrations: migrated (0.0034s)

                == 20200714075739 SchedulePopulatePersonalSnippetStatistics: migrating ========
                -- exec_query("SELECT id\nFROM snippets\nWHERE type = 'PersonalSnippet'\nORDER BY author_id ASC, id ASC\n")
                   -> 0.0005s
                == 20200714075739 SchedulePopulatePersonalSnippetStatistics: migrated (0.0016s)

                == 20200715124210 AddTargetDetailsToAuditEvent: migrating =====================
                -- add_column(:audit_events, :target_details, :text)
                   -> 0.0004s
                == 20200715124210 AddTargetDetailsToAuditEvent: migrated (0.0018s) ============

                == 20200715135130 CreateVulnerabilityHistoricalStatistics: migrating ==========
                -- create_table(:vulnerability_historical_statistics)
                   -> 0.0096s
                == 20200715135130 CreateVulnerabilityHistoricalStatistics: migrated (0.0109s) =

                == 20200715171155 AddDeploymentTypeToTracker: migrating =======================
                -- add_column(:jira_tracker_data, :deployment_type, :smallint, {:default=>0, :null=>false})
                   -> 0.0010s
                == 20200715171155 AddDeploymentTypeToTracker: migrated (0.0010s) ==============

                == 20200715202659 AddIndexOnPackageFilesFileStore: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_package_files, :file_store, {:algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_package_files, :file_store, {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200715202659 AddIndexOnPackageFilesFileStore: migrated (0.0070s) =========

                == 20200716044023 AddEntityPathToAuditEvents: migrating =======================
                -- add_column(:audit_events, :entity_path, :text)
                   -> 0.0004s
                == 20200716044023 AddEntityPathToAuditEvents: migrated (0.0017s) ==============

                == 20200716120000 PartitionAuditEvents: migrating =============================
                -- transaction_open?()
                   -> 0.0000s
                -- transaction()
                -- table_exists?("audit_events_part_5fc467ac26")
                   -> 0.0006s
                -- transaction()
                -- execute("CREATE TABLE audit_events_part_5fc467ac26 (\n  LIKE audit_events INCLUDING ALL EXCLUDING INDEXES,\n  partition_key_bfab5f7bb7 timestamp without time zone NOT NULL,\n  PRIMARY KEY (id, partition_key_bfab5f7bb7)\n) PARTITION BY RANGE (partition_key_bfab5f7bb7)\n")
                   -> 0.0015s
                -- remove_column("audit_events_part_5fc467ac26", "created_at")
                   -> 0.0004s
                -- rename_column("audit_events_part_5fc467ac26", "partition_key_bfab5f7bb7", "created_at")
                   -> 0.0012s
                -- change_column_default("audit_events_part_5fc467ac26", "id", nil)
                   -> 0.0015s
                -- change_column("audit_events_part_5fc467ac26", "id", :bigint)
                   -> 0.0008s
                   -> 0.0066s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_000000")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_000000 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM (MINVALUE) TO ('2018-12-01')\n")
                   -> 0.0045s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201812")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201812 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2018-12-01') TO ('2019-01-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201901")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201901 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-01-01') TO ('2019-02-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201902")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201902 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-02-01') TO ('2019-03-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201903")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201903 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-03-01') TO ('2019-04-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201904")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201904 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-04-01') TO ('2019-05-01')\n")
                   -> 0.0038s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201905")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201905 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-05-01') TO ('2019-06-01')\n")
                   -> 0.0043s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201906")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201906 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-06-01') TO ('2019-07-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201907")
                   -> 0.0020s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201907 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-07-01') TO ('2019-08-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201908")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201908 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-08-01') TO ('2019-09-01')\n")
                   -> 0.0041s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201909")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201909 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-09-01') TO ('2019-10-01')\n")
                   -> 0.0041s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201910")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201910 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-10-01') TO ('2019-11-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201911")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201911 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-11-01') TO ('2019-12-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201912")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201912 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2019-12-01') TO ('2020-01-01')\n")
                   -> 0.0036s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202001")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202001 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-01-01') TO ('2020-02-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202002")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202002 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-02-01') TO ('2020-03-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202003")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202003 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-03-01') TO ('2020-04-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202004")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202004 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-04-01') TO ('2020-05-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202005")
                   -> 0.0005s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202005 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-05-01') TO ('2020-06-01')\n")
                   -> 0.0038s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202006")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202006 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-06-01') TO ('2020-07-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202007")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202007 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-07-01') TO ('2020-08-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202008")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202008 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-08-01') TO ('2020-09-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202009")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202009 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-09-01') TO ('2020-10-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202010")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202010 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-10-01') TO ('2020-11-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202011")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202011 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-11-01') TO ('2020-12-01')\n")
                   -> 0.0043s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202012")
                   -> 0.0005s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202012 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2020-12-01') TO ('2021-01-01')\n")
                   -> 0.0038s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202101")
                   -> 0.0005s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202101 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-01-01') TO ('2021-02-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202102")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202102 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-02-01') TO ('2021-03-01')\n")
                   -> 0.0039s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202103")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202103 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-03-01') TO ('2021-04-01')\n")
                   -> 0.0041s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202104")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202104 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-04-01') TO ('2021-05-01')\n")
                   -> 0.0038s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202105")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202105 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-05-01') TO ('2021-06-01')\n")
                   -> 0.0038s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202106")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202106 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-06-01') TO ('2021-07-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202107")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202107 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-07-01') TO ('2021-08-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202108")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202108 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-08-01') TO ('2021-09-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202109")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202109 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-09-01') TO ('2021-10-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202110")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202110 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-10-01') TO ('2021-11-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202111")
                   -> 0.0017s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202111 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-11-01') TO ('2021-12-01')\n")
                   -> 0.0040s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202112")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202112 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2021-12-01') TO ('2022-01-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202201")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202201 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2022-01-01') TO ('2022-02-01')\n")
                   -> 0.0092s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202202")
                   -> 0.0005s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202202 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2022-02-01') TO ('2022-03-01')\n")
                   -> 0.0042s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202203")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202203 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2022-03-01') TO ('2022-04-01')\n")
                   -> 0.0043s
                -- table_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202204")
                   -> 0.0005s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202204 PARTITION OF audit_events_part_5fc467ac26\nFOR VALUES FROM ('2022-04-01') TO ('2022-05-01')\n")
                   -> 0.0058s
                   -> 0.2098s
                -- execute("CREATE  FUNCTION table_sync_function_2be879775d()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM audit_events_part_5fc467ac26 where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE audit_events_part_5fc467ac26\n  SET author_id = NEW.author_id,\n    type = NEW.type,\n    entity_id = NEW.entity_id,\n    entity_type = NEW.entity_type,\n    details = NEW.details,\n    updated_at = NEW.updated_at,\n    ip_address = NEW.ip_address,\n    author_name = NEW.author_name,\n    target_details = NEW.target_details,\n    entity_path = NEW.entity_path,\n    created_at = NEW.created_at\n  WHERE audit_events_part_5fc467ac26.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO audit_events_part_5fc467ac26 (id,\n    author_id,\n    type,\n    entity_id,\n    entity_type,\n    details,\n    updated_at,\n    ip_address,\n    author_name,\n    target_details,\n    entity_path,\n    created_at)\n  VALUES (NEW.id,\n    NEW.author_id,\n    NEW.type,\n    NEW.entity_id,\n    NEW.entity_type,\n    NEW.details,\n    NEW.updated_at,\n    NEW.ip_address,\n    NEW.author_name,\n    NEW.target_details,\n    NEW.entity_path,\n    NEW.created_at);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0016s
                -- execute("COMMENT ON FUNCTION table_sync_function_2be879775d IS 'Partitioning migration: table sync for audit_events table'")
                   -> 0.0002s
                -- current_schema()
                   -> 0.0002s
                -- execute("CREATE TRIGGER table_sync_trigger_ee39a25f9d\nAFTER INSERT OR UPDATE OR DELETE ON audit_events\nFOR EACH ROW\nEXECUTE FUNCTION table_sync_function_2be879775d()\n")
                   -> 0.0005s
                == 20200716120000 PartitionAuditEvents: migrated (0.2312s) ====================

                == 20200716120419 AddTextLimitOnEntityPathToAuditEvents: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events\nADD CONSTRAINT check_492aaa021d\nCHECK ( char_length(entity_path) <= 5500 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events VALIDATE CONSTRAINT check_492aaa021d;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200716120419 AddTextLimitOnEntityPathToAuditEvents: migrated (0.0059s) ===

                == 20200716145156 AddTextLimitToAuditEventTargetDetails: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events\nADD CONSTRAINT check_d493ec90b5\nCHECK ( char_length(target_details) <= 5500 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events VALIDATE CONSTRAINT check_d493ec90b5;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200716145156 AddTextLimitToAuditEventTargetDetails: migrated (0.0053s) ===

                == 20200716234259 RemoveDuplicateLabelsFromGroup: migrating ===================
                -- transaction()
                   -> 0.0034s
                -- transaction()
                   -> 0.0011s
                == 20200716234259 RemoveDuplicateLabelsFromGroup: migrated (0.0930s) ==========

                == 20200716234518 AddUniquenessIndexToLabelTitleAndGroup: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:labels, [:group_id, :title], {:where=>"labels.project_id IS NULL", :unique=>true, :name=>"index_labels_on_group_id_and_title_unique", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:labels, [:group_id, :title], {:where=>"labels.project_id IS NULL", :unique=>true, :name=>"index_labels_on_group_id_and_title_unique", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:labels, [:group_id, :title], {:name=>"index_labels_on_group_id_and_title", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:labels, {:name=>"index_labels_on_group_id_and_title", :algorithm=>:concurrently, :column=>[:group_id, :title]})
                   -> 0.0067s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200716234518 AddUniquenessIndexToLabelTitleAndGroup: migrated (0.0209s) ==

                == 20200717040735 ChangeAwsRolesRoleArnNull: migrating ========================
                -- change_column_null(:aws_roles, :role_arn, true)
                   -> 0.0006s
                == 20200717040735 ChangeAwsRolesRoleArnNull: migrated (0.0006s) ===============

                == 20200717080257 AddPreventForkingToNamespaceSettings: migrating =============
                -- add_column(:namespace_settings, :prevent_forking_outside_group, :boolean, {:null=>false, :default=>false})
                   -> 0.0011s
                == 20200717080257 AddPreventForkingToNamespaceSettings: migrated (0.0011s) ====

                == 20200717163656 AddMovedProjectToNotificationSettings: migrating ============
                -- add_column(:notification_settings, :moved_project, :boolean, {:default=>true, :null=>false})
                   -> 0.0010s
                == 20200717163656 AddMovedProjectToNotificationSettings: migrated (0.0010s) ===

                == 20200718040100 AddIndexOnMergeRequestDiffsExternalDiffStore: migrating =====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_diffs, :external_diff_store, {:algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_diffs, :external_diff_store, {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200718040100 AddIndexOnMergeRequestDiffsExternalDiffStore: migrated (0.0066s)

                == 20200718040200 AddIndexOnTerraformStatesFileStore: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_states, :file_store, {:algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_states, :file_store, {:algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200718040200 AddIndexOnTerraformStatesFileStore: migrated (0.0074s) ======

                == 20200718040300 AddIndexOnVulnerabilityExportsFileStore: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_exports, :file_store, {:algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_exports, :file_store, {:algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200718040300 AddIndexOnVulnerabilityExportsFileStore: migrated (0.0066s) =

                == 20200720053909 AddElasticsearchIndexedFileSizeLimitKbToApplicationSettings: migrating
                -- add_column(:application_settings, :elasticsearch_indexed_file_size_limit_kb, :integer, {:null=>false, :default=>1024})
                   -> 0.0022s
                == 20200720053909 AddElasticsearchIndexedFileSizeLimitKbToApplicationSettings: migrated (0.0023s)

                == 20200720154007 CreateVulnerabilitiesExportVerificationStatus: migrating ====
                -- table_exists?(:vulnerability_export_verification_status)
                   -> 0.0005s
                -- create_table(:vulnerability_export_verification_status, {:id=>false})
                   -> 0.0131s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_export_verification_status\nADD CONSTRAINT check_48fdf48546\nCHECK ( char_length(verification_failure) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_export_verification_status VALIDATE CONSTRAINT check_48fdf48546;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200720154007 CreateVulnerabilitiesExportVerificationStatus: migrated (0.0205s)

                == 20200720154123 AddExternalToCustomEmoji: migrating =========================
                -- add_column(:custom_emoji, :external, :boolean, {:default=>true, :null=>false})
                   -> 0.0011s
                == 20200720154123 AddExternalToCustomEmoji: migrated (0.0011s) ================

                == 20200720191134 AddBlockingIssuesCountToIssues: migrating ===================
                -- column_exists?(:issues, :blocking_issues_count)
                   -> 0.0019s
                -- add_column(:issues, :blocking_issues_count, :integer, {:default=>0, :null=>false})
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, [:project_id, :state_id, :blocking_issues_count], {:name=>"index_issue_on_project_id_state_id_and_blocking_issues_count", :algorithm=>:concurrently})
                   -> 0.0101s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, [:project_id, :state_id, :blocking_issues_count], {:name=>"index_issue_on_project_id_state_id_and_blocking_issues_count", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200720191134 AddBlockingIssuesCountToIssues: migrated (0.0193s) ==========

                == 20200721034536 AddIssueTypeToIssues: migrating =============================
                -- add_column(:issues, :issue_type, :integer, {:limit=>2, :default=>0, :null=>false})
                   -> 0.0009s
                == 20200721034536 AddIssueTypeToIssues: migrated (0.0023s) ====================

                == 20200721043502 AddIssueTypeIndexToIssues: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, :issue_type, {:where=>"issue_type = 1", :name=>"index_issues_on_incident_issue_type", :algorithm=>:concurrently})
                   -> 0.0098s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, :issue_type, {:where=>"issue_type = 1", :name=>"index_issues_on_incident_issue_type", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20200721043502 AddIssueTypeIndexToIssues: migrated (0.0147s) ===============

                == 20200721052853 CreateDastScannerProfile: migrating =========================
                -- table_exists?(:dast_scanner_profiles)
                   -> 0.0005s
                -- create_table(:dast_scanner_profiles)
                   -> 0.0081s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_scanner_profiles\nADD CONSTRAINT check_568568fabf\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_scanner_profiles VALIDATE CONSTRAINT check_568568fabf;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200721052853 CreateDastScannerProfile: migrated (0.0154s) ================

                == 20200721140507 UpdateIndexForCoverageFuzzingTelemetry: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:name, :id], {:name=>"index_security_ci_builds_on_name_and_id_parser_features", :where=>"((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text,\n                ('dast'::character varying)::text,\n                ('dependency_scanning'::character varying)::text,\n                ('license_management'::character varying)::text,\n                ('sast'::character varying)::text,\n                ('secret_detection'::character varying)::text,\n                ('coverage_fuzzing'::character varying)::text,\n                ('license_scanning'::character varying)::text])) AND ((type)::text = 'Ci::Build'::text)", :algorithm=>:concurrently})
                   -> 0.0118s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:name, :id], {:name=>"index_security_ci_builds_on_name_and_id_parser_features", :where=>"((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text,\n                ('dast'::character varying)::text,\n                ('dependency_scanning'::character varying)::text,\n                ('license_management'::character varying)::text,\n                ('sast'::character varying)::text,\n                ('secret_detection'::character varying)::text,\n                ('coverage_fuzzing'::character varying)::text,\n                ('license_scanning'::character varying)::text])) AND ((type)::text = 'Ci::Build'::text)", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0118s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"index_security_ci_builds_on_name_and_id"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200721140507 UpdateIndexForCoverageFuzzingTelemetry: migrated (0.0321s) ==

                == 20200721230558 AddIndexToProjectsAimedForDeletion: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, :marked_for_deletion_at, {:where=>"marked_for_deletion_at IS NOT NULL AND pending_delete = false", :name=>"index_projects_aimed_for_deletion", :algorithm=>:concurrently})
                   -> 0.0191s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, :marked_for_deletion_at, {:where=>"marked_for_deletion_at IS NOT NULL AND pending_delete = false", :name=>"index_projects_aimed_for_deletion", :algorithm=>:concurrently})
                   -> 0.0048s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:projects)
                   -> 0.0192s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:projects, {:algorithm=>:concurrently, :name=>"index_projects_on_marked_for_deletion_at"})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200721230558 AddIndexToProjectsAimedForDeletion: migrated (0.0477s) ======

                == 20200722075411 AddCiNeedsSizeLimitToPlanLimit: migrating ===================
                -- add_column(:plan_limits, :ci_needs_size_limit, :integer, {:default=>50, :null=>false})
                   -> 0.0012s
                == 20200722075411 AddCiNeedsSizeLimitToPlanLimit: migrated (0.0013s) ==========

                == 20200722084623 AddDefaultMembershipRoleToSamlProvider: migrating ===========
                -- add_column(:saml_providers, :default_membership_role, :smallint, {:default=>10, :null=>false})
                   -> 0.0011s
                == 20200722084623 AddDefaultMembershipRoleToSamlProvider: migrated (0.0012s) ==

                == 20200722091435 AddRelativePositionToDesignManagementDesigns: migrating =====
                -- add_column(:design_management_designs, :relative_position, :integer)
                   -> 0.0006s
                == 20200722091435 AddRelativePositionToDesignManagementDesigns: migrated (0.0007s)

                == 20200722131241 CreateResourceIterationEventsTable: migrating ===============
                -- create_table(:resource_iteration_events)
                   -> 0.0143s
                == 20200722131241 CreateResourceIterationEventsTable: migrated (0.0144s) ======

                == 20200722132040 AddUsersFkToResourceIterationEventsTable: migrating =========
                -- add_foreign_key(:resource_iteration_events, :users, {:column=>:user_id, :on_delete=>:nullify})
                   -> 0.0024s
                == 20200722132040 AddUsersFkToResourceIterationEventsTable: migrated (0.0039s)

                == 20200722132540 AddIssuesFkToResourceIterationEventsTable: migrating ========
                -- add_foreign_key(:resource_iteration_events, :issues, {:column=>:issue_id, :on_delete=>:cascade})
                   -> 0.0017s
                == 20200722132540 AddIssuesFkToResourceIterationEventsTable: migrated (0.0031s)

                == 20200722133040 AddMergeRequestsFkToResourceIterationEventsTable: migrating =
                -- add_foreign_key(:resource_iteration_events, :merge_requests, {:column=>:merge_request_id, :on_delete=>:cascade})
                   -> 0.0018s
                == 20200722133040 AddMergeRequestsFkToResourceIterationEventsTable: migrated (0.0032s)

                == 20200722133540 AddIterationsFkToResourceIterationEventsTable: migrating ====
                -- add_foreign_key(:resource_iteration_events, :sprints, {:column=>:iteration_id, :on_delete=>:cascade})
                   -> 0.0015s
                == 20200722133540 AddIterationsFkToResourceIterationEventsTable: migrated (0.0031s)

                == 20200722202318 BackfillPartitionedAuditEvents: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- Scheduled 1 ::Gitlab::Database::PartitioningMigrationHelpers::BackfillPartitionedTable jobs with a maximum of 50000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:25:58 +0800."
                == 20200722202318 BackfillPartitionedAuditEvents: migrated (0.0611s) ==========

                == 20200723040950 MigrateIncidentIssuesToIncidentType: migrating ==============
                == 20200723040950 MigrateIncidentIssuesToIncidentType: migrated (0.0066s) =====

                == 20200723125205 AddTargetProjectIdToMrMetrics: migrating ====================
                -- add_column(:merge_request_metrics, :target_project_id, :integer)
                   -> 0.0005s
                == 20200723125205 AddTargetProjectIdToMrMetrics: migrated (0.0019s) ===========

                == 20200723128332 AddFkToMetricsTargetProjectId: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_metrics, :target_project_id, {:algorithm=>:concurrently})
                   -> 0.0049s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_metrics, :target_project_id, {:algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:merge_request_metrics)
                   -> 0.0039s
                -- execute("ALTER TABLE merge_request_metrics\nADD CONSTRAINT fk_56067dcb44\nFOREIGN KEY (target_project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE merge_request_metrics VALIDATE CONSTRAINT fk_56067dcb44;")
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200723128332 AddFkToMetricsTargetProjectId: migrated (0.0200s) ===========

                == 20200723132258 ScheduleCopyOfMrTargetProjectIdToMrMetrics: migrating =======
                -- Scheduled 1 CopyMergeRequestTargetProjectToMergeRequestMetrics jobs with a maximum of 5000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:25:58 +0800."
                == 20200723132258 ScheduleCopyOfMrTargetProjectIdToMrMetrics: migrated (0.0577s)

                == 20200724100123 AddIndexOnVulnerabilityHistoricalStatisticsDate: migrating ==
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_historical_statistics, [:date, :id], {:algorithm=>:concurrently})
                   -> 0.0018s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_historical_statistics, [:date, :id], {:algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200724100123 AddIndexOnVulnerabilityHistoricalStatisticsDate: migrated (0.0065s)

                == 20200724100421 RemoveUpdatedAtFromAuditEvents: migrating ===================
                -- remove_column("audit_events", :updated_at)
                   -> 0.0005s
                -- execute("CREATE OR REPLACE FUNCTION table_sync_function_2be879775d()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM audit_events_part_5fc467ac26 where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE audit_events_part_5fc467ac26\n  SET author_id = NEW.author_id,\n    type = NEW.type,\n    entity_id = NEW.entity_id,\n    entity_type = NEW.entity_type,\n    details = NEW.details,\n    ip_address = NEW.ip_address,\n    author_name = NEW.author_name,\n    entity_path = NEW.entity_path,\n    target_details = NEW.target_details,\n    created_at = NEW.created_at\n  WHERE audit_events_part_5fc467ac26.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO audit_events_part_5fc467ac26 (id,\n    author_id,\n    type,\n    entity_id,\n    entity_type,\n    details,\n    ip_address,\n    author_name,\n    entity_path,\n    target_details,\n    created_at)\n  VALUES (NEW.id,\n    NEW.author_id,\n    NEW.type,\n    NEW.entity_id,\n    NEW.entity_type,\n    NEW.details,\n    NEW.ip_address,\n    NEW.author_name,\n    NEW.entity_path,\n    NEW.target_details,\n    NEW.created_at);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0004s
                -- remove_column("audit_events_part_5fc467ac26", :updated_at)
                   -> 0.0033s
                == 20200724100421 RemoveUpdatedAtFromAuditEvents: migrated (0.0059s) ==========

                == 20200724130639 BackfillDesignsRelativePosition: migrating ==================
                == 20200724130639 BackfillDesignsRelativePosition: migrated (0.0000s) =========

                == 20200727082309 RemoveIndexChatNameServiceId: migrating =====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:chat_names, :service_id, {:algorithm=>:concurrently})
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:chat_names, {:algorithm=>:concurrently, :column=>:service_id})
                   -> 0.0050s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200727082309 RemoveIndexChatNameServiceId: migrated (0.0082s) ============

                == 20200727100631 RemoveAgainGitlabIssueTrackerServiceRecords: migrating ======
                == 20200727100631 RemoveAgainGitlabIssueTrackerServiceRecords: migrated (0.0304s)

                == 20200727114147 RemoveTitleAndDescriptionFromServices: migrating ============
                -- remove_column(:services, :title, :string)
                   -> 0.0006s
                -- remove_column(:services, :description, :string, {:limit=>500})
                   -> 0.0003s
                == 20200727114147 RemoveTitleAndDescriptionFromServices: migrated (0.0010s) ===

                == 20200727142337 UpdateDefaultsForScaArtifacts: migrating ====================
                -- change_column_default(:plan_limits, :ci_max_artifact_size_dependency_scanning, 350)
                   -> 0.0035s
                -- change_column_default(:plan_limits, :ci_max_artifact_size_container_scanning, 150)
                   -> 0.0026s
                -- change_column_default(:plan_limits, :ci_max_artifact_size_license_scanning, 100)
                   -> 0.0027s
                == 20200727142337 UpdateDefaultsForScaArtifacts: migrated (0.0090s) ===========

                == 20200728080250 ReplaceUniqueIndexOnCycleAnalyticsStages: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:analytics_cycle_analytics_group_stages, [:group_id, :group_value_stream_id, :name], {:unique=>true, :name=>"index_group_stages_on_group_id_group_value_stream_id_and_name", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:analytics_cycle_analytics_group_stages, [:group_id, :group_value_stream_id, :name], {:unique=>true, :name=>"index_group_stages_on_group_id_group_value_stream_id_and_name", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:analytics_cycle_analytics_group_stages)
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:analytics_cycle_analytics_group_stages, {:algorithm=>:concurrently, :name=>"index_analytics_ca_group_stages_on_group_id_and_name"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200728080250 ReplaceUniqueIndexOnCycleAnalyticsStages: migrated (0.0158s)

                == 20200728163009 AddDeploymentEventsToWebHooks: migrating ====================
                -- add_column(:web_hooks, :deployment_events, :boolean, {:null=>false, :default=>false})
                   -> 0.0011s
                == 20200728163009 AddDeploymentEventsToWebHooks: migrated (0.0012s) ===========

                == 20200728174137 AddIndexOnDesignManagementDesignsIssueIdAndRelativePositionAndId: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:design_management_designs, [:issue_id, :relative_position, :id], {:name=>"index_design_management_designs_issue_id_relative_position_id", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:design_management_designs, [:issue_id, :relative_position, :id], {:name=>"index_design_management_designs_issue_id_relative_position_id", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200728174137 AddIndexOnDesignManagementDesignsIssueIdAndRelativePositionAndId: migrated (0.0086s)

                == 20200728175710 AddEnforceNamespaceStorageLimitToApplicationSettings: migrating
                -- add_column(:application_settings, :enforce_namespace_storage_limit, :boolean, {:default=>false, :null=>false})
                   -> 0.0016s
                == 20200728175710 AddEnforceNamespaceStorageLimitToApplicationSettings: migrated (0.0016s)

                == 20200728182311 AddOAuthPathsToProtectedPaths: migrating ====================
                -- change_column_default(:application_settings, :protected_paths, ["/users/password", "/users/sign_in", "/api/v3/session.json", "/api/v3/session", "/api/v4/session.json", "/api/v4/session", "/users", "/users/confirmation", "/unsubscribes/", "/import/github/personal_access_token", "/admin/session", "/oauth/authorize", "/oauth/token"])
                   -> 0.0453s
                == 20200728182311 AddOAuthPathsToProtectedPaths: migrated (0.3545s) ===========

                == 20200729151021 AddAfterExpiryNotificationDeliveredToPersonalAccessTokens: migrating
                -- add_column(:personal_access_tokens, :after_expiry_notification_delivered, :boolean, {:null=>false, :default=>false})
                   -> 0.0014s
                == 20200729151021 AddAfterExpiryNotificationDeliveredToPersonalAccessTokens: migrated (0.0015s)

                == 20200729175935 AddDashboardPathToPrometheusMetrics: migrating ==============
                -- add_column(:prometheus_metrics, :dashboard_path, :text)
                   -> 0.0006s
                == 20200729175935 AddDashboardPathToPrometheusMetrics: migrated (0.0006s) =====

                == 20200729180539 AddCanPushToGroupDeployKeysGroups: migrating ================
                -- add_column(:group_deploy_keys_groups, :can_push, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20200729180539 AddCanPushToGroupDeployKeysGroups: migrated (0.0009s) =======

                == 20200729181641 AddIndexToResourceMilestoneEventsAddEvents: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:resource_milestone_events, :milestone_id, {:where=>"action = 1", :name=>"index_resource_milestone_events_on_milestone_id_and_add_action", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:resource_milestone_events, :milestone_id, {:where=>"action = 1", :name=>"index_resource_milestone_events_on_milestone_id_and_add_action", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200729181641 AddIndexToResourceMilestoneEventsAddEvents: migrated (0.0074s)

                == 20200729191227 AddRunbookToPrometheusAlert: migrating ======================
                -- add_column(:prometheus_alerts, :runbook_url, :text)
                   -> 0.0024s
                == 20200729191227 AddRunbookToPrometheusAlert: migrated (0.0024s) =============

                == 20200729200808 AddTextLimitToRunbookOnPrometheusAlerts: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE prometheus_alerts\nADD CONSTRAINT check_cb76d7e629\nCHECK ( char_length(runbook_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE prometheus_alerts VALIDATE CONSTRAINT check_cb76d7e629;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200729200808 AddTextLimitToRunbookOnPrometheusAlerts: migrated (0.0054s) =

                == 20200729202222 AddIndexToCiPipelineProjectIdCreatedAt: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:project_id, :created_at], {:algorithm=>:concurrently})
                   -> 0.0082s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:project_id, :created_at], {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200729202222 AddIndexToCiPipelineProjectIdCreatedAt: migrated (0.0127s) ==

                == 20200730044810 AddIndexesToResourceLabelEventsToSupportVsa: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:resource_label_events, [:issue_id, :label_id, :action], {:name=>"index_resource_label_events_issue_id_label_id_action", :algorithm=>:concurrently})
                   -> 0.0028s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:resource_label_events, [:issue_id, :label_id, :action], {:name=>"index_resource_label_events_issue_id_label_id_action", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:resource_label_events)
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:resource_label_events, {:algorithm=>:concurrently, :name=>"index_resource_label_events_on_issue_id"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:resource_label_events, [:merge_request_id, :label_id, :action], {:name=>"index_resource_label_events_on_merge_request_id_label_id_action", :algorithm=>:concurrently})
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:resource_label_events, [:merge_request_id, :label_id, :action], {:name=>"index_resource_label_events_on_merge_request_id_label_id_action", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:resource_label_events)
                   -> 0.0031s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:resource_label_events, {:algorithm=>:concurrently, :name=>"index_resource_label_events_on_merge_request_id"})
                   -> 0.0023s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200730044810 AddIndexesToResourceLabelEventsToSupportVsa: migrated (0.0279s)

                == 20200730083043 ReplaceIndexForServiceUsageData: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:services, [:type, :id], {:where=>"active = TRUE AND instance = FALSE AND template = FALSE", :name=>"index_services_on_type_id_when_active_not_instance_not_template", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:services, [:type, :id], {:where=>"active = TRUE AND instance = FALSE AND template = FALSE", :name=>"index_services_on_type_id_when_active_not_instance_not_template", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:services)
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:services, {:algorithm=>:concurrently, :name=>"index_services_on_type_and_id_and_template_when_active"})
                   -> 0.0023s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200730083043 ReplaceIndexForServiceUsageData: migrated (0.0158s) =========

                == 20200730131946 AddHideListsToBoards: migrating =============================
                -- add_column(:boards, :hide_backlog_list, :boolean, {:default=>false, :null=>false})
                   -> 0.0011s
                -- add_column(:boards, :hide_closed_list, :boolean, {:default=>false, :null=>false})
                   -> 0.0007s
                == 20200730131946 AddHideListsToBoards: migrated (0.0019s) ====================

                == 20200730133730 RemoveTableVulnerabilityExportVerificationStatus: migrating =
                -- table_exists?(:vulnerability_export_verification_status)
                   -> 0.0007s
                -- drop_table(:vulnerability_export_verification_status)
                   -> 0.0013s
                == 20200730133730 RemoveTableVulnerabilityExportVerificationStatus: migrated (0.0020s)

                == 20200730210506 AddTextLimitToDashboardPath: migrating ======================
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE prometheus_metrics\nADD CONSTRAINT check_0ad9f01463\nCHECK ( char_length(dashboard_path) <= 2048 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE prometheus_metrics VALIDATE CONSTRAINT check_0ad9f01463;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200730210506 AddTextLimitToDashboardPath: migrated (0.0054s) =============

                == 20200731085019 CreateExperiment: migrating =================================
                -- table_exists?(:experiments)
                   -> 0.0007s
                -- create_table(:experiments)
                   -> 0.0076s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE experiments\nADD CONSTRAINT check_e2dda25ed0\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE experiments VALIDATE CONSTRAINT check_e2dda25ed0;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200731085019 CreateExperiment: migrated (0.0135s) ========================

                == 20200731090553 CreateExperimentUser: migrating =============================
                -- create_table(:experiment_users)
                   -> 0.0030s
                -- add_index(:experiment_users, :experiment_id)
                   -> 0.0027s
                -- add_index(:experiment_users, :user_id)
                   -> 0.0026s
                == 20200731090553 CreateExperimentUser: migrated (0.0085s) ====================

                == 20200731201408 AddForeignKeyToExperimentOnExperimentUsers: migrating =======
                -- add_foreign_key(:experiment_users, :experiments, {:column=>:experiment_id, :on_delete=>:cascade})
                   -> 0.0012s
                == 20200731201408 AddForeignKeyToExperimentOnExperimentUsers: migrated (0.0026s)

                == 20200731201834 AddForeignKeyToUserOnExperimentUsers: migrating =============
                -- add_foreign_key(:experiment_users, :users, {:column=>:user_id, :on_delete=>:cascade})
                   -> 0.0015s
                == 20200731201834 AddForeignKeyToUserOnExperimentUsers: migrated (0.0029s) ====

                == 20200803111512 AddGroupIdToServices: migrating =============================
                -- add_column(:services, :group_id, :bigint)
                   -> 0.0007s
                == 20200803111512 AddGroupIdToServices: migrated (0.0007s) ====================

                == 20200803112806 AddIndexGroupIdToServices: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:services, [:group_id, :type], {:unique=>true, :name=>"index_services_on_unique_group_id_and_type", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:services, [:group_id, :type], {:unique=>true, :name=>"index_services_on_unique_group_id_and_type", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:services)
                   -> 0.0036s
                -- execute("ALTER TABLE services\nADD CONSTRAINT fk_e8fe908a34\nFOREIGN KEY (group_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE services VALIDATE CONSTRAINT fk_e8fe908a34;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200803112806 AddIndexGroupIdToServices: migrated (0.0164s) ===============

                == 20200803125340 CreateRawUsageData: migrating ===============================
                -- table_exists?(:raw_usage_data)
                   -> 0.0006s
                -- create_table(:raw_usage_data)
                   -> 0.0066s
                == 20200803125340 CreateRawUsageData: migrated (0.0073s) ======================

                == 20200804035230 AddPartialIndexOnIdToMergeRequestDiffs: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_diffs, :id, {:where=>"external_diff_store IS NULL", :name=>"index_merge_request_diffs_external_diff_store_is_null", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_diffs, :id, {:where=>"external_diff_store IS NULL", :name=>"index_merge_request_diffs_external_diff_store_is_null", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200804035230 AddPartialIndexOnIdToMergeRequestDiffs: migrated (0.0067s) ==

                == 20200804041018 AddDefaultValueForExternalDiffStoreToMergeRequestDiffs: migrating
                -- change_column_default(:merge_request_diffs, :external_diff_store, 1)
                   -> 0.0017s
                == 20200804041018 AddDefaultValueForExternalDiffStoreToMergeRequestDiffs: migrated (0.0030s)

                == 20200804041930 AddNotNullConstraintOnExternalDiffStoreToMergeRequestDiffs: migrating
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE merge_request_diffs\nADD CONSTRAINT check_93ee616ac9\nCHECK ( external_diff_store IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20200804041930 AddNotNullConstraintOnExternalDiffStoreToMergeRequestDiffs: migrated (0.0077s)

                == 20200804222543 AddResolvedOnDefaultBranchIntoVulnerabilitiesTable: migrating
                -- change_table(:vulnerabilities)
                   -> 0.0011s
                == 20200804222543 AddResolvedOnDefaultBranchIntoVulnerabilitiesTable: migrated (0.0011s)

                == 20200805071842 AddIndexOnEndDateAndNamespaceIdToGitlabSubscriptions: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:gitlab_subscriptions, [:end_date, :namespace_id], {:algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:gitlab_subscriptions, [:end_date, :namespace_id], {:algorithm=>:concurrently})
                   -> 0.0051s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200805071842 AddIndexOnEndDateAndNamespaceIdToGitlabSubscriptions: migrated (0.0078s)

                == 20200805150316 CreateCiPipelineArtifact: migrating =========================
                -- table_exists?(:ci_pipeline_artifacts)
                   -> 0.0005s
                -- create_table(:ci_pipeline_artifacts)
                   -> 0.0135s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_artifacts\nADD CONSTRAINT check_191b5850ec\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_artifacts VALIDATE CONSTRAINT check_191b5850ec;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200805150316 CreateCiPipelineArtifact: migrated (0.0192s) ================

                == 20200805151001 AddForeignKeyToPipelineIdOnPipelineArtifact: migrating ======
                -- add_foreign_key(:ci_pipeline_artifacts, :ci_pipelines, {:column=>:pipeline_id, :on_delete=>:cascade})
                   -> 0.0016s
                == 20200805151001 AddForeignKeyToPipelineIdOnPipelineArtifact: migrated (0.0030s)

                == 20200805151726 AddForeignKeyToProjectIdOnPipelineArtifact: migrating =======
                -- add_foreign_key(:ci_pipeline_artifacts, :projects, {:column=>:project_id, :on_delete=>:cascade})
                   -> 0.0016s
                == 20200805151726 AddForeignKeyToProjectIdOnPipelineArtifact: migrated (0.0030s)

                == 20200805152108 MigrateNullExternalDiffStoreToLocalValue: migrating =========
                == 20200805152108 MigrateNullExternalDiffStoreToLocalValue: migrated (0.0277s)

                == 20200806004232 AddDefaultValueForFileStoreToPackageFiles: migrating ========
                -- change_column_default(:packages_package_files, :file_store, 1)
                   -> 0.0019s
                == 20200806004232 AddDefaultValueForFileStoreToPackageFiles: migrated (0.0032s)

                == 20200806004742 AddNotNullConstraintOnFileStoreToPackageFiles: migrating ====
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_package_files\nADD CONSTRAINT check_4c5e6bb0b3\nCHECK ( file_store IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0005s
                == 20200806004742 AddNotNullConstraintOnFileStoreToPackageFiles: migrated (0.0062s)

                == 20200806172909 AddPartialIndexOnIdToPackageFiles: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_package_files, :id, {:where=>"file_store IS NULL", :name=>"index_packages_package_files_file_store_is_null", :algorithm=>:concurrently})
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_package_files, :id, {:where=>"file_store IS NULL", :name=>"index_packages_package_files_file_store_is_null", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200806172909 AddPartialIndexOnIdToPackageFiles: migrated (0.0072s) =======

                == 20200806173633 MigrateNullPackageFilesFileStoreToLocalValue: migrating =====
                == 20200806173633 MigrateNullPackageFilesFileStoreToLocalValue: migrated (0.0129s)

                == 20200807070820 AddIndexForComplianceMergedMergeRequestToEvents: migrating ==
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:events, [:project_id, :id], {:order=>{:id=>:desc}, :where=>"action = 7", :name=>"index_events_on_project_id_and_id_desc_on_merged_action", :algorithm=>:concurrently})
                   -> 0.0050s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:events, [:project_id, :id], {:order=>{:id=>:desc}, :where=>"action = 7", :name=>"index_events_on_project_id_and_id_desc_on_merged_action", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200807070820 AddIndexForComplianceMergedMergeRequestToEvents: migrated (0.0118s)

                == 20200807110237 AddMigrationIndexToVulnerabilitiesOccurrences: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_occurrences, "project_id, report_type, encode(project_fingerprint, 'hex'::text)", {:name=>"index_vulnerability_occurrences_for_issue_links_migration", :algorithm=>:concurrently})
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_occurrences, "project_id, report_type, encode(project_fingerprint, 'hex'::text)", {:name=>"index_vulnerability_occurrences_for_issue_links_migration", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200807110237 AddMigrationIndexToVulnerabilitiesOccurrences: migrated (0.0073s)

                == 20200807132726 AddDeleteOriginalIndexAtToReindexingTasks: migrating ========
                -- add_column(:elastic_reindexing_tasks, :delete_original_index_at, :datetime_with_timezone)
                   -> 0.0005s
                == 20200807132726 AddDeleteOriginalIndexAtToReindexingTasks: migrated (0.0021s)

                == 20200807150937 AddFileCountToMergeRequestDiffs: migrating ==================
                -- add_column(:merge_request_diffs, :files_count, :smallint)
                   -> 0.0004s
                == 20200807150937 AddFileCountToMergeRequestDiffs: migrated (0.0019s) =========

                == 20200807152315 BackfillMergeRequestDiffsFilesCounts: migrating =============
                -- Scheduled 1 SetMergeRequestDiffFilesCount jobs with a maximum of 10000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:25:59 +0800."
                == 20200807152315 BackfillMergeRequestDiffsFilesCounts: migrated (0.0154s) ====

                == 20200808221641 AddIndexForLicenseComplianceArtifacts: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_job_artifacts, [:job_id, :file_type], {:where=>"file_type = 10 OR file_type = 101", :name=>"index_ci_job_artifacts_on_license_compliance_file_types", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_job_artifacts, [:job_id, :file_type], {:where=>"file_type = 10 OR file_type = 101", :name=>"index_ci_job_artifacts_on_license_compliance_file_types", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200808221641 AddIndexForLicenseComplianceArtifacts: migrated (0.0079s) ===

                == 20200809221641 MigrateLicenseManagementArtifactsToLicenseScanning: migrating
                == 20200809221641 MigrateLicenseManagementArtifactsToLicenseScanning: migrated (0.0001s)

                == 20200810100921 AddTargetTypeToAuditEvent: migrating ========================
                -- add_column("audit_events", :target_type, :text)
                   -> 0.0004s
                -- add_column("audit_events_part_5fc467ac26", :target_type, :text)
                   -> 0.0034s
                -- execute("CREATE OR REPLACE FUNCTION table_sync_function_2be879775d()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM audit_events_part_5fc467ac26 where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE audit_events_part_5fc467ac26\n  SET author_id = NEW.author_id,\n    type = NEW.type,\n    entity_id = NEW.entity_id,\n    entity_type = NEW.entity_type,\n    details = NEW.details,\n    ip_address = NEW.ip_address,\n    author_name = NEW.author_name,\n    entity_path = NEW.entity_path,\n    target_details = NEW.target_details,\n    target_type = NEW.target_type,\n    created_at = NEW.created_at\n  WHERE audit_events_part_5fc467ac26.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO audit_events_part_5fc467ac26 (id,\n    author_id,\n    type,\n    entity_id,\n    entity_type,\n    details,\n    ip_address,\n    author_name,\n    entity_path,\n    target_details,\n    target_type,\n    created_at)\n  VALUES (NEW.id,\n    NEW.author_id,\n    NEW.type,\n    NEW.entity_id,\n    NEW.entity_type,\n    NEW.details,\n    NEW.ip_address,\n    NEW.author_name,\n    NEW.entity_path,\n    NEW.target_details,\n    NEW.target_type,\n    NEW.created_at);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0005s
                == 20200810100921 AddTargetTypeToAuditEvent: migrated (0.0057s) ===============

                == 20200810101029 AddTextLimitToAuditEventTargetType: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0003s
                -- execute("ALTER TABLE audit_events\nADD CONSTRAINT check_82294106dd\nCHECK ( char_length(target_type) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events VALIDATE CONSTRAINT check_82294106dd;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events_part_5fc467ac26\nADD CONSTRAINT check_97a8c868e7\nCHECK ( char_length(target_type) <= 255 )\nNOT VALID;\n")
                   -> 0.0059s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE audit_events_part_5fc467ac26 VALIDATE CONSTRAINT check_97a8c868e7;")
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20200810101029 AddTextLimitToAuditEventTargetType: migrated (0.0201s) ======

                == 20200810152043 AddExpireAtToCiPipelineArtifact: migrating ==================
                -- add_column(:ci_pipeline_artifacts, :expire_at, :datetime_with_timezone)
                   -> 0.0006s
                == 20200810152043 AddExpireAtToCiPipelineArtifact: migrated (0.0006s) =========

                == 20200810160355 AddNotNullConstraintToCiPipelineArtifactFile: migrating =====
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_artifacts\nADD CONSTRAINT check_abeeb71caf\nCHECK ( file IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_artifacts VALIDATE CONSTRAINT check_abeeb71caf;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200810160355 AddNotNullConstraintToCiPipelineArtifactFile: migrated (0.0083s)

                == 20200810191256 RemovePipelineIdFromTestReports: migrating ==================
                -- remove_column(:requirements_management_test_reports, :pipeline_id)
                   -> 0.0010s
                == 20200810191256 RemovePipelineIdFromTestReports: migrated (0.0010s) =========

                == 20200811055018 RemoveNotNullConstraintOnTypeFromAuditEvents: migrating =====
                -- change_column_null(:audit_events_part_5fc467ac26, :type, true)
                   -> 0.0030s
                -- change_column_null(:audit_events, :type, true)
                   -> 0.0004s
                == 20200811055018 RemoveNotNullConstraintOnTypeFromAuditEvents: migrated (0.0065s)

                == 20200811130000 CreateIndexVulnerabilitiesFeedbackIssueIdNotNull: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_feedback, :id, {:where=>"issue_id IS NOT NULL", :name=>"index_vulnerability_feedback_on_issue_id_not_null", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_feedback, :id, {:where=>"issue_id IS NOT NULL", :name=>"index_vulnerability_feedback_on_issue_id_not_null", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200811130000 CreateIndexVulnerabilitiesFeedbackIssueIdNotNull: migrated (0.0081s)

                == 20200811130433 CreateMissingVulnerabilitiesIssueLinks: migrating ===========
                == 20200811130433 CreateMissingVulnerabilitiesIssueLinks: migrated (0.0130s) ==

                == 20200811154630 AddGitpodApplicationSettings: migrating =====================
                -- add_column(:application_settings, :gitpod_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0016s
                -- add_column(:application_settings, :gitpod_url, :text, {:default=>"https://gitpod.io/", :null=>true})
                   -> 0.0011s
                == 20200811154630 AddGitpodApplicationSettings: migrated (0.0028s) ============

                == 20200811154631 AddGitpodApplicationSettingsTextLimit: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_2dba05b802\nCHECK ( char_length(gitpod_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_2dba05b802;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200811154631 AddGitpodApplicationSettingsTextLimit: migrated (0.0066s) ===

                == 20200811154632 AddGitpodUserPreferences: migrating =========================
                -- add_column(:user_preferences, :gitpod_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0010s
                == 20200811154632 AddGitpodUserPreferences: migrated (0.0010s) ================

                == 20200811194848 AddDefaultValueForFileStoreToPipelineArtifact: migrating ====
                -- change_column_default(:ci_pipeline_artifacts, :file_store, 1)
                   -> 0.0017s
                == 20200811194848 AddDefaultValueForFileStoreToPipelineArtifact: migrated (0.0030s)

                == 20200811211536 AddIndexToCiJobArtifactsForTerraformReportsId: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_job_artifacts, :id, {:where=>"file_type = 18", :name=>"index_ci_job_artifacts_id_for_terraform_reports", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_job_artifacts, :id, {:where=>"file_type = 18", :name=>"index_ci_job_artifacts_id_for_terraform_reports", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200811211536 AddIndexToCiJobArtifactsForTerraformReportsId: migrated (0.0082s)

                == 20200812112204 AddIndexToMrMetricsTargetProjectId: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_metrics, [:target_project_id, :merged_at], {:name=>"index_merge_request_metrics_on_target_project_id_merged_at", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_metrics, [:target_project_id, :merged_at], {:name=>"index_merge_request_metrics_on_target_project_id_merged_at", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200812112204 AddIndexToMrMetricsTargetProjectId: migrated (0.0085s) ======

                == 20200812150810 AddVerificationStateToSnippetRepository: migrating ==========
                -- change_table(:snippet_repositories)
                   -> 0.0035s
                == 20200812150810 AddVerificationStateToSnippetRepository: migrated (0.0035s) =

                == 20200812150811 AddVerificationFailureToSnippetRepository: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE snippet_repositories\nADD CONSTRAINT snippet_repositories_verification_failure_text_limit\nCHECK ( char_length(verification_failure) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE snippet_repositories VALIDATE CONSTRAINT snippet_repositories_verification_failure_text_limit;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200812150811 AddVerificationFailureToSnippetRepository: migrated (0.0051s)

                == 20200812150812 AddVerificationFailureIndexToSnippetRepository: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippet_repositories, :verification_failure, {:where=>"(verification_failure IS NOT NULL)", :name=>"snippet_repositories_verification_failure_partial", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippet_repositories, :verification_failure, {:where=>"(verification_failure IS NOT NULL)", :name=>"snippet_repositories_verification_failure_partial", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippet_repositories, :verification_checksum, {:where=>"(verification_checksum IS NOT NULL)", :name=>"snippet_repositories_verification_checksum_partial", :algorithm=>:concurrently})
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippet_repositories, :verification_checksum, {:where=>"(verification_checksum IS NOT NULL)", :name=>"snippet_repositories_verification_checksum_partial", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200812150812 AddVerificationFailureIndexToSnippetRepository: migrated (0.0129s)

                == 20200813135558 CreateCiDeletedObjects: migrating ===========================
                -- create_table(:ci_deleted_objects, {:if_not_exists=>true})
                   -> 0.0079s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_deleted_objects\nADD CONSTRAINT check_5e151d6912\nCHECK ( char_length(store_dir) <= 1024 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_deleted_objects VALIDATE CONSTRAINT check_5e151d6912;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200813135558 CreateCiDeletedObjects: migrated (0.0131s) ==================

                == 20200813143304 AddNewExternalDiffMigrationIndex: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_diffs, :id, {:name=>"index_merge_request_diffs_by_id_partial", :where=>"files_count > 0 AND ((NOT stored_externally) OR (stored_externally IS NULL))", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_diffs, :id, {:name=>"index_merge_request_diffs_by_id_partial", :where=>"files_count > 0 AND ((NOT stored_externally) OR (stored_externally IS NULL))", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20200813143304 AddNewExternalDiffMigrationIndex: migrated (0.0072s) ========

                == 20200813143356 RemoveOldExternalDiffMigrationIndex: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_request_diffs)
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_request_diffs, {:algorithm=>:concurrently, :name=>"index_merge_request_diffs_on_merge_request_id_and_id_partial"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200813143356 RemoveOldExternalDiffMigrationIndex: migrated (0.0063s) =====

                == 20200813153434 ImportLatestCommonMetrics: migrating ========================
                == 20200813153434 ImportLatestCommonMetrics: migrated (0.0655s) ===============

                == 20200816133024 AddCveIdRequestProjectSetting: migrating ====================
                -- add_column(:project_settings, :cve_id_request_enabled, :boolean, {:default=>true, :null=>false})
                   -> 0.0011s
                == 20200816133024 AddCveIdRequestProjectSetting: migrated (0.0011s) ===========

                == 20200817070126 UpdateIndexSecureForCoverageFuzzingTelemetry: migrating =====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:user_id, :created_at], {:where=>"(((type)::text = 'Ci::Build'::text) AND ((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text, ('dast'::character varying)::text, ('dependency_scanning'::character varying)::text, ('license_management'::character varying)::text, ('license_scanning'::character varying)::text, ('sast'::character varying)::text, ('coverage_fuzzing'::character varying)::text, ('secret_detection'::character varying)::text])))", :name=>"index_secure_ci_builds_on_user_id_created_at_parser_features", :algorithm=>:concurrently})
                   -> 0.0120s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:user_id, :created_at], {:where=>"(((type)::text = 'Ci::Build'::text) AND ((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text, ('dast'::character varying)::text, ('dependency_scanning'::character varying)::text, ('license_management'::character varying)::text, ('license_scanning'::character varying)::text, ('sast'::character varying)::text, ('coverage_fuzzing'::character varying)::text, ('secret_detection'::character varying)::text])))", :name=>"index_secure_ci_builds_on_user_id_created_at_parser_features", :algorithm=>:concurrently})
                   -> 0.0046s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0122s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"index_secure_ci_builds_on_user_id_created_at"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200817070126 UpdateIndexSecureForCoverageFuzzingTelemetry: migrated (0.0352s)

                == 20200817100710 AddSectionAndCreatedAtCodeownerApprovalMergeRequestIndex: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approval_merge_request_rules, :created_at, {:where=>"rule_type = 2 AND section != 'codeowners'::text", :name=>"index_created_at_on_codeowner_approval_merge_request_rules", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approval_merge_request_rules, :created_at, {:where=>"rule_type = 2 AND section != 'codeowners'::text", :name=>"index_created_at_on_codeowner_approval_merge_request_rules", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200817100710 AddSectionAndCreatedAtCodeownerApprovalMergeRequestIndex: migrated (0.0084s)

                == 20200817142800 AddPipelineArtifactsSizeToProjectStatistics: migrating ======
                -- add_column(:project_statistics, :pipeline_artifacts_size, :bigint, {:default=>0, :null=>false})
                   -> 0.0009s
                == 20200817142800 AddPipelineArtifactsSizeToProjectStatistics: migrated (0.0024s)

                == 20200817195628 AddModifiedToApprovalMergeRequestRule: migrating ============
                -- add_column(:approval_merge_request_rules, :modified_from_project_rule, :boolean, {:default=>false, :null=>false})
                   -> 0.0010s
                == 20200817195628 AddModifiedToApprovalMergeRequestRule: migrated (0.0010s) ===

                == 20200818052219 AddKubernetesVersionToClusterProvidersAws: migrating ========
                -- column_exists?(:cluster_providers_aws, :kubernetes_version)
                   -> 0.0017s
                -- add_column(:cluster_providers_aws, :kubernetes_version, :text, {:null=>false, :default=>"1.14"})
                   -> 0.0011s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_providers_aws\nADD CONSTRAINT check_f1f42cd85e\nCHECK ( char_length(kubernetes_version) <= 30 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_providers_aws VALIDATE CONSTRAINT check_f1f42cd85e;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200818052219 AddKubernetesVersionToClusterProvidersAws: migrated (0.0083s)

                == 20200818092401 AddChecksumToBuildChunk: migrating ==========================
                -- add_column(:ci_build_trace_chunks, :checksum, :binary)
                   -> 0.0006s
                == 20200818092401 AddChecksumToBuildChunk: migrated (0.0007s) =================

                == 20200818171229 AddPackageMaxFileSizeToPlanLimits: migrating ================
                -- add_column(:plan_limits, :conan_max_file_size, :bigint, {:default=>52428800, :null=>false})
                   -> 0.0011s
                -- add_column(:plan_limits, :maven_max_file_size, :bigint, {:default=>52428800, :null=>false})
                   -> 0.0008s
                -- add_column(:plan_limits, :npm_max_file_size, :bigint, {:default=>52428800, :null=>false})
                   -> 0.0008s
                -- add_column(:plan_limits, :nuget_max_file_size, :bigint, {:default=>52428800, :null=>false})
                   -> 0.0008s
                -- add_column(:plan_limits, :pypi_max_file_size, :bigint, {:default=>52428800, :null=>false})
                   -> 0.0008s
                == 20200818171229 AddPackageMaxFileSizeToPlanLimits: migrated (0.0045s) =======

                == 20200819082334 RemoveDefaultFromServices: migrating ========================
                -- remove_column(:services, :default, :boolean)
                   -> 0.0009s
                == 20200819082334 RemoveDefaultFromServices: migrated (0.0376s) ===============

                == 20200819113644 AddTargetIdToAuditEvents: migrating =========================
                -- add_column("audit_events", :target_id, :bigint)
                   -> 0.0005s
                -- add_column("audit_events_part_5fc467ac26", :target_id, :bigint)
                   -> 0.0040s
                -- execute("CREATE OR REPLACE FUNCTION table_sync_function_2be879775d()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM audit_events_part_5fc467ac26 where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE audit_events_part_5fc467ac26\n  SET author_id = NEW.author_id,\n    type = NEW.type,\n    entity_id = NEW.entity_id,\n    entity_type = NEW.entity_type,\n    details = NEW.details,\n    ip_address = NEW.ip_address,\n    author_name = NEW.author_name,\n    entity_path = NEW.entity_path,\n    target_details = NEW.target_details,\n    target_type = NEW.target_type,\n    target_id = NEW.target_id,\n    created_at = NEW.created_at\n  WHERE audit_events_part_5fc467ac26.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO audit_events_part_5fc467ac26 (id,\n    author_id,\n    type,\n    entity_id,\n    entity_type,\n    details,\n    ip_address,\n    author_name,\n    entity_path,\n    target_details,\n    target_type,\n    target_id,\n    created_at)\n  VALUES (NEW.id,\n    NEW.author_id,\n    NEW.type,\n    NEW.entity_id,\n    NEW.entity_type,\n    NEW.details,\n    NEW.ip_address,\n    NEW.author_name,\n    NEW.entity_path,\n    NEW.target_details,\n    NEW.target_type,\n    NEW.target_id,\n    NEW.created_at);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0005s
                == 20200819113644 AddTargetIdToAuditEvents: migrated (0.0065s) ================

                == 20200819192143 AddEmailsUserIdForeignKey: migrating ========================
                -- add_foreign_key(:emails, :users, {:on_delete=>:cascade, :validate=>false, :name=>"fk_emails_user_id"})
                   -> 0.0012s
                == 20200819192143 AddEmailsUserIdForeignKey: migrated (0.0026s) ===============

                == 20200819202048 RemoveOrphanedEmails: migrating =============================
                -- execute("DELETE FROM emails\n  WHERE not exists (\n    SELECT 1 FROM users WHERE users.id = emails.user_id\n  );\n")
                   -> 0.0011s
                -- execute("DELETE FROM emails WHERE user_id IS NULL;")
                   -> 0.0002s
                == 20200819202048 RemoveOrphanedEmails: migrated (0.0014s) ====================

                == 20200819202222 ValidateEmailsUserIdForeignKey: migrating ===================
                -- foreign_keys(:emails)
                   -> 0.0038s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE emails VALIDATE CONSTRAINT fk_emails_user_id;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200819202222 ValidateEmailsUserIdForeignKey: migrated (0.0051s) ==========

                == 20200820105408 AddIndexToContainerScanningFindings: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_occurrences, :id, {:where=>"report_type = 2", :name=>"idx_container_scanning_findings", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_occurrences, :id, {:where=>"report_type = 2", :name=>"idx_container_scanning_findings", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200820105408 AddIndexToContainerScanningFindings: migrated (0.0080s) =====

                == 20200820130839 AddAutoCloseIncidentToProjectIncidentManagementSettings: migrating
                -- add_column(:project_incident_management_settings, :auto_close_incident, :boolean, {:default=>true, :null=>false})
                   -> 0.0010s
                == 20200820130839 AddAutoCloseIncidentToProjectIncidentManagementSettings: migrated (0.0011s)

                == 20200820204041 CreateCiPlatformMetrics: migrating ==========================
                -- table_exists?(:ci_platform_metrics)
                   -> 0.0005s
                -- create_table(:ci_platform_metrics)
                   -> 0.0043s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_platform_metrics\nADD CONSTRAINT check_f922abc32b\nCHECK ( char_length(platform_target) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_platform_metrics VALIDATE CONSTRAINT check_f922abc32b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_variables, :key, {:name=>"index_ci_variables_on_key", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_variables, :key, {:name=>"index_ci_variables_on_key", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200820204041 CreateCiPlatformMetrics: migrated (0.0177s) =================

                == 20200821034419 AddUniqueIndexForGenericPackages: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_packages, [:project_id, :name, :version], {:unique=>true, :where=>"package_type = 7", :name=>"index_packages_on_project_id_name_version_unique_when_generic", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_packages, [:project_id, :name, :version], {:unique=>true, :where=>"package_type = 7", :name=>"index_packages_on_project_id_name_version_unique_when_generic", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200821034419 AddUniqueIndexForGenericPackages: migrated (0.0082s) ========

                == 20200821194920 CreateAtlassianIdentities: migrating ========================
                -- table_exists?(:atlassian_identities)
                   -> 0.0005s
                -- create_table(:atlassian_identities, {:id=>false})
                   -> 0.0076s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities\nADD CONSTRAINT check_32f5779763\nCHECK ( char_length(extern_uid) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities VALIDATE CONSTRAINT check_32f5779763;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities\nADD CONSTRAINT atlassian_identities_token_length_constraint\nCHECK ( octet_length(encrypted_token) <= 2048 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities VALIDATE CONSTRAINT atlassian_identities_token_length_constraint;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities\nADD CONSTRAINT atlassian_identities_token_iv_length_constraint\nCHECK ( octet_length(encrypted_token_iv) <= 12 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities VALIDATE CONSTRAINT atlassian_identities_token_iv_length_constraint;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities\nADD CONSTRAINT atlassian_identities_refresh_token_length_constraint\nCHECK ( octet_length(encrypted_refresh_token) <= 512 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities VALIDATE CONSTRAINT atlassian_identities_refresh_token_length_constraint;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities\nADD CONSTRAINT atlassian_identities_refresh_token_iv_length_constraint\nCHECK ( octet_length(encrypted_refresh_token_iv) <= 12 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE atlassian_identities VALIDATE CONSTRAINT atlassian_identities_refresh_token_iv_length_constraint;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200821194920 CreateAtlassianIdentities: migrated (0.0349s) ===============

                == 20200821224343 SchedulePopulateVulnerabilityHistoricalStatistics: migrating
                == 20200821224343 SchedulePopulateVulnerabilityHistoricalStatistics: migrated (0.0001s)

                == 20200824045812 AddGenericPackageMaxFileSizeToPlanLimits: migrating =========
                -- add_column(:plan_limits, :generic_packages_max_file_size, :bigint, {:default=>5368709120, :null=>false})
                   -> 0.0013s
                == 20200824045812 AddGenericPackageMaxFileSizeToPlanLimits: migrated (0.0014s)

                == 20200824124623 CreateIssuableSeverities: migrating =========================
                -- create_table(:issuable_severities)
                   -> 0.0064s
                == 20200824124623 CreateIssuableSeverities: migrated (0.0077s) ================

                == 20200824130028 RemoveIndexOnUsersBio: migrating ============================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:users)
                   -> 0.0094s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:users, {:algorithm=>:concurrently, :name=>"tmp_idx_on_user_id_where_bio_is_filled"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200824130028 RemoveIndexOnUsersBio: migrated (0.0140s) ===================

                == 20200824130447 RemoveUsersBioColumn: migrating =============================
                -- remove_column(:users, :bio)
                   -> 0.0006s
                == 20200824130447 RemoveUsersBioColumn: migrated (0.0020s) ====================

                == 20200825071735 CreateMergeRequestReviewers: migrating ======================
                -- create_table(:merge_request_reviewers)
                   -> 0.0031s
                -- add_index(:merge_request_reviewers, [:merge_request_id, :user_id], {:unique=>true})
                   -> 0.0028s
                -- add_index(:merge_request_reviewers, :user_id)
                   -> 0.0027s
                == 20200825071735 CreateMergeRequestReviewers: migrated (0.0087s) =============

                == 20200825081025 BoardsEpicUserPreferences: migrating ========================
                -- create_table(:boards_epic_user_preferences)
                   -> 0.0032s
                -- add_index(:boards_epic_user_preferences, :board_id)
                   -> 0.0028s
                -- add_index(:boards_epic_user_preferences, :user_id)
                   -> 0.0026s
                -- add_index(:boards_epic_user_preferences, :epic_id)
                   -> 0.0026s
                -- add_index(:boards_epic_user_preferences, [:board_id, :user_id, :epic_id], {:unique=>true, :name=>"index_boards_epic_user_preferences_on_board_user_epic_unique"})
                   -> 0.0027s
                == 20200825081025 BoardsEpicUserPreferences: migrated (0.0139s) ===============

                == 20200825081035 BoardsEpicUserPreferencesFkBoard: migrating =================
                -- add_foreign_key(:boards_epic_user_preferences, :boards, {:column=>:board_id, :on_delete=>:cascade})
                   -> 0.0013s
                == 20200825081035 BoardsEpicUserPreferencesFkBoard: migrated (0.0026s) ========

                == 20200825081045 BoardsEpicUserPreferencesFkUser: migrating ==================
                -- add_foreign_key(:boards_epic_user_preferences, :users, {:column=>:user_id, :on_delete=>:cascade})
                   -> 0.0015s
                == 20200825081045 BoardsEpicUserPreferencesFkUser: migrated (0.0028s) =========

                == 20200825081055 BoardsEpicUserPreferencesFkEpic: migrating ==================
                -- add_foreign_key(:boards_epic_user_preferences, :epics, {:column=>:epic_id, :on_delete=>:cascade})
                   -> 0.0016s
                == 20200825081055 BoardsEpicUserPreferencesFkEpic: migrated (0.0030s) =========

                == 20200825084819 CreateSecurityFindingsTable: migrating ======================
                -- table_exists?(:security_findings)
                   -> 0.0005s
                -- create_table(:security_findings)
                   -> 0.0196s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE security_findings\nADD CONSTRAINT check_b9508c6df8\nCHECK ( char_length(project_fingerprint) <= 40 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE security_findings VALIDATE CONSTRAINT check_b9508c6df8;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200825084819 CreateSecurityFindingsTable: migrated (0.0251s) =============

                == 20200825154237 UpdatePackageFileSizePlanLimitsDefaults: migrating ==========
                -- change_column_default(:plan_limits, :maven_max_file_size, {:from=>52428800, :to=>3221225472})
                   -> 0.0034s
                -- change_column_default(:plan_limits, :conan_max_file_size, {:from=>52428800, :to=>3221225472})
                   -> 0.0029s
                -- change_column_default(:plan_limits, :nuget_max_file_size, {:from=>52428800, :to=>524288000})
                   -> 0.0031s
                -- change_column_default(:plan_limits, :npm_max_file_size, {:from=>52428800, :to=>524288000})
                   -> 0.0030s
                -- change_column_default(:plan_limits, :pypi_max_file_size, {:from=>52428800, :to=>3221225472})
                   -> 0.0029s
                == 20200825154237 UpdatePackageFileSizePlanLimitsDefaults: migrated (0.0153s) =

                == 20200825180050 AddPipelineArtifactsSizeToRootStorageStatistics: migrating ==
                -- add_column(:namespace_root_storage_statistics, :pipeline_artifacts_size, :bigint, {:default=>0, :null=>false})
                   -> 0.0008s
                == 20200825180050 AddPipelineArtifactsSizeToRootStorageStatistics: migrated (0.0022s)

                == 20200826053152 AddIndexOnCiPipelinesSourceForOnDemandDast: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, :id, {:where=>"source = 13", :name=>"index_ci_pipelines_for_ondemand_dast_scans", :algorithm=>:concurrently})
                   -> 0.0084s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, :id, {:where=>"source = 13", :name=>"index_ci_pipelines_for_ondemand_dast_scans", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200826053152 AddIndexOnCiPipelinesSourceForOnDemandDast: migrated (0.0130s)

                == 20200826073745 AddDefaultToCiPipelineLocked: migrating =====================
                -- change_column_default(:ci_pipelines, :locked, 1)
                   -> 0.0021s
                == 20200826073745 AddDefaultToCiPipelineLocked: migrated (0.0034s) ============

                == 20200826092324 AddProjectsIndexOnImportTypeCreatorIdCreatedAt: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, [:import_type, :creator_id, :created_at], {:where=>"import_type IS NOT NULL", :name=>"index_imported_projects_on_import_type_creator_id_created_at", :algorithm=>:concurrently})
                   -> 0.0185s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, [:import_type, :creator_id, :created_at], {:where=>"import_type IS NOT NULL", :name=>"index_imported_projects_on_import_type_creator_id_created_at", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200826092324 AddProjectsIndexOnImportTypeCreatorIdCreatedAt: migrated (0.0238s)

                == 20200826121552 RemoveCiJobArtifactsLocked: migrating =======================
                -- remove_column(:ci_job_artifacts, :locked)
                   -> 0.0005s
                == 20200826121552 RemoveCiJobArtifactsLocked: migrated (0.0019s) ==============

                == 20200826212800 AddIndexOnMergeRequestIdAndRuleTypeToApprovalMergeRequestRule: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approval_merge_request_rules, :merge_request_id, {:name=>"approval_mr_rule_index_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approval_merge_request_rules, :merge_request_id, {:name=>"approval_mr_rule_index_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200826212800 AddIndexOnMergeRequestIdAndRuleTypeToApprovalMergeRequestRule: migrated (0.0088s)

                == 20200826220745 AddCompoundIndexOnVulnerabilitiesForBackgroundMigration: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerabilities, [:project_id, :id], {:name=>"index_vulnerabilities_on_project_id_and_id", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerabilities, [:project_id, :id], {:name=>"index_vulnerabilities_on_project_id_and_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200826220745 AddCompoundIndexOnVulnerabilitiesForBackgroundMigration: migrated (0.0091s)

                == 20200826220746 SchedulePopulateResolvedOnDefaultBranchColumn: migrating ====
                == 20200826220746 SchedulePopulateResolvedOnDefaultBranchColumn: migrated (0.0001s)

                == 20200827005322 AddCreatorIdToPackages: migrating ===========================
                -- add_column(:packages_packages, :creator_id, :integer)
                   -> 0.0006s
                == 20200827005322 AddCreatorIdToPackages: migrated (0.0006s) ==================

                == 20200827060911 AddMergeRequestForeignKeyToMergeRequestReviewers: migrating =
                -- add_foreign_key(:merge_request_reviewers, :merge_requests, {:column=>:merge_request_id, :on_delete=>:cascade})
                   -> 0.0013s
                == 20200827060911 AddMergeRequestForeignKeyToMergeRequestReviewers: migrated (0.0027s)

                == 20200827060932 AddUserForeignKeyToMergeRequestReviewers: migrating =========
                -- add_foreign_key(:merge_request_reviewers, :users, {:column=>:user_id, :on_delete=>:cascade})
                   -> 0.0015s
                == 20200827060932 AddUserForeignKeyToMergeRequestReviewers: migrated (0.0028s)

                == 20200827085101 AddSeatsCurrentlyInUseInGitlabSubscriptions: migrating ======
                -- add_column(:gitlab_subscriptions, :seats_in_use, :integer, {:default=>0, :null=>false})
                   -> 0.0008s
                -- add_column(:gitlab_subscriptions, :seats_owed, :integer, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20200827085101 AddSeatsCurrentlyInUseInGitlabSubscriptions: migrated (0.0028s)

                == 20200827102234 AddCiJobArtifactIdToPagesMetadata: migrating ================
                -- add_column(:project_pages_metadata, :artifacts_archive_id, :bigint)
                   -> 0.0006s
                == 20200827102234 AddCiJobArtifactIdToPagesMetadata: migrated (0.0006s) =======

                == 20200827104432 AddForeignKeyToArtifactsArchiveIdInPagesMetadata: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_pages_metadata, :artifacts_archive_id, {:name=>"index_project_pages_metadata_on_artifacts_archive_id", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_pages_metadata, :artifacts_archive_id, {:name=>"index_project_pages_metadata_on_artifacts_archive_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:project_pages_metadata)
                   -> 0.0039s
                -- execute("ALTER TABLE project_pages_metadata\nADD CONSTRAINT fk_69366a119e\nFOREIGN KEY (artifacts_archive_id)\nREFERENCES ci_job_artifacts (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_pages_metadata VALIDATE CONSTRAINT fk_69366a119e;")
                   -> 0.0015s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200827104432 AddForeignKeyToArtifactsArchiveIdInPagesMetadata: migrated (0.0149s)

                == 20200827114902 CreateAnalyticsInstanceStatisticsMeasurements: migrating ====
                -- create_table(:analytics_instance_statistics_measurements)
                   -> 0.0031s
                -- add_index(:analytics_instance_statistics_measurements, [:identifier, :recorded_at], {:unique=>true, :name=>"index_on_instance_statistics_recorded_at_and_identifier"})
                   -> 0.0028s
                == 20200827114902 CreateAnalyticsInstanceStatisticsMeasurements: migrated (0.0060s)

                == 20200827142811 CreateMergeRequestDiffDetails: migrating ====================
                -- table_exists?(:merge_request_diff_details)
                   -> 0.0005s
                -- create_table(:merge_request_diff_details, {:id=>false})
                   -> 0.0073s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE merge_request_diff_details\nADD CONSTRAINT check_81429e3622\nCHECK ( char_length(verification_failure) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE merge_request_diff_details VALIDATE CONSTRAINT check_81429e3622;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200827142811 CreateMergeRequestDiffDetails: migrated (0.0148s) ===========

                == 20200827150057 AddIndexExpireAtToPipelineArtifacts: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipeline_artifacts, :expire_at, {:name=>"index_ci_pipeline_artifacts_on_expire_at", :algorithm=>:concurrently})
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipeline_artifacts, :expire_at, {:name=>"index_ci_pipeline_artifacts_on_expire_at", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200827150057 AddIndexExpireAtToPipelineArtifacts: migrated (0.0067s) =====

                == 20200828155134 AddForeignKeyOnScanIdToSecurityScans: migrating =============
                -- add_foreign_key(:security_findings, :security_scans, {:column=>:scan_id, :on_delete=>:cascade})
                   -> 0.0012s
                == 20200828155134 AddForeignKeyOnScanIdToSecurityScans: migrated (0.0026s) ====

                == 20200828155205 AddForeignKeyOnScannerIdToVulnerabilityScanners: migrating ==
                -- add_foreign_key(:security_findings, :vulnerability_scanners, {:column=>:scanner_id, :on_delete=>:cascade})NOTICE:  trigger "trigger_d5eb03a59792" for relation "packages_pypi_metadata" does not exist, skipping

                   -> 0.0012s
                == 20200828155205 AddForeignKeyOnScannerIdToVulnerabilityScanners: migrated (0.0045s)

                == 20200830201204 AddIndexToPackageCreator: migrating =========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_packages, :creator_id, {:name=>"index_packages_packages_on_creator_id", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_packages, :creator_id, {:name=>"index_packages_packages_on_creator_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:packages_packages)
                   -> 0.0035s
                -- execute("ALTER TABLE packages_packages\nADD CONSTRAINT fk_c188f0dba4\nFOREIGN KEY (creator_id)\nREFERENCES users (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_packages VALIDATE CONSTRAINT fk_c188f0dba4;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200830201204 AddIndexToPackageCreator: migrated (0.0167s) ================

                == 20200831065320 AddNotValidNotNullConstraintToMrMetrics: migrating ==========
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE merge_request_metrics\nADD CONSTRAINT check_e03d0900bf\nCHECK ( target_project_id IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20200831065320 AddNotValidNotNullConstraintToMrMetrics: migrated (0.0060s) =

                == 20200831065322 AddTmpIndexToTargetProjectId: migrating =====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_metrics, :id, {:where=>"target_project_id IS NULL", :name=>"tmp_index_on_mr_metrics_target_project_id_null", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_metrics, :id, {:where=>"target_project_id IS NULL", :name=>"tmp_index_on_mr_metrics_target_project_id_null", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200831065322 AddTmpIndexToTargetProjectId: migrated (0.0089s) ============

                == 20200831065705 EnsureTargetProjectIdIsFilled: migrating ====================
                == 20200831065705 EnsureTargetProjectIdIsFilled: migrated (0.0074s) ===========

                == 20200831074356 ValidateNotNullConstraintOnMrMetrics: migrating =============
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE merge_request_metrics VALIDATE CONSTRAINT check_e03d0900bf;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_request_metrics)
                   -> 0.0047s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_request_metrics, {:algorithm=>:concurrently, :name=>"tmp_index_on_mr_metrics_target_project_id_null"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200831074356 ValidateNotNullConstraintOnMrMetrics: migrated (0.0107s) ====

                == 20200831204646 AddProjectFeatureFlagsToPlanLimits: migrating ===============
                -- add_column(:plan_limits, :project_feature_flags, :integer, {:default=>200, :null=>false})
                   -> 0.0012s
                == 20200831204646 AddProjectFeatureFlagsToPlanLimits: migrated (0.0012s) ======

                == 20200831222347 InsertProjectFeatureFlagsPlanLimits: migrating ==============
                == 20200831222347 InsertProjectFeatureFlagsPlanLimits: migrated (0.0000s) =====

                == 20200831224343 PopulateVulnerabilityHistoricalStatisticsForYear: migrating =
                == 20200831224343 PopulateVulnerabilityHistoricalStatisticsForYear: migrated (0.0001s)

                == 20200901170135 BackfillModifiedColumnForApprovalMergeRequestRules: migrating
                -- Scheduled 0 AddModifiedToApprovalMergeRequestRule jobs with a maximum of 10000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:00 +0800."
                == 20200901170135 BackfillModifiedColumnForApprovalMergeRequestRules: migrated (0.0134s)

                == 20200901203055 AddIdCreatedAtIndexToPackages: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_packages, [:id, :created_at], {:name=>"index_packages_packages_on_id_and_created_at", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_packages, [:id, :created_at], {:name=>"index_packages_packages_on_id_and_created_at", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200901203055 AddIdCreatedAtIndexToPackages: migrated (0.0091s) ===========

                == 20200901212304 DropCodeOwnerColumnFromApprovalMergeRequestRule: migrating ==
                -- remove_column(:approval_merge_request_rules, :code_owner)
                   -> 0.0007s
                == 20200901212304 DropCodeOwnerColumnFromApprovalMergeRequestRule: migrated (0.0042s)

                == 20200901214416 ChangePypiPythonVersionType: migrating ======================
                -- column_exists?(:packages_pypi_metadata, :package_id)
                   -> 0.0011s
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:packages_pypi_metadata)
                   -> 0.0009s
                -- add_column(:packages_pypi_metadata, "required_python_for_type_change", :text, {:limit=>50, :precision=>nil, :scale=>nil})
                   -> 0.0026s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"packages_pypi_metadata\"")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_pypi_metadata\nADD CONSTRAINT check_0d9aed55b2\nCHECK ( required_python_for_type_change IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_pypi_metadata VALIDATE CONSTRAINT check_0d9aed55b2;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- indexes(:packages_pypi_metadata)
                   -> 0.0010s
                -- foreign_keys(:packages_pypi_metadata)
                   -> 0.0035s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:packages_pypi_metadata, :required_python)
                   -> 0.0009s
                -- column_exists?(:packages_pypi_metadata, "required_python_for_type_change")
                   -> 0.0009s
                -- current_schema()
                   -> 0.0002s
                == 20200901214416 ChangePypiPythonVersionType: migrated (0.0438s) =============

                == 20200902135542 UpdatePackageMaxFileSizePlanLimits: migrating ===============
                -- quote_column_name("conan_max_file_size")
                   -> 0.0000s
                -- quote(3221225472)
                   -> 0.0000s
                -- execute("UPDATE plan_limits\nSET \"conan_max_file_size\" = '3221225472';\n")
                   -> 0.0008s
                -- quote_column_name("maven_max_file_size")
                   -> 0.0000s
                -- quote(3221225472)
                   -> 0.0000s
                -- execute("UPDATE plan_limits\nSET \"maven_max_file_size\" = '3221225472';\n")
                   -> 0.0006s
                -- quote_column_name("npm_max_file_size")
                   -> 0.0000s
                -- quote(524288000)
                   -> 0.0000s
                -- execute("UPDATE plan_limits\nSET \"npm_max_file_size\" = '524288000';\n")
                   -> 0.0003s
                -- quote_column_name("nuget_max_file_size")
                   -> 0.0000s
                -- quote(524288000)
                   -> 0.0000s
                -- execute("UPDATE plan_limits\nSET \"nuget_max_file_size\" = '524288000';\n")
                   -> 0.0003s
                -- quote_column_name("pypi_max_file_size")
                   -> 0.0000s
                -- quote(3221225472)
                   -> 0.0000s
                -- execute("UPDATE plan_limits\nSET \"pypi_max_file_size\" = '3221225472';\n")
                   -> 0.0004s
                == 20200902135542 UpdatePackageMaxFileSizePlanLimits: migrated (0.0029s) ======

                == 20200903054946 AddElasticsearchClientTimeout: migrating ====================
                -- add_column(:application_settings, :elasticsearch_client_request_timeout, :integer, {:null=>false, :default=>0})
                   -> 0.0016s
                == 20200903054946 AddElasticsearchClientTimeout: migrated (0.0017s) ===========

                == 20200903064431 AddCreatedAtIndexToAuditEvents: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:audit_events, [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"idx_audit_events_on_entity_id_desc_author_id_created_at", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:audit_events, [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"idx_audit_events_on_entity_id_desc_author_id_created_at", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:audit_events)
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:audit_events, {:algorithm=>:concurrently, :name=>"index_audit_events_on_entity_id_entity_type_id_desc_author_id"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20200903064431 AddCreatedAtIndexToAuditEvents: migrated (0.0150s) ==========

                == 20200903092241 AddIndexToResourceIterationEventsAddEvents: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:resource_iteration_events, :iteration_id, {:where=>"action = 1", :name=>"index_resource_iteration_events_on_iteration_id_and_add_action", :algorithm=>:concurrently})
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:resource_iteration_events, :iteration_id, {:where=>"action = 1", :name=>"index_resource_iteration_events_on_iteration_id_and_add_action", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200903092241 AddIndexToResourceIterationEventsAddEvents: migrated (0.0070s)

                == 20200904092131 AddMergeRefShaToMergeRequests: migrating ====================
                -- add_column(:merge_requests, :merge_ref_sha, :binary)
                   -> 0.0005s
                == 20200904092131 AddMergeRefShaToMergeRequests: migrated (0.0019s) ===========

                == 20200904131544 CreateCiBuildPendingStates: migrating =======================
                -- create_table(:ci_build_pending_states)
                   -> 0.0074s
                == 20200904131544 CreateCiBuildPendingStates: migrated (0.0087s) ==============

                == 20200904174901 BackfillCleanupForPartitionedAuditEvents: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- table_exists?("audit_events_part_5fc467ac26")
                   -> 0.0005s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("VACUUM FREEZE ANALYZE audit_events_part_5fc467ac26")
                   -> 0.1691s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200904174901 BackfillCleanupForPartitionedAuditEvents: migrated (0.4806s)

                == 20200905013247 AddGolangPackageMaxFileSizeToPlanLimits: migrating ==========
                -- add_column(:plan_limits, :golang_max_file_size, :bigint, {:default=>104857600, :null=>false})
                   -> 0.0012s
                == 20200905013247 AddGolangPackageMaxFileSizeToPlanLimits: migrated (0.0012s) =

                == 20200907021256 CreateDastSiteTokens: migrating =============================
                -- table_exists?(:dast_site_tokens)
                   -> 0.0005s
                -- create_table(:dast_site_tokens)
                   -> 0.0097s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_tokens\nADD CONSTRAINT check_02a6bf20a7\nCHECK ( char_length(token) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_tokens VALIDATE CONSTRAINT check_02a6bf20a7;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_tokens\nADD CONSTRAINT check_69ab8622a6\nCHECK ( char_length(url) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_tokens VALIDATE CONSTRAINT check_69ab8622a6;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200907021256 CreateDastSiteTokens: migrated (0.0222s) ====================

                == 20200907062101 CreateDastSiteValidations: migrating ========================
                -- table_exists?(:dast_site_validations)
                   -> 0.0004s
                -- create_table(:dast_site_validations)
                   -> 0.0077s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:dast_site_validations, :url_base, {:algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:dast_site_validations, :url_base, {:algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_validations\nADD CONSTRAINT check_cd3b538210\nCHECK ( char_length(url_base) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_validations VALIDATE CONSTRAINT check_cd3b538210;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_validations\nADD CONSTRAINT check_13b34efe4b\nCHECK ( char_length(url_path) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_validations VALIDATE CONSTRAINT check_13b34efe4b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200907062101 CreateDastSiteValidations: migrated (0.0258s) ===============

                == 20200907092610 AddUserIdToGroupImportStates: migrating =====================
                -- column_exists?(:group_import_states, :user_id)
                   -> 0.0013s
                -- add_column(:group_import_states, :user_id, :bigint)
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:group_import_states)
                   -> 0.0036s
                -- execute("ALTER TABLE group_import_states\nADD CONSTRAINT fk_8053b3ebd6\nFOREIGN KEY (user_id)\nREFERENCES users (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE group_import_states VALIDATE CONSTRAINT fk_8053b3ebd6;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:group_import_states, :user_id, {:where=>"user_id IS NOT NULL", :name=>"index_group_import_states_on_user_id", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:group_import_states, :user_id, {:where=>"user_id IS NOT NULL", :name=>"index_group_import_states_on_user_id", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200907092610 AddUserIdToGroupImportStates: migrated (0.0170s) ============

                == 20200907092715 AddNotNullConstraintToUserOnGroupImportStates: migrating ====
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE group_import_states\nADD CONSTRAINT check_cda75c7c3f\nCHECK ( user_id IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20200907092715 AddNotNullConstraintToUserOnGroupImportStates: migrated (0.0059s)

                == 20200907124300 CompleteNamespaceSettingsMigration: migrating ===============
                == 20200907124300 CompleteNamespaceSettingsMigration: migrated (0.0502s) ======

                == 20200908033805 AddDastSiteValidationIdToDastSite: migrating ================
                -- column_exists?(:dast_sites, :dast_site_validation_id)
                   -> 0.0013s
                -- add_column(:dast_sites, :dast_site_validation_id, :bigint)
                   -> 0.0005s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:dast_sites, :dast_site_validation_id, {:name=>"index_dast_sites_on_dast_site_validation_id", :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:dast_sites, :dast_site_validation_id, {:name=>"index_dast_sites_on_dast_site_validation_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:dast_sites)
                   -> 0.0036s
                -- execute("ALTER TABLE dast_sites\nADD CONSTRAINT fk_0a57f2271b\nFOREIGN KEY (dast_site_validation_id)\nREFERENCES dast_site_validations (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_sites VALIDATE CONSTRAINT fk_0a57f2271b;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200908033805 AddDastSiteValidationIdToDastSite: migrated (0.0172s) =======

                == 20200908064229 AddPartialIndexToCiBuildsTableOnUserIdName: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:user_id, :name], {:where=>"(((type)::text = 'Ci::Build'::text) AND\n  ((name)::text = ANY (\n    ARRAY[\n      ('container_scanning'::character varying)::text,\n      ('dast'::character varying)::text,\n      ('dependency_scanning'::character varying)::text,\n      ('license_management'::character varying)::text,\n      ('license_scanning'::character varying)::text,\n      ('sast'::character varying)::text,\n      ('coverage_fuzzing'::character varying)::text,\n      ('secret_detection'::character varying)::text\n    ]\n  ))\n)\n", :name=>"index_partial_ci_builds_on_user_id_name_parser_features", :algorithm=>:concurrently})
                   -> 0.0115s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:user_id, :name], {:where=>"(((type)::text = 'Ci::Build'::text) AND\n  ((name)::text = ANY (\n    ARRAY[\n      ('container_scanning'::character varying)::text,\n      ('dast'::character varying)::text,\n      ('dependency_scanning'::character varying)::text,\n      ('license_management'::character varying)::text,\n      ('license_scanning'::character varying)::text,\n      ('sast'::character varying)::text,\n      ('coverage_fuzzing'::character varying)::text,\n      ('secret_detection'::character varying)::text\n    ]\n  ))\n)\n", :name=>"index_partial_ci_builds_on_user_id_name_parser_features", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200908064229 AddPartialIndexToCiBuildsTableOnUserIdName: migrated (0.0187s)

                == 20200908094810 AddNewSettingToNamespaceSetting: migrating ==================
                -- add_column(:namespace_settings, :allow_mfa_for_subgroups, :boolean, {:default=>true, :null=>false})
                   -> 0.0007s
                == 20200908094810 AddNewSettingToNamespaceSetting: migrated (0.0021s) =========

                == 20200908095446 UpdateLocationFingerprintColumnForCs: migrating =============
                == 20200908095446 UpdateLocationFingerprintColumnForCs: migrated (0.0001s) ====

                == 20200908100053 CreateAuthenticationEvents: migrating =======================
                -- table_exists?(:authentication_events)
                   -> 0.0004s
                -- create_table(:authentication_events)
                   -> 0.0114s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE authentication_events\nADD CONSTRAINT check_c64f424630\nCHECK ( char_length(provider) <= 64 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE authentication_events VALIDATE CONSTRAINT check_c64f424630;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE authentication_events\nADD CONSTRAINT check_45a6cc4e80\nCHECK ( char_length(user_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE authentication_events VALIDATE CONSTRAINT check_45a6cc4e80;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200908100053 CreateAuthenticationEvents: migrated (0.0240s) ==============

                == 20200908183231 AddCheckPositiveConstraintToCiPlatformMetrics: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_platform_metrics\nADD CONSTRAINT ci_platform_metrics_check_count_positive\nCHECK ( count > 0 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_platform_metrics VALIDATE CONSTRAINT ci_platform_metrics_check_count_positive;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200908183231 AddCheckPositiveConstraintToCiPlatformMetrics: migrated (0.0054s)

                == 20200908212414 AddFeatureFlagEventsToWebHooks: migrating ===================
                -- add_column(:web_hooks, :feature_flag_events, :boolean, {:null=>false, :default=>false})
                   -> 0.0010s
                == 20200908212414 AddFeatureFlagEventsToWebHooks: migrated (0.0011s) ==========

                == 20200909040555 CreatePackageEvents: migrating ==============================
                -- create_table(:packages_events)
                   -> 0.0064s
                == 20200909040555 CreatePackageEvents: migrated (0.0064s) =====================

                == 20200909083339 AddChangeReviewerMergeRequestToNotificationSettings: migrating
                -- add_column(:notification_settings, :change_reviewer_merge_request, :boolean)
                   -> 0.0006s
                == 20200909083339 AddChangeReviewerMergeRequestToNotificationSettings: migrated (0.0007s)

                == 20200909161624 CleanupGroupImportStatesWithNullUserId: migrating ===========
                == 20200909161624 CleanupGroupImportStatesWithNullUserId: migrated (0.0142s) ==

                == 20200909194014 ChangePypiPythonVersionTypeCleanup: migrating ===============
                -- transaction()
                -- remove_column(:packages_pypi_metadata, :required_python)
                   -> 0.0003s
                -- rename_column(:packages_pypi_metadata, "required_python_for_type_change", :required_python)
                   -> 0.0013s
                   -> 0.0034s
                == 20200909194014 ChangePypiPythonVersionTypeCleanup: migrated (0.0035s) ======

                == 20200909194524 IncreasePypiVersionSize: migrating ==========================
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_pypi_metadata\nADD CONSTRAINT check_379019d5da\nCHECK ( char_length(required_python) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_pypi_metadata VALIDATE CONSTRAINT check_379019d5da;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200909194524 IncreasePypiVersionSize: migrated (0.0052s) =================

                == 20200910131217 TmpIndexForFixingInconsistentVulnerabilityOccurrences: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_occurrences, :id, {:where=>"LENGTH(location_fingerprint) = 40 AND report_type = 2", :name=>"tmp_index_for_fixing_inconsistent_vulnerability_occurrences", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_occurrences, :id, {:where=>"LENGTH(location_fingerprint) = 40 AND report_type = 2", :name=>"tmp_index_for_fixing_inconsistent_vulnerability_occurrences", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200910131217 TmpIndexForFixingInconsistentVulnerabilityOccurrences: migrated (0.0084s)

                == 20200910131218 RemoveDuplicatedCsFindings: migrating =======================
                == 20200910131218 RemoveDuplicatedCsFindings: migrated (0.0000s) ==============

                == 20200910155617 BackfillJiraTrackerDeploymentType: migrating ================
                == 20200910155617 BackfillJiraTrackerDeploymentType: migrated (0.0000s) =======

                == 20200910170908 EnsureFilledExternalDiffStoreOnMergeRequestDiffs: migrating =
                == 20200910170908 EnsureFilledExternalDiffStoreOnMergeRequestDiffs: migrated (0.0054s)

                == 20200910175553 ValidateNotNullExternalDiffStoreOnMergeRequestDiffs: migrating
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE merge_request_diffs VALIDATE CONSTRAINT check_93ee616ac9;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_request_diffs)
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_request_diffs, {:algorithm=>:concurrently, :name=>"index_merge_request_diffs_external_diff_store_is_null"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200910175553 ValidateNotNullExternalDiffStoreOnMergeRequestDiffs: migrated (0.0082s)

                == 20200911120132 CreatePagesDeployments: migrating ===========================
                -- create_table(:pages_deployments, {:if_not_exists=>true})
                   -> 0.0117s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE pages_deployments\nADD CONSTRAINT check_f0fe8032dd\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE pages_deployments VALIDATE CONSTRAINT check_f0fe8032dd;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200911120132 CreatePagesDeployments: migrated (0.0178s) ==================

                == 20200911121027 AddPagesDeploymentProjectForeignKey: migrating ==============
                -- add_foreign_key(:pages_deployments, :projects, {:column=>:project_id, :on_delete=>:cascade})
                   -> 0.0022s
                == 20200911121027 AddPagesDeploymentProjectForeignKey: migrated (0.0036s) =====

                == 20200911121048 AddPagesDeploymentCiBuildForeignKey: migrating ==============
                -- add_foreign_key(:pages_deployments, :ci_builds, {:column=>:ci_build_id, :on_delete=>:nullify})
                   -> 0.0019s
                == 20200911121048 AddPagesDeploymentCiBuildForeignKey: migrated (0.0033s) =====

                == 20200912152943 RenameAdminNotificationEmailApplicationSetting: migrating ===NOTICE:  trigger "trigger_8fe85065a3f9" for relation "application_settings" does not exist, skipping

                -- column_exists?(:application_settings, :id)
                   -> 0.0468s
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:application_settings)
                   -> 0.0451s
                -- add_column(:application_settings, :abuse_notification_email, :string, {:limit=>nil, :precision=>nil, :scale=>nil})
                   -> 0.0014s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"application_settings\"")
                   -> 0.0008s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" ORDER BY \"application_settings\".\"id\" ASC LIMIT 1")
                   -> 0.0004s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" WHERE \"application_settings\".\"id\" >= 1 ORDER BY \"application_settings\".\"id\" ASC LIMIT 1 OFFSET 1")
                   -> 0.0004s
                -- execute("UPDATE \"application_settings\" SET \"abuse_notification_email\" = \"application_settings\".\"admin_notification_email\" WHERE \"application_settings\".\"id\" >= 1")
                   -> 0.0010s
                -- indexes(:application_settings)
                   -> 0.0048s
                -- foreign_keys(:application_settings)
                   -> 0.0037s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:application_settings, :admin_notification_email)
                   -> 0.0470s
                -- column_exists?(:application_settings, :abuse_notification_email)
                   -> 0.0468s
                -- current_schema()
                   -> 0.0002s
                == 20200912152943 RenameAdminNotificationEmailApplicationSetting: migrated (0.2203s)

                == 20200912153218 CleanupAdminNotificationEmailApplicationSettingRename: migrating
                -- remove_column(:application_settings, :admin_notification_email)
                   -> 0.0010s
                == 20200912153218 CleanupAdminNotificationEmailApplicationSettingRename: migrated (0.0029s)

                == 20200912193210 AddSchedulingIssuesTempIndexes: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issue_links, [:source_id], {:where=>"link_type = 1", :name=>"tmp_idx_blocking_type_links", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issue_links, [:source_id], {:where=>"link_type = 1", :name=>"tmp_idx_blocking_type_links", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issue_links, [:target_id], {:where=>"link_type = 2", :name=>"tmp_idx_blocked_by_type_links", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issue_links, [:target_id], {:where=>"link_type = 2", :name=>"tmp_idx_blocked_by_type_links", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, :id, {:where=>"(state_id = 1 AND blocking_issues_count = 0)", :name=>"tmp_idx_index_issues_with_outdate_blocking_count", :algorithm=>:concurrently})
                   -> 0.0100s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, :id, {:where=>"(state_id = 1 AND blocking_issues_count = 0)", :name=>"tmp_idx_index_issues_with_outdate_blocking_count", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200912193210 AddSchedulingIssuesTempIndexes: migrated (0.0281s) ==========

                == 20200913115700 AddKrokiApplicationSettings: migrating ======================
                -- add_column(:application_settings, :kroki_url, :text)
                   -> 0.0010s
                -- add_column(:application_settings, :kroki_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0011s
                == 20200913115700 AddKrokiApplicationSettings: migrated (0.0022s) =============

                == 20200914070140 AddExpirationPolicyStartedAtToContainerRepositories: migrating
                -- add_column(:container_repositories, :expiration_policy_started_at, :datetime_with_timezone)
                   -> 0.0007s
                == 20200914070140 AddExpirationPolicyStartedAtToContainerRepositories: migrated (0.0007s)

                == 20200914091326 ChangeBuildPendingStateEnums: migrating =====================
                -- change_column(:ci_build_pending_states, :state, :integer, {:limit=>2})
                   -> 0.0083s
                -- change_column(:ci_build_pending_states, :failure_reason, :integer, {:limit=>2})
                   -> 0.0073s
                == 20200914091326 ChangeBuildPendingStateEnums: migrated (0.0157s) ============

                == 20200914104642 ModifyMergeRequestApiIndex: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :created_at, :id], {:name=>:index_merge_requests_on_target_project_id_and_created_at_and_id, :algorithm=>:concurrently})
                   -> 0.0107s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, [:target_project_id, :created_at, :id], {:name=>:index_merge_requests_on_target_project_id_and_created_at_and_id, :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200914104642 ModifyMergeRequestApiIndex: migrated (0.0155s) ==============

                == 20200914105202 RemoveOldMergeRequestApiIndex: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :created_at], {:name=>:index_merge_requests_target_project_id_created_at, :algorithm=>:concurrently})
                   -> 0.0104s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_requests, {:name=>:index_merge_requests_target_project_id_created_at, :algorithm=>:concurrently, :column=>[:target_project_id, :created_at]})
                   -> 0.0127s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200914105202 RemoveOldMergeRequestApiIndex: migrated (0.0240s) ===========

                == 20200914155135 AddDeduplicatedFlagIntoSecurityFindingsTable: migrating =====
                -- add_column(:security_findings, :deduplicated, :boolean, {:default=>false, :null=>false})
                   -> 0.0010s
                == 20200914155135 AddDeduplicatedFlagIntoSecurityFindingsTable: migrated (0.0010s)

                == 20200914183227 AddIndexOnDeduplicatedColumnOfSecurityFindings: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:security_findings, [:scan_id, :deduplicated], {:name=>"index_security_findings_on_scan_id_and_deduplicated", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:security_findings, [:scan_id, :deduplicated], {:name=>"index_security_findings_on_scan_id_and_deduplicated", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200914183227 AddIndexOnDeduplicatedColumnOfSecurityFindings: migrated (0.0075s)

                == 20200914184212 RemoveIndexOnSecurityFindingsScanId: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:security_findings)
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:security_findings, {:algorithm=>:concurrently, :name=>"index_security_findings_on_scan_id"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200914184212 RemoveIndexOnSecurityFindingsScanId: migrated (0.0064s) =====

                == 20200915044225 ScheduleMigrationToHashedStorage: migrating =================
                == 20200915044225 ScheduleMigrationToHashedStorage: migrated (0.0012s) ========

                == 20200915134004 AddIndicesToApprovalProjectRules: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approval_project_rules, :id, {:where=>"rule_type = 0", :name=>"index_approval_project_rules_on_id_with_regular_type", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approval_project_rules, :id, {:where=>"rule_type = 0", :name=>"index_approval_project_rules_on_id_with_regular_type", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approval_project_rules_users, :approval_project_rule_id, {:name=>"index_approval_project_rules_users_on_approval_project_rule_id", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approval_project_rules_users, :approval_project_rule_id, {:name=>"index_approval_project_rules_users_on_approval_project_rule_id", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200915134004 AddIndicesToApprovalProjectRules: migrated (0.0129s) ========

                == 20200915152641 AddVerificationStateToTerraformStateVersion: migrating ======
                -- change_table(:terraform_state_versions)
                   -> 0.0022s
                == 20200915152641 AddVerificationStateToTerraformStateVersion: migrated (0.0044s)

                == 20200915164448 AddVerificationFailureLimitToTerraformStateVersion: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_state_versions\nADD CONSTRAINT tf_state_versions_verification_failure_text_limit\nCHECK ( char_length(verification_failure) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_state_versions VALIDATE CONSTRAINT tf_state_versions_verification_failure_text_limit;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200915164448 AddVerificationFailureLimitToTerraformStateVersion: migrated (0.0054s)

                == 20200915164844 AddVerificationFailureIndexToTerraformStateVersion: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_state_versions, :verification_failure, {:where=>"(verification_failure IS NOT NULL)", :name=>"terraform_state_versions_verification_failure_partial", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_state_versions, :verification_failure, {:where=>"(verification_failure IS NOT NULL)", :name=>"terraform_state_versions_verification_failure_partial", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_state_versions, :verification_checksum, {:where=>"(verification_checksum IS NOT NULL)", :name=>"terraform_state_versions_verification_checksum_partial", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_state_versions, :verification_checksum, {:where=>"(verification_checksum IS NOT NULL)", :name=>"terraform_state_versions_verification_checksum_partial", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200915164844 AddVerificationFailureIndexToTerraformStateVersion: migrated (0.0127s)

                == 20200915185707 EnsureFilledFileStoreOnPackageFiles: migrating ==============
                == 20200915185707 EnsureFilledFileStoreOnPackageFiles: migrated (0.0027s) =====

                == 20200915191156 ValidateNotNullFileStoreOnPackageFiles: migrating ===========
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_package_files VALIDATE CONSTRAINT check_4c5e6bb0b3;")
                   -> 0.0071s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:packages_package_files)
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:packages_package_files, {:algorithm=>:concurrently, :name=>"index_packages_package_files_file_store_is_null"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200915191156 ValidateNotNullFileStoreOnPackageFiles: migrated (0.0150s) ==

                == 20200916081749 RemoveCycleAnalyticsTotalStageData: migrating ===============
                -- execute("DELETE FROM analytics_cycle_analytics_group_stages WHERE name='production'")
                   -> 0.0007s
                -- execute("DELETE FROM analytics_cycle_analytics_project_stages WHERE name='production'")
                   -> 0.0006s
                == 20200916081749 RemoveCycleAnalyticsTotalStageData: migrated (0.0013s) ======

                == 20200916120837 AddIndexToMembersForUnacceptedInvitations: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:members, :created_at, {:where=>"invite_token IS NOT NULL AND user_id IS NULL", :name=>"idx_members_created_at_user_id_invite_token", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:members, :created_at, {:where=>"invite_token IS NOT NULL AND user_id IS NULL", :name=>"idx_members_created_at_user_id_invite_token", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200916120837 AddIndexToMembersForUnacceptedInvitations: migrated (0.0089s)

                == 20200916135044 AddStateIdIndexToMergeRequests: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :iid, :state_id], {:name=>:index_merge_requests_on_target_project_id_and_iid_and_state_id, :algorithm=>:concurrently})
                   -> 0.0100s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, [:target_project_id, :iid, :state_id], {:name=>:index_merge_requests_on_target_project_id_and_iid_and_state_id, :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200916135044 AddStateIdIndexToMergeRequests: migrated (0.0145s) ==========

                == 20200916151442 AddResultIndexToAuthenticationEvents: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:authentication_events, [:provider, :user_id, :created_at], {:where=>"result = 1", :name=>"index_authentication_events_on_provider_user_id_created_at", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:authentication_events, [:provider, :user_id, :created_at], {:where=>"result = 1", :name=>"index_authentication_events_on_provider_user_id_created_at", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20200916151442 AddResultIndexToAuthenticationEvents: migrated (0.0066s) ====

                == 20200916165232 AddDebianMaxFileSizeToPlanLimits: migrating =================
                -- add_column(:plan_limits, :debian_max_file_size, :bigint, {:default=>3221225472, :null=>false})
                   -> 0.0012s
                == 20200916165232 AddDebianMaxFileSizeToPlanLimits: migrated (0.0012s) ========

                == 20200917121650 AddHelpPageDocumentationUrlToApplicationSettings: migrating =
                -- add_column(:application_settings, :help_page_documentation_base_url, :text)
                   -> 0.0010s
                == 20200917121650 AddHelpPageDocumentationUrlToApplicationSettings: migrated (0.0011s)

                == 20200917135802 RemoveDuplicatedCsFindingsWithoutVulnerabilityId: migrating =
                == 20200917135802 RemoveDuplicatedCsFindingsWithoutVulnerabilityId: migrated (0.0000s)

                == 20200917165525 UpdateIndexOnNamespacesForTypeAndId: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:namespaces, [:type, :id], {:where=>"type IS NOT NULL", :name=>"index_namespaces_on_type_and_id_partial", :algorithm=>:concurrently})
                   -> 0.0070s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:namespaces, [:type, :id], {:where=>"type IS NOT NULL", :name=>"index_namespaces_on_type_and_id_partial", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:namespaces)
                   -> 0.0071s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:namespaces, {:algorithm=>:concurrently, :name=>"index_namespaces_on_type_partial"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200917165525 UpdateIndexOnNamespacesForTypeAndId: migrated (0.0224s) =====

                == 20200919200318 AddDefaultBranchNameToNamespaceSettings: migrating ==========
                -- add_column(:namespace_settings, :default_branch_name, :text)
                   -> 0.0022s
                == 20200919200318 AddDefaultBranchNameToNamespaceSettings: migrated (0.0023s) =

                == 20200919204155 AddTextLimitToNamespaceSettingsDefaultBranchName: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE namespace_settings\nADD CONSTRAINT check_0ba93c78c7\nCHECK ( char_length(default_branch_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE namespace_settings VALIDATE CONSTRAINT check_0ba93c78c7;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200919204155 AddTextLimitToNamespaceSettingsDefaultBranchName: migrated (0.0054s)

                == 20200920130356 AddContainerExpirationPolicyWorkerSettingsToApplicationSettings: migrating
                -- column_exists?(:application_settings, :container_registry_expiration_policies_worker_capacity)
                   -> 0.0495s
                -- add_column(:application_settings, :container_registry_expiration_policies_worker_capacity, :integer, {:default=>0, :null=>false})
                   -> 0.0013s
                == 20200920130356 AddContainerExpirationPolicyWorkerSettingsToApplicationSettings: migrated (0.0526s)

                == 20200921093826 AddIndexToUserPreferences: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:user_preferences, :gitpod_enabled, {:name=>:index_user_preferences_on_gitpod_enabled, :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:user_preferences, :gitpod_enabled, {:name=>:index_user_preferences_on_gitpod_enabled, :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200921093826 AddIndexToUserPreferences: migrated (0.0062s) ===============

                == 20200921113722 AddTextLimitToHelpPageDocumentationUrl: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_57123c9593\nCHECK ( char_length(help_page_documentation_base_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_57123c9593;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200921113722 AddTextLimitToHelpPageDocumentationUrl: migrated (0.0060s) ==

                == 20200921130028 AddPagesDeploymentIdToPagesMetadata: migrating ==============
                -- add_column(:project_pages_metadata, :pages_deployment_id, :bigint)
                   -> 0.0005s
                == 20200921130028 AddPagesDeploymentIdToPagesMetadata: migrated (0.0006s) =====

                == 20200921131313 AddForeignKeyToPagesDeploymentIdInProjectPagesMetadata: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_pages_metadata, :pages_deployment_id, {:name=>"index_project_pages_metadata_on_pages_deployment_id", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_pages_metadata, :pages_deployment_id, {:name=>"index_project_pages_metadata_on_pages_deployment_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:project_pages_metadata)
                   -> 0.0038s
                -- execute("ALTER TABLE project_pages_metadata\nADD CONSTRAINT fk_0fd5b22688\nFOREIGN KEY (pages_deployment_id)\nREFERENCES pages_deployments (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_pages_metadata VALIDATE CONSTRAINT fk_0fd5b22688;")
                   -> 0.0009s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200921131313 AddForeignKeyToPagesDeploymentIdInProjectPagesMetadata: migrated (0.0142s)

                == 20200921203231 RemoveDuplicateClusterAgentsIndex: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:cluster_agents)
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:cluster_agents, {:algorithm=>:concurrently, :name=>"index_cluster_agents_on_project_id"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200921203231 RemoveDuplicateClusterAgentsIndex: migrated (0.0053s) =======

                == 20200922052316 CreateIssueEmailParticipants: migrating =====================
                -- table_exists?(:issue_email_participants)
                   -> 0.0005s
                -- create_table(:issue_email_participants)
                   -> 0.0078s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE issue_email_participants\nADD CONSTRAINT check_2c321d408d\nCHECK ( char_length(email) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE issue_email_participants VALIDATE CONSTRAINT check_2c321d408d;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200922052316 CreateIssueEmailParticipants: migrated (0.0152s) ============

                == 20200922054642 DropSnowplowIgluRegistryUrlFromApplicationSettings: migrating
                -- remove_column(:application_settings, :snowplow_iglu_registry_url, :string, {:limit=>255})
                   -> 0.0010s
                == 20200922054642 DropSnowplowIgluRegistryUrlFromApplicationSettings: migrated (0.0010s)

                == 20200922075244 AddComplianceFrameworkModel: migrating ======================
                -- table_exists?(:compliance_management_frameworks)
                   -> 0.0005s
                -- create_table(:compliance_management_frameworks)
                   -> 0.0075s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks\nADD CONSTRAINT check_ab00bc2193\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks VALIDATE CONSTRAINT check_ab00bc2193;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks\nADD CONSTRAINT check_1617e0b87e\nCHECK ( char_length(description) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks VALIDATE CONSTRAINT check_1617e0b87e;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks\nADD CONSTRAINT check_08cd34b2c2\nCHECK ( char_length(color) <= 10 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks VALIDATE CONSTRAINT check_08cd34b2c2;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200922075244 AddComplianceFrameworkModel: migrated (0.0251s) =============

                == 20200922093004 AddPostgresIndexView: migrating =============================
                -- execute("CREATE VIEW postgres_indexes AS\nSELECT\n  pg_namespace.nspname || '.' || pg_class.relname as identifier,\n  pg_index.indexrelid,\n  pg_namespace.nspname as schema,\n  pg_class.relname as name,\n  pg_index.indisunique as unique,\n  pg_index.indisvalid as valid_index,\n  pg_class.relispartition as partitioned,\n  pg_index.indisexclusion as exclusion,\n  pg_indexes.indexdef as definition,\n  pg_relation_size(pg_class.oid) as ondisk_size_bytes\nFROM pg_index\nINNER JOIN pg_class ON pg_class.oid = pg_index.indexrelid\nINNER JOIN pg_namespace ON pg_class.relnamespace = pg_namespace.oid\nINNER JOIN pg_indexes ON pg_class.relname = pg_indexes.indexname\nWHERE pg_namespace.nspname <> 'pg_catalog'\n")
                   -> 0.0027s
                == 20200922093004 AddPostgresIndexView: migrated (0.0028s) ====================

                == 20200922095954 RemoveInstanceStatisticsVisibilityPrivateFromApplicationSettings: migrating
                -- remove_column(:application_settings, :instance_statistics_visibility_private)
                   -> 0.0012s
                == 20200922095954 RemoveInstanceStatisticsVisibilityPrivateFromApplicationSettings: migrated (0.0012s)

                == 20200922133949 CreateBulkImport: migrating =================================
                -- create_table(:bulk_imports)
                   -> 0.0065s
                == 20200922133949 CreateBulkImport: migrated (0.0078s) ========================

                == 20200922170907 ChangeIndexOnPipelineStatus: migrating ======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:status, :id], {:name=>"index_ci_pipelines_on_status_and_id", :algorithm=>:concurrently})
                   -> 0.0084s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:status, :id], {:name=>"index_ci_pipelines_on_status_and_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_pipelines)
                   -> 0.0085s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_pipelines, {:algorithm=>:concurrently, :name=>"index_ci_pipelines_on_status"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200922170907 ChangeIndexOnPipelineStatus: migrated (0.0246s) =============

                == 20200922231755 RemoveCreatedByUserIdFromClusterProvidersAws: migrating =====
                -- remove_column(:cluster_providers_aws, :created_by_user_id)
                   -> 0.0013s
                == 20200922231755 RemoveCreatedByUserIdFromClusterProvidersAws: migrated (0.0064s)

                == 20200923071622 AddDescriptionToRequirements: migrating =====================
                -- add_column(:requirements, :description, :text)
                   -> 0.0007s
                -- add_column(:requirements, :description_html, :text)
                   -> 0.0004s
                == 20200923071622 AddDescriptionToRequirements: migrated (0.0011s) ============

                == 20200923071644 AddTextLimitToRequirementsDescription: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE requirements\nADD CONSTRAINT check_785ae25b9d\nCHECK ( char_length(description) <= 10000 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE requirements VALIDATE CONSTRAINT check_785ae25b9d;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200923071644 AddTextLimitToRequirementsDescription: migrated (0.0054s) ===

                == 20200923102312 UpdateProgrammingLanguageColors: migrating ==================
                == 20200923102312 UpdateProgrammingLanguageColors: migrated (0.2134s) =========

                == 20200923130057 RemoveTmpContainerScanningIndex: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerability_occurrences)
                   -> 0.0042s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerability_occurrences, {:algorithm=>:concurrently, :name=>"tmp_index_for_fixing_inconsistent_vulnerability_occurrences"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200923130057 RemoveTmpContainerScanningIndex: migrated (0.0078s) =========

                == 20200923140404 AddPostgresReindexActionsTable: migrating ===================
                -- create_table(:postgres_reindex_actions, {:if_not_exists=>true})
                   -> 0.0089s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE postgres_reindex_actions\nADD CONSTRAINT check_f12527622c\nCHECK ( char_length(index_identifier) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE postgres_reindex_actions VALIDATE CONSTRAINT check_f12527622c;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200923140404 AddPostgresReindexActionsTable: migrated (0.0145s) ==========

                == 20200924035825 AddOptionsToDastScannerProfile: migrating ===================
                -- add_column(:dast_scanner_profiles, :scan_type, :integer, {:limit=>2, :default=>1, :null=>false})
                   -> 0.0010s
                -- add_column(:dast_scanner_profiles, :use_ajax_spider, :boolean, {:default=>false, :null=>false})
                   -> 0.0007s
                -- add_column(:dast_scanner_profiles, :show_debug_messages, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20200924035825 AddOptionsToDastScannerProfile: migrated (0.0026s) ==========

                == 20200925112104 CreateBulkImportConfigurations: migrating ===================
                -- create_table(:bulk_import_configurations, {:if_not_exists=>true})
                   -> 0.0086s
                == 20200925112104 CreateBulkImportConfigurations: migrated (0.0086s) ==========

                == 20200925114522 CreateBulkImportEntities: migrating =========================
                -- create_table(:bulk_import_entities, {:if_not_exists=>true})
                   -> 0.0172s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT check_13f279f7da\nCHECK ( char_length(source_full_path) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT check_13f279f7da;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT check_715d725ea2\nCHECK ( char_length(destination_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT check_715d725ea2;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT check_b834fff4d9\nCHECK ( char_length(destination_namespace) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT check_b834fff4d9;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT check_796a4d9cc6\nCHECK ( char_length(jid) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT check_796a4d9cc6;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200925114522 CreateBulkImportEntities: migrated (0.0380s) ================

                == 20200925125321 AddU2fIdToWebauthnRegistration: migrating ===================
                -- add_column(:webauthn_registrations, :u2f_registration_id, :integer)
                   -> 0.0006s
                == 20200925125321 AddU2fIdToWebauthnRegistration: migrated (0.0007s) ==========

                == 20200925153423 AddBulkImportForeignKeyToBulkImportEntities: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:bulk_import_entities)
                   -> 0.0037s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT fk_b69fa2b2df\nFOREIGN KEY (bulk_import_id)\nREFERENCES bulk_imports (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT fk_b69fa2b2df;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200925153423 AddBulkImportForeignKeyToBulkImportEntities: migrated (0.0079s)

                == 20200925193815 AddParentForeignKeyToBulkImportEntities: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:bulk_import_entities)
                   -> 0.0036s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT fk_a44ff95be5\nFOREIGN KEY (parent_id)\nREFERENCES bulk_import_entities (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT fk_a44ff95be5;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200925193815 AddParentForeignKeyToBulkImportEntities: migrated (0.0074s) =

                == 20200925193906 AddNamespaceForeignKeyToBulkImportEntities: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:bulk_import_entities)
                   -> 0.0041s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT fk_88c725229f\nFOREIGN KEY (namespace_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT fk_88c725229f;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200925193906 AddNamespaceForeignKeyToBulkImportEntities: migrated (0.0086s)

                == 20200925194006 AddProjectForeignKeyToBulkImportEntities: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:bulk_import_entities)
                   -> 0.0036s
                -- execute("ALTER TABLE bulk_import_entities\nADD CONSTRAINT fk_d06d023c30\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_entities VALIDATE CONSTRAINT fk_d06d023c30;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200925194006 AddProjectForeignKeyToBulkImportEntities: migrated (0.0086s)

                == 20200927224750 AddIncidentIssueTypeIndexToIssues: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, :project_id, {:where=>"issue_type = 1", :name=>"index_issues_project_id_issue_type_incident", :algorithm=>:concurrently})
                   -> 0.0106s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0004s
                -- add_index(:issues, :project_id, {:where=>"issue_type = 1", :name=>"index_issues_project_id_issue_type_incident", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200927224750 AddIncidentIssueTypeIndexToIssues: migrated (0.0181s) =======

                == 20200928095732 AddStateToDastSiteValidation: migrating =====================
                -- add_column(:dast_site_validations, :state, :text, {:default=>:pending, :null=>false})
                   -> 0.0010s
                == 20200928095732 AddStateToDastSiteValidation: migrated (0.0010s) ============

                == 20200928100408 AddTextLimitToDastSiteValidationState: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_validations\nADD CONSTRAINT check_283be72e9b\nCHECK ( char_length(state) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_validations VALIDATE CONSTRAINT check_283be72e9b;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200928100408 AddTextLimitToDastSiteValidationState: migrated (0.0056s) ===

                == 20200928123510 AddExpirationPolicyCleanupStatusToContainerRepositories: migrating
                -- column_exists?(:container_repositories, :expiration_policy_cleanup_status)
                   -> 0.0013s
                -- add_column(:container_repositories, :expiration_policy_cleanup_status, :integer, {:limit=>2, :default=>0, :null=>false})
                   -> 0.0011s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:container_repositories, [:expiration_policy_cleanup_status, :expiration_policy_started_at], {:name=>"idx_container_repositories_on_exp_cleanup_status_and_start_date", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:container_repositories, [:expiration_policy_cleanup_status, :expiration_policy_started_at], {:name=>"idx_container_repositories_on_exp_cleanup_status_and_start_date", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200928123510 AddExpirationPolicyCleanupStatusToContainerRepositories: migrated (0.0092s)

                == 20200928125258 AddForeignKeyToU2fRegIdInWebauthnRegs: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:webauthn_registrations, :u2f_registration_id, {:where=>"u2f_registration_id IS NOT NULL", :name=>"index_webauthn_registrations_on_u2f_registration_id", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:webauthn_registrations, :u2f_registration_id, {:where=>"u2f_registration_id IS NOT NULL", :name=>"index_webauthn_registrations_on_u2f_registration_id", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:webauthn_registrations)
                   -> 0.0035s
                -- execute("ALTER TABLE webauthn_registrations\nADD CONSTRAINT fk_13e04d719a\nFOREIGN KEY (u2f_registration_id)\nREFERENCES u2f_registrations (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE webauthn_registrations VALIDATE CONSTRAINT fk_13e04d719a;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200928125258 AddForeignKeyToU2fRegIdInWebauthnRegs: migrated (0.0144s) ===

                == 20200928131934 CreateRequiredCodeOwnersSections: migrating =================
                -- create_table(:required_code_owners_sections, {:if_not_exists=>true})
                   -> 0.0075s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE required_code_owners_sections\nADD CONSTRAINT check_e58d53741e\nCHECK ( char_length(name) <= 1024 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE required_code_owners_sections VALIDATE CONSTRAINT check_e58d53741e;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200928131934 CreateRequiredCodeOwnersSections: migrated (0.0146s) ========

                == 20200928164807 AddIndexOnVulnerabilitiesStateCase: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerabilities, "ARRAY_POSITION(ARRAY[1, 4, 3, 2]::smallint[], state), id DESC", {:name=>"index_vulnerabilities_on_state_case_id", :algorithm=>:concurrently})
                   -> 0.0053s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerabilities, "ARRAY_POSITION(ARRAY[1, 4, 3, 2]::smallint[], state), id DESC", {:name=>"index_vulnerabilities_on_state_case_id", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0265s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerabilities, "ARRAY_POSITION(ARRAY[1, 4, 3, 2]::smallint[], state) DESC, id DESC", {:name=>"index_vulnerabilities_on_state_case_id_desc", :algorithm=>:concurrently})
                   -> 0.0056s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerabilities, "ARRAY_POSITION(ARRAY[1, 4, 3, 2]::smallint[], state) DESC, id DESC", {:name=>"index_vulnerabilities_on_state_case_id_desc", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200928164807 AddIndexOnVulnerabilitiesStateCase: migrated (0.0468s) ======

                == 20200928203531 CreateAlertManagementHttpIntegrations: migrating ============
                -- create_table(:alert_management_http_integrations, {:if_not_exists=>true})
                   -> 0.0082s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations\nADD CONSTRAINT check_f68577c4af\nCHECK ( char_length(encrypted_token) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations VALIDATE CONSTRAINT check_f68577c4af;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations\nADD CONSTRAINT check_286943b636\nCHECK ( char_length(encrypted_token_iv) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations VALIDATE CONSTRAINT check_286943b636;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations\nADD CONSTRAINT check_e270820180\nCHECK ( char_length(endpoint_identifier) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations VALIDATE CONSTRAINT check_e270820180;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations\nADD CONSTRAINT check_392143ccf4\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE alert_management_http_integrations VALIDATE CONSTRAINT check_392143ccf4;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- add_index(:alert_management_http_integrations, [:active, :project_id, :endpoint_identifier], {:unique=>true, :name=>"index_http_integrations_on_active_and_project_and_endpoint", :where=>"active"})
                   -> 0.0033s
                == 20200928203531 CreateAlertManagementHttpIntegrations: migrated (0.0319s) ===

                == 20200928210524 AddHttpIntegrationsProjectForeignKey: migrating =============
                -- add_foreign_key(:alert_management_http_integrations, :projects, {:column=>:project_id, :on_delete=>:cascade})
                   -> 0.0018s
                == 20200928210524 AddHttpIntegrationsProjectForeignKey: migrated (0.0031s) ====

                == 20200928233632 RemoveTerraformStateVerificationIndexes: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_states, :verification_failure, {:name=>"terraform_states_verification_failure_partial", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:terraform_states, {:name=>"terraform_states_verification_failure_partial", :algorithm=>:concurrently, :column=>:verification_failure})
                   -> 0.0057s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_states, :verification_checksum, {:name=>"terraform_states_verification_checksum_partial", :algorithm=>:concurrently})
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:terraform_states, {:name=>"terraform_states_verification_checksum_partial", :algorithm=>:concurrently, :column=>:verification_checksum})
                   -> 0.0053s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200928233632 RemoveTerraformStateVerificationIndexes: migrated (0.0208s) =

                == 20200929032729 AddSlaMinutesToProjectIncidentManagementSettings: migrating =
                -- add_column(:project_incident_management_settings, :sla_timer, :boolean, {:default=>false})
                   -> 0.0012s
                -- add_column(:project_incident_management_settings, :sla_timer_minutes, :integer)
                   -> 0.0004s
                == 20200929032729 AddSlaMinutesToProjectIncidentManagementSettings: migrated (0.0016s)

                == 20200929052138 CreateInitialVersionsForPreVersioningTerraformStates: migrating
                -- execute("      INSERT INTO terraform_state_versions (terraform_state_id, created_at, updated_at, version, file_store, file)\n      SELECT id, NOW(), NOW(), 0, file_store, file\n      FROM terraform_states\n      WHERE versioning_enabled = FALSE\n      ON CONFLICT (terraform_state_id, version) DO NOTHING\n")
                   -> 0.0009s
                == 20200929052138 CreateInitialVersionsForPreVersioningTerraformStates: migrated (0.0010s)

                == 20200929063159 AddRequireAdminApprovalAfterUserSignupToApplicationSettings: migrating
                -- add_column(:application_settings, :require_admin_approval_after_user_signup, :boolean, {:default=>false, :null=>false})
                   -> 0.0016s
                == 20200929063159 AddRequireAdminApprovalAfterUserSignupToApplicationSettings: migrated (0.0017s)

                == 20200929113254 RemoveTypeFromAuditEvents: migrating ========================
                -- remove_column("audit_events", :type)
                   -> 0.0004s
                -- execute("CREATE OR REPLACE FUNCTION table_sync_function_2be879775d()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM audit_events_part_5fc467ac26 where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE audit_events_part_5fc467ac26\n  SET author_id = NEW.author_id,\n    entity_id = NEW.entity_id,\n    entity_type = NEW.entity_type,\n    details = NEW.details,\n    ip_address = NEW.ip_address,\n    author_name = NEW.author_name,\n    entity_path = NEW.entity_path,\n    target_details = NEW.target_details,\n    target_type = NEW.target_type,\n    target_id = NEW.target_id,\n    created_at = NEW.created_at\n  WHERE audit_events_part_5fc467ac26.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO audit_events_part_5fc467ac26 (id,\n    author_id,\n    entity_id,\n    entity_type,\n    details,\n    ip_address,\n    author_name,\n    entity_path,\n    target_details,\n    target_type,\n    target_id,\n    created_at)\n  VALUES (NEW.id,\n    NEW.author_id,\n    NEW.entity_id,\n    NEW.entity_type,\n    NEW.details,\n    NEW.ip_address,\n    NEW.author_name,\n    NEW.entity_path,\n    NEW.target_details,\n    NEW.target_type,\n    NEW.target_id,\n    NEW.created_at);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0004s
                -- remove_column("audit_events_part_5fc467ac26", :type)
                   -> 0.0032s
                == 20200929113254 RemoveTypeFromAuditEvents: migrated (0.0055s) ===============

                == 20200929114107 ScheduleMigrateU2fWebauthn: migrating =======================
                -- Scheduling MigrateU2fWebauthn background migration jobs
                -- Scheduled 0 MigrateU2fWebauthn jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:02 +0800."
                == 20200929114107 ScheduleMigrateU2fWebauthn: migrated (0.0131s) ==============

                == 20200930094812 UpdatePostgresIndexesView: migrating ========================
                -- execute("CREATE OR REPLACE VIEW postgres_indexes AS\nSELECT\n  pg_namespace.nspname || '.' || pg_class.relname as identifier,\n  pg_index.indexrelid,\n  pg_namespace.nspname as schema,\n  pg_class.relname as name,\n  pg_index.indisunique as unique,\n  pg_index.indisvalid as valid_index,\n  pg_class.relispartition as partitioned,\n  pg_index.indisexclusion as exclusion,\n  pg_indexes.indexdef as definition,\n  pg_relation_size(pg_class.oid) as ondisk_size_bytes\nFROM pg_index\nINNER JOIN pg_class ON pg_class.oid = pg_index.indexrelid\nINNER JOIN pg_namespace ON pg_class.relnamespace = pg_namespace.oid\nINNER JOIN pg_indexes ON pg_class.relname = pg_indexes.indexname\nWHERE pg_namespace.nspname <> 'pg_catalog'\n  AND pg_namespace.nspname IN (\n    current_schema(),\n    'gitlab_partitions_dynamic',\n    'gitlab_partitions_static'\n  )\n")
                   -> 0.0024s
                == 20200930094812 UpdatePostgresIndexesView: migrated (0.0024s) ===============

                == 20200930131343 AddIndexOnProjectIdAndShaToDeployments: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:project_id, :sha], {:name=>"index_deployments_on_project_id_sha", :algorithm=>:concurrently})
                   -> 0.0076s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:project_id, :sha], {:name=>"index_deployments_on_project_id_sha", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20200930131343 AddIndexOnProjectIdAndShaToDeployments: migrated (0.0124s) ==

                == 20200930132319 AddApiFuzzingToPlanLimits: migrating ========================
                -- add_column(:plan_limits, "ci_max_artifact_size_api_fuzzing", :integer, {:default=>0, :null=>false})
                   -> 0.0011s
                == 20200930132319 AddApiFuzzingToPlanLimits: migrated (0.0011s) ===============

                == 20200930144340 SetJobWaiterTtl: migrating ==================================
                == 20200930144340 SetJobWaiterTtl: migrated (0.0153s) =========================

                == 20201001022100 ValidateDesignsFilenameTextLimit: migrating =================
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE design_management_designs VALIDATE CONSTRAINT check_07155e2715;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201001022100 ValidateDesignsFilenameTextLimit: migrated (0.0023s) ========

                == 20201001101136 RemoveIndexOnIssuesRelativePosition: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issues)
                   -> 0.0106s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issues, {:algorithm=>:concurrently, :name=>"index_issues_on_relative_position"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201001101136 RemoveIndexOnIssuesRelativePosition: migrated (0.0140s) =====

                == 20201002012659 AddIssuableSlaTable: migrating ==============================
                -- create_table(:issuable_slas)
                   -> 0.0067s
                == 20201002012659 AddIssuableSlaTable: migrated (0.0067s) =====================

                == 20201002094617 RemoveContainerScanningReportTypeIndex: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerability_occurrences)
                   -> 0.0035s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerability_occurrences, {:algorithm=>:concurrently, :name=>"idx_container_scanning_findings"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201002094617 RemoveContainerScanningReportTypeIndex: migrated (0.0067s) ==

                == 20201002175953 AddIndexForMergedMergeRequests: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, :id, {:where=>"state_id = 3", :name=>"idx_merge_requests_on_merged_state", :algorithm=>:concurrently})
                   -> 0.0103s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, :id, {:where=>"state_id = 3", :name=>"idx_merge_requests_on_merged_state", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201002175953 AddIndexForMergedMergeRequests: migrated (0.0150s) ==========

                == 20201004163918 RemoveProjectIdAndIdIndexFromVulnerabilitiesTable: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerabilities)
                   -> 0.0052s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerabilities, {:algorithm=>:concurrently, :name=>"index_vulnerabilities_on_project_id_and_id"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201004163918 RemoveProjectIdAndIdIndexFromVulnerabilitiesTable: migrated (0.0098s)

                == 20201005092703 AddNamespaceColumnToFrameworks: migrating ===================
                -- column_exists?(:compliance_management_frameworks, :namespace_id)
                   -> 0.0012s
                -- add_column(:compliance_management_frameworks, :namespace_id, :integer)
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:compliance_management_frameworks)
                   -> 0.0036s
                -- execute("ALTER TABLE compliance_management_frameworks\nADD CONSTRAINT fk_b74c45b71f\nFOREIGN KEY (namespace_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks VALIDATE CONSTRAINT fk_b74c45b71f;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:compliance_management_frameworks, [:namespace_id, :name], {:unique=>true, :name=>"idx_on_compliance_management_frameworks_namespace_id_name", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:compliance_management_frameworks, [:namespace_id, :name], {:unique=>true, :name=>"idx_on_compliance_management_frameworks_namespace_id_name", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201005092703 AddNamespaceColumnToFrameworks: migrated (0.0162s) ==========

                == 20201005092709 RemoveComplianceFrameworksGroupIdFk: migrating ==============
                -- change_column_null(:compliance_management_frameworks, :group_id, true)
                   -> 0.0006s
                -- foreign_keys(:compliance_management_frameworks)
                   -> 0.0036s
                -- remove_foreign_key(:compliance_management_frameworks, :namespaces, {:column=>:group_id})
                   -> 0.0047s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:compliance_management_frameworks)
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:compliance_management_frameworks, {:algorithm=>:concurrently, :name=>"index_compliance_management_frameworks_on_group_id_and_name"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201005092709 RemoveComplianceFrameworksGroupIdFk: migrated (0.0271s) =====

                == 20201005092753 AddFrameworkIdToProjectFrameworkSettings: migrating =========
                -- column_exists?(:project_compliance_framework_settings, :framework_id)
                   -> 0.0011s
                -- add_column(:project_compliance_framework_settings, :framework_id, :bigint)
                   -> 0.0005s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_compliance_framework_settings, :framework_id, {:algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_compliance_framework_settings, :framework_id, {:algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:project_compliance_framework_settings)
                   -> 0.0036s
                -- execute("ALTER TABLE project_compliance_framework_settings\nADD CONSTRAINT fk_be413374a9\nFOREIGN KEY (framework_id)\nREFERENCES compliance_management_frameworks (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_compliance_framework_settings VALIDATE CONSTRAINT fk_be413374a9;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201005092753 AddFrameworkIdToProjectFrameworkSettings: migrated (0.0169s)

                == 20201005094331 MigrateComplianceFrameworkEnumToDatabaseFrameworkRecord: migrating
                == 20201005094331 MigrateComplianceFrameworkEnumToDatabaseFrameworkRecord: migrated (0.0134s)

                == 20201005153955 AddNotNullConstraintToComplianceProjectSettings: migrating ==
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE project_compliance_framework_settings\nADD CONSTRAINT check_d348de9e2d\nCHECK ( framework_id IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE project_compliance_framework_settings VALIDATE CONSTRAINT check_d348de9e2d;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- change_column_null(:compliance_management_frameworks, :namespace_id, false)
                   -> 0.0006s
                == 20201005153955 AddNotNullConstraintToComplianceProjectSettings: migrated (0.0090s)

                == 20201006014605 AddAutomaticPurchasedStorageAllocationToApplicationSettings: migrating
                -- add_column(:application_settings, :automatic_purchased_storage_allocation, :boolean, {:default=>false, :null=>false})
                   -> 0.0016s
                == 20201006014605 AddAutomaticPurchasedStorageAllocationToApplicationSettings: migrated (0.0017s)

                == 20201007033527 AddDailyInvitesToPlanLimits: migrating ======================
                -- add_column(:plan_limits, :daily_invites, :integer, {:default=>0, :null=>false})
                   -> 0.0011s
                == 20201007033527 AddDailyInvitesToPlanLimits: migrated (0.0011s) =============

                == 20201007033723 InsertDailyInvitesPlanLimits: migrating =====================
                == 20201007033723 InsertDailyInvitesPlanLimits: migrated (0.0000s) ============

                == 20201007115209 AddLockVersionToCiBuildTraceChunk: migrating ================
                -- add_column(:ci_build_trace_chunks, :lock_version, :integer, {:default=>0, :null=>false})
                   -> 0.0009s
                == 20201007115209 AddLockVersionToCiBuildTraceChunk: migrated (0.0009s) =======

                == 20201008011523 AddCiJwtSigningKeyToApplicationSettings: migrating ==========
                -- add_column(:application_settings, :encrypted_ci_jwt_signing_key, :text)
                   -> 0.0009s
                -- add_column(:application_settings, :encrypted_ci_jwt_signing_key_iv, :text)
                   -> 0.0006s
                == 20201008011523 AddCiJwtSigningKeyToApplicationSettings: migrated (0.0016s) =

                == 20201008011937 AddTextLimitToApplicationSettingsEncryptedCiJwtSigningKeyIv: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_85a39b68ff\nCHECK ( char_length(encrypted_ci_jwt_signing_key_iv) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_85a39b68ff;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201008011937 AddTextLimitToApplicationSettingsEncryptedCiJwtSigningKeyIv: migrated (0.0061s)

                == 20201008013434 GenerateCiJwtSigningKey: migrating ==========================
                == 20201008013434 GenerateCiJwtSigningKey: migrated (0.5063s) =================

                == 20201008075620 AddReleasesEventsToWebHooks: migrating ======================
                -- add_column(:web_hooks, :releases_events, :boolean, {:null=>false, :default=>false})
                   -> 0.0011s
                == 20201008075620 AddReleasesEventsToWebHooks: migrated (0.0012s) =============

                == 20201008125643 CreateCsvIssueImports: migrating ============================
                -- create_table(:csv_issue_imports)
                   -> 0.0091s
                == 20201008125643 CreateCsvIssueImports: migrated (0.0091s) ===================

                == 20201008144854 SetRegexDefaultsOnContainerExpirationPolicies: migrating ====
                -- change_column_default(:container_expiration_policies, :name_regex, ".*")
                   -> 0.0018s
                -- change_column_default(:container_expiration_policies, :enabled, false)
                   -> 0.0016s
                == 20201008144854 SetRegexDefaultsOnContainerExpirationPolicies: migrated (0.0048s)

                == 20201008224441 AddPositionIntoSecurityFindings: migrating ==================
                -- add_column(:security_findings, :position, :integer)
                   -> 0.0004s
                == 20201008224441 AddPositionIntoSecurityFindings: migrated (0.0017s) =========

                == 20201009090954 AddIndexWithProjectIdToContainerExpirationPolicies: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:container_expiration_policies, [:project_id, :next_run_at, :enabled], {:name=>"idx_container_exp_policies_on_project_id_next_run_at_enabled", :algorithm=>:concurrently})NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_project_authorizations_on_user_id_project_id_access_level" to "project_authorizations_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "analytics_repository_languages_unique_index" to "analytics_language_trend_repository_languages_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_approval_project_rules_protected_branches_unique" to "approval_project_rules_protected_branches_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_ci_build_trace_sections_on_build_id_and_section_name_id" to "ci_build_trace_sections_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "idx_deployment_merge_requests_unique_index" to "deployment_merge_requests_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_issue_assignees_on_issue_id_and_user_id" to "issue_assignees_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "issue_id_prometheus_alert_event_id_index" to "issues_prometheus_alert_events_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "issue_id_self_managed_prometheus_alert_event_id_index" to "issues_self_managed_prometheus_alert_events_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_merge_request_diff_commits_on_mr_diff_id_and_order" to "merge_request_diff_commits_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_merge_request_diff_files_on_mr_diff_id_and_order" to "merge_request_diff_files_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_miletone_releases_on_milestone_and_release" to "milestone_releases_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_project_pages_metadata_on_project_id" to "project_pages_metadata_pkey"

                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:container_expiration_policies, [:project_id, :next_run_at, :enabled], {:name=>"idx_container_exp_policies_on_project_id_next_run_at_enabled", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20201009090954 AddIndexWithProjectIdToContainerExpirationPolicies: migrated (0.0083s)

                == 20201011005400 AddTextLimitToApplicationSettingsKrokiUrl: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_17d9558205\nCHECK ( char_length(kroki_url) <= 1024 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_17d9558205;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201011005400 AddTextLimitToApplicationSettingsKrokiUrl: migrated (0.0061s)

                == 20201012073022 RemoveNotNullConstraintOnFramework: migrating ===============
                -- change_column_null(:project_compliance_framework_settings, :framework, true)
                   -> 0.0007s
                == 20201012073022 RemoveNotNullConstraintOnFramework: migrated (0.0007s) ======

                == 20201012122428 AddContainerRegistryExpirationPoliciesWorkerCapacityConstraint: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT app_settings_registry_exp_policies_worker_capacity_positive\nCHECK ( container_registry_expiration_policies_worker_capacity >= 0 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT app_settings_registry_exp_policies_worker_capacity_positive;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201012122428 AddContainerRegistryExpirationPoliciesWorkerCapacityConstraint: migrated (0.0060s)

                == 20201012134230 CreateCiTestCases: migrating ================================
                -- table_exists?(:ci_test_cases)
                   -> 0.0005s
                -- create_table(:ci_test_cases)
                   -> 0.0075s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_test_cases\nADD CONSTRAINT check_dd3c5d1c15\nCHECK ( char_length(key_hash) <= 64 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_test_cases VALIDATE CONSTRAINT check_dd3c5d1c15;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201012134230 CreateCiTestCases: migrated (0.0133s) =======================

                == 20201012135330 CreateCiTestCaseFailures: migrating =========================
                -- create_table(:ci_test_case_failures)
                   -> 0.0088s
                == 20201012135330 CreateCiTestCaseFailures: migrated (0.0088s) ================

                == 20201012140110 AddProjectsFkToCiTestCases: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:ci_test_cases)
                   -> 0.0036s
                -- execute("ALTER TABLE ci_test_cases\nADD CONSTRAINT fk_0526c30ded\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_test_cases VALIDATE CONSTRAINT fk_0526c30ded;")
                   -> 0.0015s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201012140110 AddProjectsFkToCiTestCases: migrated (0.0086s) ==============

                == 20201012140452 AddCiBuildsFkToCiTestCaseFailures: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:ci_test_case_failures)
                   -> 0.0039s
                -- execute("ALTER TABLE ci_test_case_failures\nADD CONSTRAINT fk_d69404d827\nFOREIGN KEY (build_id)\nREFERENCES ci_builds (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_test_case_failures VALIDATE CONSTRAINT fk_d69404d827;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201012140452 AddCiBuildsFkToCiTestCaseFailures: migrated (0.0081s) =======

                == 20201012194936 CreateSamlGroupLinks: migrating =============================
                -- create_table(:saml_group_links, {:if_not_exists=>true})
                   -> 0.0078s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE saml_group_links\nADD CONSTRAINT check_1b3fc49d1e\nCHECK ( char_length(saml_group_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE saml_group_links VALIDATE CONSTRAINT check_1b3fc49d1e;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201012194936 CreateSamlGroupLinks: migrated (0.0149s) ====================

                == 20201014142521 ScheduleSyncBlockingIssuesCount: migrating ==================
                == 20201014142521 ScheduleSyncBlockingIssuesCount: migrated (0.0001s) =========

                == 20201014163633 SpecifyPrimaryKeyWhereMissing: migrating ====================
                -- indexes(:project_authorizations)
                   -> 0.0021s
                -- execute("ALTER TABLE project_authorizations ADD CONSTRAINT project_authorizations_pkey PRIMARY KEY USING INDEX index_project_authorizations_on_user_id_project_id_access_level")
                   -> 0.0009s
                -- indexes(:analytics_language_trend_repository_languages)
                   -> 0.0019s
                -- execute("ALTER TABLE analytics_language_trend_repository_languages ADD CONSTRAINT analytics_language_trend_repository_languages_pkey PRIMARY KEY USING INDEX analytics_repository_languages_unique_index")
                   -> 0.0010s
                -- indexes(:approval_project_rules_protected_branches)
                   -> 0.0019s
                -- execute("ALTER TABLE approval_project_rules_protected_branches ADD CONSTRAINT approval_project_rules_protected_branches_pkey PRIMARY KEY USING INDEX index_approval_project_rules_protected_branches_unique")
                   -> 0.0007s
                -- indexes(:ci_build_trace_sections)
                   -> 0.0022s
                -- execute("ALTER TABLE ci_build_trace_sections ADD CONSTRAINT ci_build_trace_sections_pkey PRIMARY KEY USING INDEX index_ci_build_trace_sections_on_build_id_and_section_name_id")
                   -> 0.0007s
                -- indexes(:deployment_merge_requests)
                   -> 0.0023s
                -- execute("ALTER TABLE deployment_merge_requests ADD CONSTRAINT deployment_merge_requests_pkey PRIMARY KEY USING INDEX idx_deployment_merge_requests_unique_index")
                   -> 0.0009s
                -- indexes(:issue_assignees)
                   -> 0.0019s
                -- execute("ALTER TABLE issue_assignees ADD CONSTRAINT issue_assignees_pkey PRIMARY KEY USING INDEX index_issue_assignees_on_issue_id_and_user_id")
                   -> 0.0007s
                -- indexes(:issues_prometheus_alert_events)
                   -> 0.0019s
                -- execute("ALTER TABLE issues_prometheus_alert_events ADD CONSTRAINT issues_prometheus_alert_events_pkey PRIMARY KEY USING INDEX issue_id_prometheus_alert_event_id_index")
                   -> 0.0007s
                -- indexes(:issues_self_managed_prometheus_alert_events)
                   -> 0.0019s
                -- execute("ALTER TABLE issues_self_managed_prometheus_alert_events ADD CONSTRAINT issues_self_managed_prometheus_alert_events_pkey PRIMARY KEY USING INDEX issue_id_self_managed_prometheus_alert_event_id_index")
                   -> 0.0007s
                -- indexes(:merge_request_diff_commits)
                   -> 0.0019s
                -- execute("ALTER TABLE merge_request_diff_commits ADD CONSTRAINT merge_request_diff_commits_pkey PRIMARY KEY USING INDEX index_merge_request_diff_commits_on_mr_diff_id_and_order")
                   -> 0.0008s
                -- indexes(:merge_request_diff_files)
                   -> 0.0015s
                -- execute("ALTER TABLE merge_request_diff_files ADD CONSTRAINT merge_request_diff_files_pkey PRIMARY KEY USING INDEX index_merge_request_diff_files_on_mr_diff_id_and_order")
                   -> 0.0006s
                -- indexes(:milestone_releases)
                   -> 0.0019s
                -- execute("ALTER TABLE milestone_releases ADD CONSTRAINT milestone_releases_pkey PRIMARY KEY USING INDEX index_miletone_releases_on_milestone_and_release")
                   -> 0.0007s
                -- indexes(:project_pages_metadata)
                   -> 0.0025s
                -- execute("ALTER TABLE project_pages_metadata ADD CONSTRAINT project_pages_metadata_pkey PRIMARY KEY USING INDEX index_project_pages_metadata_on_project_id")
                   -> 0.0006s
                -- indexes(:push_event_payloads)
                   -> 0.0015s
                -- execute("ALTER TABLE push_event_payloads ADD CONSTRAINT push_event_payloads_pkey PRIMARY KEY USING INDEX index_push_event_payloads_on_event_id")NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_push_event_payloads_on_event_id" to "push_event_payloads_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_repository_languages_on_project_and_languages_id" to "repository_languages_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_user_interacted_projects_on_project_id_and_user_id" to "user_interacted_projects_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "users_security_dashboard_projects_unique_index" to "users_security_dashboard_projects_pkey"

                   -> 0.0008s
                -- indexes(:repository_languages)
                   -> 0.0015s
                -- execute("ALTER TABLE repository_languages ADD CONSTRAINT repository_languages_pkey PRIMARY KEY USING INDEX index_repository_languages_on_project_and_languages_id")
                   -> 0.0007s
                -- indexes(:user_interacted_projects)
                   -> 0.0019s
                -- execute("ALTER TABLE user_interacted_projects ADD CONSTRAINT user_interacted_projects_pkey PRIMARY KEY USING INDEX index_user_interacted_projects_on_project_id_and_user_id")
                   -> 0.0007s
                -- indexes(:users_security_dashboard_projects)
                   -> 0.0019s
                -- execute("ALTER TABLE users_security_dashboard_projects ADD CONSTRAINT users_security_dashboard_projects_pkey PRIMARY KEY USING INDEX users_security_dashboard_projects_unique_index")
                   -> 0.0007s
                == 20201014163633 SpecifyPrimaryKeyWhereMissing: migrated (0.0696s) ===========

                == 20201014205300 DropBackfillJiraTrackerDeploymentTypeJobs: migrating ========
                == 20201014205300 DropBackfillJiraTrackerDeploymentTypeJobs: migrated (0.0012s)

                == 20201015073808 ScheduleBlockedByLinksReplacement: migrating ================
                == 20201015073808 ScheduleBlockedByLinksReplacement: migrated (0.0000s) =======

                == 20201015121805 AddProjectForeignKeyToCsvIssueImports: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:csv_issue_imports)
                   -> 0.0036s
                -- execute("ALTER TABLE csv_issue_imports\nADD CONSTRAINT fk_e71c0ae362\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE csv_issue_imports VALIDATE CONSTRAINT fk_e71c0ae362;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201015121805 AddProjectForeignKeyToCsvIssueImports: migrated (0.0086s) ===

                == 20201015121825 AddUserForeignKeyToCsvIssueImports: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:csv_issue_imports)
                   -> 0.0036s
                -- execute("ALTER TABLE csv_issue_imports\nADD CONSTRAINT fk_5e1572387c\nFOREIGN KEY (user_id)\nREFERENCES users (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE csv_issue_imports VALIDATE CONSTRAINT fk_5e1572387c;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201015121825 AddUserForeignKeyToCsvIssueImports: migrated (0.0081s) ======

                == 20201015154527 AddIndexOnServicesForUsageData: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:services, [:type, :id], {:where=>"active = TRUE AND project_id IS NOT NULL", :name=>"index_services_on_type_id_when_active_and_project_id_not_null", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:services, [:type, :id], {:where=>"active = TRUE AND project_id IS NOT NULL", :name=>"index_services_on_type_id_when_active_and_project_id_not_null", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201015154527 AddIndexOnServicesForUsageData: migrated (0.0089s) ==========

                == 20201015194852 AddIndexOnStateForDastSiteValidations: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:dast_site_validations, [:url_base, :state], {:name=>"index_dast_site_validations_on_url_base_and_state", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:dast_site_validations, [:url_base, :state], {:name=>"index_dast_site_validations_on_url_base_and_state", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:dast_site_validations)
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:dast_site_validations, {:algorithm=>:concurrently, :name=>"index_dast_site_validations_on_url_base"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201015194852 AddIndexOnStateForDastSiteValidations: migrated (0.0118s) ===

                == 20201015231049 AddCiBuildIdToTerraformStateVersions: migrating =============
                -- column_exists?(:terraform_state_versions, :ci_build_id)
                   -> 0.0015s
                -- add_column(:terraform_state_versions, :ci_build_id, :bigint)
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_state_versions, :ci_build_id, {:name=>"index_terraform_state_versions_on_ci_build_id", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_state_versions, :ci_build_id, {:name=>"index_terraform_state_versions_on_ci_build_id", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:terraform_state_versions)
                   -> 0.0036s
                -- execute("ALTER TABLE terraform_state_versions\nADD CONSTRAINT fk_04b91e4a9f\nFOREIGN KEY (ci_build_id)\nREFERENCES ci_builds (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_state_versions VALIDATE CONSTRAINT fk_04b91e4a9f;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201015231049 AddCiBuildIdToTerraformStateVersions: migrated (0.0172s) ====

                == 20201016074302 AddIndexProjectIdAndIdToContainerRepositories: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:container_repositories, [:project_id, :id], {:name=>"index_container_repositories_on_project_id_and_id", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:container_repositories, [:project_id, :id], {:name=>"index_container_repositories_on_project_id_and_id", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201016074302 AddIndexProjectIdAndIdToContainerRepositories: migrated (0.0071s)

                == 20201019091307 AddUniqueIndexOnScanIdAndPositionOfSecurityFindings: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:security_findings, [:scan_id, :position], {:unique=>true, :name=>"index_security_findings_on_scan_id_and_position", :algorithm=>:concurrently})
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:security_findings, [:scan_id, :position], {:unique=>true, :name=>"index_security_findings_on_scan_id_and_position", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201019091307 AddUniqueIndexOnScanIdAndPositionOfSecurityFindings: migrated (0.0076s)

                == 20201019094741 RenameSitemapRootNamespaces: migrating ======================
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201019094741 RenameSitemapRootNamespaces: migrated (0.0300s) =============

                == 20201019101549 AddEsCustomAnalyzersSettings: migrating =====================
                -- add_column(:application_settings, :elasticsearch_analyzers_smartcn_enabled, :bool, {:null=>false, :default=>false})
                   -> 0.0017s
                -- add_column(:application_settings, :elasticsearch_analyzers_smartcn_search, :bool, {:null=>false, :default=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :elasticsearch_analyzers_kuromoji_enabled, :bool, {:null=>false, :default=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :elasticsearch_analyzers_kuromoji_search, :bool, {:null=>false, :default=>false})
                   -> 0.0011s
                == 20201019101549 AddEsCustomAnalyzersSettings: migrated (0.0051s) ============

                == 20201019111952 AddSha256AndFilecountToPagesDeployments: migrating ==========
                -- execute("DELETE FROM pages_deployments")
                   -> 0.0004s
                -- add_column(:pages_deployments, :file_count, :integer, {:null=>false})
                   -> 0.0004s
                -- add_column(:pages_deployments, :file_sha256, :binary, {:null=>false})
                   -> 0.0004s
                == 20201019111952 AddSha256AndFilecountToPagesDeployments: migrated (0.0013s) =

                == 20201019113009 AddNewUserSignupsCapToApplicationSettings: migrating ========
                -- add_column(:application_settings, :new_user_signups_cap, :integer)
                   -> 0.0009s
                == 20201019113009 AddNewUserSignupsCapToApplicationSettings: migrated (0.0010s)

                == 20201019130244 RemoveLicenseComplianceTempIndex: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_job_artifacts)
                   -> 0.0040s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_job_artifacts, {:algorithm=>:concurrently, :name=>"index_ci_job_artifacts_on_license_compliance_file_types"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201019130244 RemoveLicenseComplianceTempIndex: migrated (0.0092s) ========

                == 20201019152046 AddDefaultBranchToDailyBuildGroupReportResult: migrating ====
                -- add_column(:ci_daily_build_group_report_results, :default_branch, :boolean, {:default=>false, :null=>false})
                   -> 0.0011s
                == 20201019152046 AddDefaultBranchToDailyBuildGroupReportResult: migrated (0.0011s)

                == 20201019161924 AddPartitionedTableView: migrating ==========================
                -- execute("CREATE OR REPLACE VIEW postgres_partitioned_tables AS\nSELECT\n  pg_namespace.nspname::text || '.'::text || pg_class.relname::text AS identifier,\n  pg_class.oid AS oid,\n  pg_namespace.nspname AS schema,\n  pg_class.relname AS name,\n  CASE partitioned_tables.partstrat\n  WHEN 'l' THEN 'list'\n  WHEN 'r' THEN 'range'\n  WHEN 'h' THEN 'hash'\n  END as strategy,\n  array_agg(pg_attribute.attname) as key_columns\n  FROM (\n    SELECT\n      partrelid,\n      partstrat,\n      unnest(partattrs) as column_position\n    FROM pg_partitioned_table\n  ) partitioned_tables\n  INNER JOIN pg_class\n  ON partitioned_tables.partrelid = pg_class.oid\n  INNER JOIN pg_namespace\n  ON pg_class.relnamespace = pg_namespace.oid\n  INNER JOIN pg_attribute\n  ON pg_attribute.attrelid = pg_class.oid\n  AND pg_attribute.attnum = partitioned_tables.column_position\n  WHERE pg_namespace.nspname = current_schema()\n  GROUP BY identifier, pg_class.oid, schema, name, strategy;\n")
                   -> 0.0022s
                == 20201019161924 AddPartitionedTableView: migrated (0.0022s) =================

                == 20201019172704 AddPartitionsView: migrating ================================
                -- execute("CREATE OR REPLACE VIEW postgres_partitions AS\nSELECT\n  pg_namespace.nspname::text || '.'::text || pg_class.relname::text AS identifier,\n  pg_class.oid AS oid,\n  pg_namespace.nspname AS schema,\n  pg_class.relname AS name,\n  parent_namespace.nspname::text || '.'::text || parent_class.relname::text AS parent_identifier,\n  pg_get_expr(pg_class.relpartbound, pg_inherits.inhrelid) AS condition\nFROM pg_class\nINNER JOIN pg_namespace\nON pg_namespace.oid = pg_class.relnamespace\nINNER JOIN pg_inherits\nON pg_class.oid = pg_inherits.inhrelid\nINNER JOIN pg_class parent_class\nON pg_inherits.inhparent = parent_class.oid\nINNER JOIN pg_namespace parent_namespace\nON parent_class.relnamespace = parent_namespace.oid\nWHERE pg_class.relispartition\nAND pg_namespace.nspname IN (\n  current_schema(),\n  'gitlab_partitions_dynamic',\n  'gitlab_partitions_static'\n)\n")
                   -> 0.0021s
                == 20201019172704 AddPartitionsView: migrated (0.0021s) =======================

                == 20201020102551 RemoveIndexServiceForUsageData: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:services)
                   -> 0.0045s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:services, {:algorithm=>:concurrently, :name=>"index_services_on_type_id_when_active_not_instance_not_template"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201020102551 RemoveIndexServiceForUsageData: migrated (0.0078s) ==========

                == 20201021085007 CreateAnalyticsDevopsAdoptionSegments: migrating ============
                -- create_table(:analytics_devops_adoption_segments, {:if_not_exists=>true})
                   -> 0.0082s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segments\nADD CONSTRAINT check_4be7a006fd\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segments VALIDATE CONSTRAINT check_4be7a006fd;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201021085007 CreateAnalyticsDevopsAdoptionSegments: migrated (0.0135s) ===

                == 20201021101956 AddIndexRouteOnNameTrigramToRoute: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:routes, :name, {:name=>"index_route_on_name_trigram", :using=>:gin, :opclass=>{:name=>:gin_trgm_ops}, :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:routes, :name, {:name=>"index_route_on_name_trigram", :using=>:gin, :opclass=>{:name=>:gin_trgm_ops}, :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201021101956 AddIndexRouteOnNameTrigramToRoute: migrated (0.0073s) =======

                == 20201021102554 CreateAnalyticsDevopsAdoptionSegmentSelections: migrating ===
                -- create_table(:analytics_devops_adoption_segment_selections)
                   -> 0.0119s
                == 20201021102554 CreateAnalyticsDevopsAdoptionSegmentSelections: migrated (0.0119s)

                == 20201021105347 AddForeignKeyProjectIdToSegmentSelection: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:analytics_devops_adoption_segment_selections)
                   -> 0.0039s
                -- execute("ALTER TABLE analytics_devops_adoption_segment_selections\nADD CONSTRAINT fk_f1472b95f3\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segment_selections VALIDATE CONSTRAINT fk_f1472b95f3;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201021105347 AddForeignKeyProjectIdToSegmentSelection: migrated (0.0088s)

                == 20201021105600 AddForeignKeyGroupIdToSegmentSelection: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:analytics_devops_adoption_segment_selections)
                   -> 0.0037s
                -- execute("ALTER TABLE analytics_devops_adoption_segment_selections\nADD CONSTRAINT fk_ded7fe0344\nFOREIGN KEY (group_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segment_selections VALIDATE CONSTRAINT fk_ded7fe0344;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201021105600 AddForeignKeyGroupIdToSegmentSelection: migrated (0.0079s) ==

                == 20201021105959 AddCheckConstraintToSegmentSelection: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segment_selections\nADD CONSTRAINT segment_selection_project_id_or_group_id_required\nCHECK ( (project_id != NULL AND group_id IS NULL) OR (group_id != NULL AND project_id IS NULL) )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segment_selections VALIDATE CONSTRAINT segment_selection_project_id_or_group_id_required;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201021105959 AddCheckConstraintToSegmentSelection: migrated (0.0053s) ====

                == 20201021142812 AddIndexToCiDailyBuildGroupReportResults: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_daily_build_group_report_results, [:project_id, :date], {:order=>{:date=>:desc}, :where=>"default_branch = TRUE AND (data -> 'coverage') IS NOT NULL", :name=>"index_ci_daily_build_group_report_results_on_project_and_date", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_daily_build_group_report_results, [:project_id, :date], {:order=>{:date=>:desc}, :where=>"default_branch = TRUE AND (data -> 'coverage') IS NOT NULL", :name=>"index_ci_daily_build_group_report_results_on_project_and_date", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201021142812 AddIndexToCiDailyBuildGroupReportResults: migrated (0.0068s)

                == 20201021152210 AddSecretDetectionTokenRevocationApplicationSettings: migrating
                -- add_column(:application_settings, :secret_detection_token_revocation_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0015s
                -- add_column(:application_settings, :secret_detection_token_revocation_url, :text, {:null=>true})
                   -> 0.0006s
                -- add_column(:application_settings, :encrypted_secret_detection_token_revocation_token, :text)
                   -> 0.0006s
                -- add_column(:application_settings, :encrypted_secret_detection_token_revocation_token_iv, :text)
                   -> 0.0006s
                == 20201021152210 AddSecretDetectionTokenRevocationApplicationSettings: migrated (0.0052s)

                == 20201021155606 AddAnalyticsAccessLevelToProjectFeatures: migrating =========
                -- add_column(:project_features, :analytics_access_level, :integer, {:default=>20, :null=>false})
                   -> 0.0008s
                == 20201021155606 AddAnalyticsAccessLevelToProjectFeatures: migrated (0.0022s)

                == 20201021190539 AddTextLimitToSecretDetectionTokenRevocationApplicationSettings: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_9a719834eb\nCHECK ( char_length(secret_detection_token_revocation_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_9a719834eb;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201021190539 AddTextLimitToSecretDetectionTokenRevocationApplicationSettings: migrated (0.0061s)

                == 20201021220101 AddMergeTrainsEnabled: migrating ============================
                -- add_column(:project_ci_cd_settings, :merge_trains_enabled, :boolean, {:default=>false, :allow_null=>false})
                   -> 0.0009s
                == 20201021220101 AddMergeTrainsEnabled: migrated (0.0009s) ===================

                == 20201022080802 AddRepositoryReadOnlyToSnippets: migrating ==================
                -- add_column(:snippets, :repository_read_only, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20201022080802 AddRepositoryReadOnlyToSnippets: migrated (0.0010s) =========

                == 20201022094845 AddHistoricalDataRecordedAt: migrating ======================
                -- add_column(:historical_data, :recorded_at, :timestamptz)
                   -> 0.0006s
                == 20201022094845 AddHistoricalDataRecordedAt: migrated (0.0007s) =============

                == 20201022094846 UpdateHistoricalDataRecordedAt: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"historical_data\" WHERE \"historical_data\".\"recorded_at\" IS NULL")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE historical_data\nADD CONSTRAINT check_640e8cf66c\nCHECK ( recorded_at IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0003s
                -- execute("ALTER TABLE historical_data VALIDATE CONSTRAINT check_640e8cf66c;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- change_column_null(:historical_data, :date, true)
                   -> 0.0007s
                == 20201022094846 UpdateHistoricalDataRecordedAt: migrated (0.0099s) ==========

                == 20201022103304 AddAvailabilityToUserStatuses: migrating ====================
                -- add_column(:user_statuses, :availability, :integer, {:limit=>2, :default=>0, :null=>false})
                   -> 0.0010s
                == 20201022103304 AddAvailabilityToUserStatuses: migrated (0.0010s) ===========

                == 20201022144501 CreateSnippetRepositoryStorageMove: migrating ===============
                -- table_exists?(:snippet_repository_storage_moves)
                   -> 0.0005s
                -- create_table(:snippet_repository_storage_moves)
                   -> 0.0084s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE snippet_repository_storage_moves\nADD CONSTRAINT snippet_repository_storage_moves_source_storage_name\nCHECK ( char_length(source_storage_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE snippet_repository_storage_moves VALIDATE CONSTRAINT snippet_repository_storage_moves_source_storage_name;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE snippet_repository_storage_moves\nADD CONSTRAINT snippet_repository_storage_moves_destination_storage_name\nCHECK ( char_length(destination_storage_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE snippet_repository_storage_moves VALIDATE CONSTRAINT snippet_repository_storage_moves_destination_storage_name;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201022144501 CreateSnippetRepositoryStorageMove: migrated (0.0208s) ======

                == 20201022191817 AddHasVulnerabilitiesIntoProjectSettings: migrating =========
                -- add_column(:project_settings, :has_vulnerabilities, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20201022191817 AddHasVulnerabilitiesIntoProjectSettings: migrated (0.0021s)

                == 20201022192254 IndexProjectSettingsOnProjectIdPartially: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_settings, :project_id, {:name=>"index_project_settings_on_project_id_partially", :where=>"has_vulnerabilities IS TRUE", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_settings, :project_id, {:name=>"index_project_settings_on_project_id_partially", :where=>"has_vulnerabilities IS TRUE", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20201022192254 IndexProjectSettingsOnProjectIdPartially: migrated (0.0063s)

                == 20201023114628 CreateMergeRequestCleanupSchedules: migrating ===============
                -- create_table(:merge_request_cleanup_schedules, {:id=>false})
                   -> 0.0089s
                == 20201023114628 CreateMergeRequestCleanupSchedules: migrated (0.0103s) ======

                == 20201026051643 RemoveScannedResourcesCountFromSecurityScans: migrating =====
                -- remove_column(:security_scans, :scanned_resources_count)
                   -> 0.0006s
                == 20201026051643 RemoveScannedResourcesCountFromSecurityScans: migrated (0.0006s)

                == 20201026182253 SchedulePopulateVulnerabilityFeedbackPipelineId: migrating ==
                == 20201026182253 SchedulePopulateVulnerabilityFeedbackPipelineId: migrated (0.0001s)

                == 20201026185514 EnsureU2fRegistrationsMigrated: migrating ===================
                == 20201026185514 EnsureU2fRegistrationsMigrated: migrated (0.0041s) ==========

                == 20201026200736 SeedMergeTrainsEnabled: migrating ===========================
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"project_ci_cd_settings\" WHERE \"project_ci_cd_settings\".\"merge_pipelines_enabled\" = TRUE")
                   -> 0.0006s
                == 20201026200736 SeedMergeTrainsEnabled: migrated (0.0008s) ==================

                == 20201027002551 MigrateServicesToHttpIntegrations: migrating ================
                -- select_all("SELECT * FROM services\nJOIN alerts_service_data\nON (services.id = alerts_service_data.service_id)\nWHERE type = 'AlertsService'\nAND active = TRUE\n")
                   -> 0.0012s
                == 20201027002551 MigrateServicesToHttpIntegrations: migrated (0.0013s) =======

                == 20201027101010 CreateUserFollowUsers: migrating ============================
                -- execute("CREATE TABLE user_follow_users (\n  follower_id integer not null references users (id) on delete cascade,\n  followee_id integer not null references users (id) on delete cascade,\n  PRIMARY KEY (follower_id, followee_id)\n);\nCREATE INDEX ON user_follow_users (followee_id);\n")
                   -> 0.0045s
                == 20201027101010 CreateUserFollowUsers: migrated (0.0058s) ===================

                == 20201027135651 AddAutoRollbackSetting: migrating ===========================
                -- add_column(:project_ci_cd_settings, :auto_rollback_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20201027135651 AddAutoRollbackSetting: migrated (0.0023s) ==================

                == 20201027210127 AddIndexToOauthAccessGrantsResourceOwnerId: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:oauth_access_grants, [:resource_owner_id, :application_id, :created_at], {:name=>"index_oauth_access_grants_on_resource_owner_id", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:oauth_access_grants, [:resource_owner_id, :application_id, :created_at], {:name=>"index_oauth_access_grants_on_resource_owner_id", :algorithm=>:concurrently})NOTICE:  trigger "trigger_1f0ae12498d3" for relation "application_settings" does not exist, skipping
                NOTICE:  trigger "trigger_72b785aa2f14" for relation "application_settings" does not exist, skipping
                NOTICE:  trigger "trigger_3d531acd472b" for relation "application_settings" does not exist, skipping

                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201027210127 AddIndexToOauthAccessGrantsResourceOwnerId: migrated (0.0081s)

                == 20201027211138 IncreaseDefaultDiffMaxPatchBytes: migrating =================
                -- change_column_default(:application_settings, :diff_max_patch_bytes, {:from=>102400, :to=>204800})
                   -> 0.0572s
                == 20201027211138 IncreaseDefaultDiffMaxPatchBytes: migrated (0.0572s) ========

                == 20201028160831 AddTemporaryIndexToVulnerabilitiesTable: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerabilities, :id, {:where=>"state = 2 AND (dismissed_at IS NULL OR dismissed_by_id IS NULL)", :name=>"temporary_index_vulnerabilities_on_id", :algorithm=>:concurrently})
                   -> 0.0051s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerabilities, :id, {:where=>"state = 2 AND (dismissed_at IS NULL OR dismissed_by_id IS NULL)", :name=>"temporary_index_vulnerabilities_on_id", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201028160831 AddTemporaryIndexToVulnerabilitiesTable: migrated (0.0098s) =

                == 20201028160832 SchedulePopulateMissingDismissalInformationForVulnerabilities: migrating
                == 20201028160832 SchedulePopulateMissingDismissalInformationForVulnerabilities: migrated (0.0174s)

                == 20201028182809 BackfillJiraTrackerDeploymentType2: migrating ===============
                -- Scheduled 0 BackfillJiraTrackerDeploymentType2 jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:03 +0800."
                == 20201028182809 BackfillJiraTrackerDeploymentType2: migrated (0.0134s) ======

                == 20201028184640 AddHelmMajorVersionToClusters: migrating ====================
                -- add_column(:clusters, :helm_major_version, :integer, {:default=>2, :null=>false})
                   -> 0.0011s
                == 20201028184640 AddHelmMajorVersionToClusters: migrated (0.0012s) ===========

                == 20201028204306 MigrateDefaultDiffMaxPatchBytesToMinimum200kb: migrating ====
                == 20201028204306 MigrateDefaultDiffMaxPatchBytesToMinimum200kb: migrated (0.0072s)

                == 20201029052241 MigrateGeoBlobVerificationPrimaryWorkerSidekiqQueue: migrating
                == 20201029052241 MigrateGeoBlobVerificationPrimaryWorkerSidekiqQueue: migrated (0.0002s)

                == 20201029143650 RenameApplicationSettingsToAllowDenyNames: migrating ========
                -- column_exists?(:application_settings, :id)
                   -> 0.0542s
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:application_settings)
                   -> 0.0533s
                -- add_column(:application_settings, :domain_denylist_enabled, :boolean, {:limit=>nil, :precision=>nil, :scale=>nil})
                   -> 0.0013s
                -- change_column_default(:application_settings, :domain_denylist_enabled, "false")
                   -> 0.0545s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"application_settings\"")
                   -> 0.0008s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" ORDER BY \"application_settings\".\"id\" ASC LIMIT 1")
                   -> 0.0004s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" WHERE \"application_settings\".\"id\" >= 1 ORDER BY \"application_settings\".\"id\" ASC LIMIT 1 OFFSET 1")
                   -> 0.0004s
                -- execute("UPDATE \"application_settings\" SET \"domain_denylist_enabled\" = \"application_settings\".\"domain_blacklist_enabled\" WHERE \"application_settings\".\"id\" >= 1")
                   -> 0.0011s
                -- indexes(:application_settings)
                   -> 0.0048s
                -- foreign_keys(:application_settings)
                   -> 0.0039s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:application_settings, :domain_blacklist_enabled)
                   -> 0.0534s
                -- column_exists?(:application_settings, :domain_denylist_enabled)
                   -> 0.0552s
                -- current_schema()
                   -> 0.0002s
                -- column_exists?(:application_settings, :id)
                   -> 0.0551s
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:application_settings)
                   -> 0.0787s
                -- add_column(:application_settings, :domain_denylist, :text, {:limit=>nil, :precision=>nil, :scale=>nil})
                   -> 0.0015s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"application_settings\"")
                   -> 0.0008s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" ORDER BY \"application_settings\".\"id\" ASC LIMIT 1")
                   -> 0.0005s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" WHERE \"application_settings\".\"id\" >= 1 ORDER BY \"application_settings\".\"id\" ASC LIMIT 1 OFFSET 1")
                   -> 0.0004s
                -- execute("UPDATE \"application_settings\" SET \"domain_denylist\" = \"application_settings\".\"domain_blacklist\" WHERE \"application_settings\".\"id\" >= 1")
                   -> 0.0012s
                -- indexes(:application_settings)
                   -> 0.0049s
                -- foreign_keys(:application_settings)
                   -> 0.0037s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:application_settings, :domain_blacklist)
                   -> 0.0542s
                -- column_exists?(:application_settings, :domain_denylist)
                   -> 0.0542s
                -- current_schema()
                   -> 0.0003s
                -- column_exists?(:application_settings, :id)
                   -> 0.0533s
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:application_settings)
                   -> 0.0550s
                -- add_column(:application_settings, :domain_allowlist, :text, {:limit=>nil, :precision=>nil, :scale=>nil})
                   -> 0.0014s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"application_settings\"")
                   -> 0.0008s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" ORDER BY \"application_settings\".\"id\" ASC LIMIT 1")
                   -> 0.0004s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" WHERE \"application_settings\".\"id\" >= 1 ORDER BY \"application_settings\".\"id\" ASC LIMIT 1 OFFSET 1")
                   -> 0.0004s
                -- execute("UPDATE \"application_settings\" SET \"domain_allowlist\" = \"application_settings\".\"domain_whitelist\" WHERE \"application_settings\".\"id\" >= 1")
                   -> 0.0014s
                -- indexes(:application_settings)
                   -> 0.0048s
                -- foreign_keys(:application_settings)
                   -> 0.0037s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:application_settings, :domain_whitelist)
                   -> 0.0539s
                -- column_exists?(:application_settings, :domain_allowlist)
                   -> 0.0543s
                -- current_schema()
                   -> 0.0003s
                == 20201029143650 RenameApplicationSettingsToAllowDenyNames: migrated (0.8342s)

                == 20201029144157 CleanupApplicationSettingsToAllowDenyRename: migrating ======
                -- remove_column(:application_settings, :domain_blacklist_enabled)
                   -> 0.0015s
                -- remove_column(:application_settings, :domain_blacklist)
                   -> 0.0010s
                -- remove_column(:application_settings, :domain_whitelist)
                   -> 0.0010s
                == 20201029144157 CleanupApplicationSettingsToAllowDenyRename: migrated (0.0090s)

                == 20201029144444 CreateVulnerabilityFindingLinks: migrating ==================
                -- create_table(:vulnerability_finding_links, {:if_not_exists=>true})
                   -> 0.0100s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_finding_links\nADD CONSTRAINT check_55f0a95439\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_finding_links VALIDATE CONSTRAINT check_55f0a95439;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_finding_links\nADD CONSTRAINT check_b7fe886df6\nCHECK ( char_length(url) <= 2048 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_finding_links VALIDATE CONSTRAINT check_b7fe886df6;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201029144444 CreateVulnerabilityFindingLinks: migrated (0.0207s) =========

                == 20201029144524 AddIndexToReleases: migrating ===============================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:releases, :released_at, {:name=>"index_releases_on_released_at", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:releases, :released_at, {:name=>"index_releases_on_released_at", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20201029144524 AddIndexToReleases: migrated (0.0088s) ======================

                == 20201030092151 AddRequirementsAccessLevelToProjectFeatures: migrating ======
                -- column_exists?(:project_features, :requirements_access_level)
                   -> 0.0016s
                -- add_column(:project_features, :requirements_access_level, :integer, {:default=>20, :null=>false})
                   -> 0.0008s
                == 20201030092151 AddRequirementsAccessLevelToProjectFeatures: migrated (0.0037s)

                == 20201030121314 ScheduleUpdateExistingUsersThatRequireTwoFactorAuth: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:users, :require_two_factor_authentication_from_group, {:where=>"require_two_factor_authentication_from_group = TRUE", :name=>"index_users_on_require_two_factor_authentication_from_group", :algorithm=>:concurrently})
                   -> 0.0093s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:users, :require_two_factor_authentication_from_group, {:where=>"require_two_factor_authentication_from_group = TRUE", :name=>"index_users_on_require_two_factor_authentication_from_group", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- Scheduled 0 UpdateExistingUsersThatRequireTwoFactorAuth jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:04 +0800."
                == 20201030121314 ScheduleUpdateExistingUsersThatRequireTwoFactorAuth: migrated (0.0324s)

                == 20201030200115 AddIidToDesignManagementDesign: migrating ===================
                -- add_column(:design_management_designs, :iid, :integer)
                   -> 0.0006s
                == 20201030200115 AddIidToDesignManagementDesign: migrated (0.0006s) ==========

                == 20201030200539 AddIndexOnDesignManagementDesignsIidProjectId: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:design_management_designs, [:project_id, :iid], {:name=>"index_design_management_designs_on_iid_and_project_id", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:design_management_designs, [:project_id, :iid], {:name=>"index_design_management_designs_on_iid_and_project_id", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201030200539 AddIndexOnDesignManagementDesignsIidProjectId: migrated (0.0072s)

                == 20201030203854 BackfillDesignIids: migrating ===============================
                == 20201030203854 BackfillDesignIids: migrated (0.0039s) ======================

                == 20201030223933 AddCiPipelineDeploymentsToPlanLimits: migrating =============
                -- add_column(:plan_limits, :ci_pipeline_deployments, :integer, {:default=>500, :null=>false})
                   -> 0.0012s
                == 20201030223933 AddCiPipelineDeploymentsToPlanLimits: migrated (0.0012s) ====

                == 20201102073808 ScheduleBlockedByLinksReplacementSecondTry: migrating =======
                -- Scheduled 0 ReplaceBlockedByLinks jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:04 +0800."
                == 20201102073808 ScheduleBlockedByLinksReplacementSecondTry: migrated (0.0133s)

                == 20201102112206 RenameSitemapNamespace: migrating ===========================
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201102112206 RenameSitemapNamespace: migrated (0.0032s) ==================

                == 20201102114018 RemoveStorageSizeLimitFromApplicationSettings: migrating ====
                -- remove_column(:application_settings, :namespace_storage_size_limit)
                   -> 0.0013s
                == 20201102114018 RemoveStorageSizeLimitFromApplicationSettings: migrated (0.0013s)

                == 20201102152554 AddNotNullCheckOnIidOnDesignManangementDesigns: migrating ===
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE design_management_designs\nADD CONSTRAINT check_cfb92df01a\nCHECK ( iid IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE design_management_designs VALIDATE CONSTRAINT check_cfb92df01a;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201102152554 AddNotNullCheckOnIidOnDesignManangementDesigns: migrated (0.0086s)

                == 20201102152945 TruncateSecurityFindingsTable: migrating ====================
                == 20201102152945 TruncateSecurityFindingsTable: migrated (0.0000s) ===========

                == 20201102184743 AddIndexToIncidentIssuesOnProjectAndCreatedAt: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, [:project_id, :created_at], {:where=>"issue_type = 1", :name=>"index_issues_on_project_id_and_created_at_issue_type_incident", :algorithm=>:concurrently})
                   -> 0.0107s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, [:project_id, :created_at], {:where=>"issue_type = 1", :name=>"index_issues_on_project_id_and_created_at_issue_type_incident", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issues)
                   -> 0.0107s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issues, {:algorithm=>:concurrently, :name=>"index_issues_project_id_issue_type_incident"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201102184743 AddIndexToIncidentIssuesOnProjectAndCreatedAt: migrated (0.0302s)

                == 20201103013242 RemoveTerraformStateVerificationColumns: migrating ==========
                -- transaction()
                -- remove_column(:terraform_states, :verification_retry_at, :datetime_with_timezone)
                   -> 0.0006s
                -- remove_column(:terraform_states, :verified_at, :datetime_with_timezone)
                   -> 0.0003s
                -- remove_column(:terraform_states, :verification_retry_count, :integer, {:limit=>2})
                   -> 0.0003s
                -- remove_column(:terraform_states, :verification_checksum, :binary, {:using=>"verification_checksum::bytea"})
                   -> 0.0003s
                -- remove_column(:terraform_states, :verification_failure, :text)
                   -> 0.0004s
                   -> 0.0027s
                == 20201103013242 RemoveTerraformStateVerificationColumns: migrated (0.0028s) =

                == 20201103045515 AddIssuableMetricImages: migrating ==========================
                -- table_exists?(:issuable_metric_images)
                   -> 0.0005s
                -- create_table(:issuable_metric_images)
                   -> 0.0081s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE issuable_metric_images\nADD CONSTRAINT check_5b3011e234\nCHECK ( char_length(url) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0003s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE issuable_metric_images VALIDATE CONSTRAINT check_5b3011e234;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE issuable_metric_images\nADD CONSTRAINT check_7ed527062f\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE issuable_metric_images VALIDATE CONSTRAINT check_7ed527062f;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201103045515 AddIssuableMetricImages: migrated (0.0212s) =================

                == 20201103095752 AddIssuesClosedAtIndex: migrating ===========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, [:project_id, :closed_at], {:algorithm=>:concurrently})
                   -> 0.0106s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, [:project_id, :closed_at], {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201103095752 AddIssuesClosedAtIndex: migrated (0.0153s) ==================

                == 20201103110018 ScheduleMergeRequestCleanupSchedulesBackfill: migrating =====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, :id, {:name=>"merge_requests_state_id_temp_index", :where=>"state_id IN (2, 3)", :algorithm=>:concurrently})
                   -> 0.0109s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, :id, {:name=>"merge_requests_state_id_temp_index", :where=>"state_id IN (2, 3)", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- Scheduled 1 BackfillMergeRequestCleanupSchedules jobs with a maximum of 10000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:26:04 +0800."
                == 20201103110018 ScheduleMergeRequestCleanupSchedulesBackfill: migrated (0.0643s)

                == 20201103171537 AddIndexActiveBillableUsersToUser: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:users, :id, {:name=>"active_billable_users", :where=>"(state = 'active' AND (user_type is NULL or user_type in (NULL, 6, 4))) and ((users.user_type IS NULL) OR (users.user_type <> ALL ('{2,6,1,3,7,8}')))", :algorithm=>:concurrently})
                   -> 0.0091s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:users, :id, {:name=>"active_billable_users", :where=>"(state = 'active' AND (user_type is NULL or user_type in (NULL, 6, 4))) and ((users.user_type IS NULL) OR (users.user_type <> ALL ('{2,6,1,3,7,8}')))", :algorithm=>:concurrently})
                   -> 0.0058s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20201103171537 AddIndexActiveBillableUsersToUser: migrated (0.0159s) =======

                == 20201103184333 CreatePackagesPackageFileBuildInfos: migrating ==============
                -- table_exists?(:packages_package_file_build_infos)
                   -> 0.0006s
                -- create_table(:packages_package_file_build_infos)
                   -> 0.0095s
                == 20201103184333 CreatePackagesPackageFileBuildInfos: migrated (0.0114s) =====

                == 20201103192526 SchedulePopulateHasVulnerabilities: migrating ===============
                == 20201103192526 SchedulePopulateHasVulnerabilities: migrated (0.0035s) ======

                == 20201103202213 UpdatePackagesBuildInfosIndex: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_build_infos, :package_id, {:name=>"idx_packages_build_infos_on_package_id", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_build_infos, :package_id, {:name=>"idx_packages_build_infos_on_package_id", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:packages_build_infos)
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:packages_build_infos, {:algorithm=>:concurrently, :name=>"index_packages_build_infos_on_package_id"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201103202213 UpdatePackagesBuildInfosIndex: migrated (0.0121s) ===========

                == 20201104124300 EnsureNamespaceSettingsCreation: migrating ==================
                == 20201104124300 EnsureNamespaceSettingsCreation: migrated (0.0530s) =========

                == 20201104142036 AddIndexToMergeRequestMetricsTargetProjectId: migrating =====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_metrics, [:target_project_id, :merged_at, :created_at], {:where=>"merged_at > created_at", :name=>"index_mr_metrics_on_target_project_id_merged_at_time_to_merge", :algorithm=>:concurrently})
                   -> 0.0048s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_metrics, [:target_project_id, :merged_at, :created_at], {:where=>"merged_at > created_at", :name=>"index_mr_metrics_on_target_project_id_merged_at_time_to_merge", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201104142036 AddIndexToMergeRequestMetricsTargetProjectId: migrated (0.0096s)

                == 20201104204739 CreateBulkImportTrackers: migrating =========================
                -- table_exists?(:bulk_import_trackers)
                   -> 0.0005s
                -- create_table(:bulk_import_trackers)
                   -> 0.0093s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers\nADD CONSTRAINT check_next_page_requirement\nCHECK ( (has_next_page IS FALSE or next_page IS NOT NULL) )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers VALIDATE CONSTRAINT check_next_page_requirement;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers\nADD CONSTRAINT check_2d45cae629\nCHECK ( char_length(relation) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers VALIDATE CONSTRAINT check_2d45cae629;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers\nADD CONSTRAINT check_40aeaa600b\nCHECK ( char_length(next_page) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers VALIDATE CONSTRAINT check_40aeaa600b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201104204739 CreateBulkImportTrackers: migrated (0.0274s) ================

                == 20201105021637 AddUploadsSizeToProjectStatistics: migrating ================
                -- add_column(:project_statistics, :uploads_size, :bigint, {:default=>0, :null=>false})
                   -> 0.0011s
                == 20201105021637 AddUploadsSizeToProjectStatistics: migrated (0.0011s) =======

                == 20201105024127 AddUploadsSizeToNamespaceRootStorageStatistics: migrating ===
                -- add_column(:namespace_root_storage_statistics, :uploads_size, :bigint, {:default=>0, :null=>false})
                   -> 0.0009s
                == 20201105024127 AddUploadsSizeToNamespaceRootStorageStatistics: migrated (0.0010s)

                == 20201105135051 ChangeDefaultValueOfCiMaxArtifactSizeLsifOfPlanLimitsFrom20To100: migrating
                -- change_column_default(:plan_limits, :ci_max_artifact_size_lsif, 100)
                   -> 0.0037s
                -- execute("UPDATE plan_limits SET ci_max_artifact_size_lsif = 100 WHERE ci_max_artifact_size_lsif = 20")
                   -> 0.0004s
                == 20201105135051 ChangeDefaultValueOfCiMaxArtifactSizeLsifOfPlanLimitsFrom20To100: migrated (0.0054s)

                == 20201105143211 AddVulnerabilitiesEnabledAndIssuetypeToJiraTrackerData: migrating
                -- add_column(:jira_tracker_data, :vulnerabilities_issuetype, :text)
                   -> 0.0006s
                -- add_column(:jira_tracker_data, :vulnerabilities_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0007s
                == 20201105143211 AddVulnerabilitiesEnabledAndIssuetypeToJiraTrackerData: migrated (0.0015s)

                == 20201105143312 AddTextLimitToJiraTrackerDataIssuetype: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE jira_tracker_data\nADD CONSTRAINT check_0bf84b76e9\nCHECK ( char_length(vulnerabilities_issuetype) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE jira_tracker_data VALIDATE CONSTRAINT check_0bf84b76e9;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201105143312 AddTextLimitToJiraTrackerDataIssuetype: migrated (0.0051s) ==

                == 20201106082723 AddMergeRequestJiraReferenceIndexes: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :iid], {:name=>"index_merge_requests_on_target_project_id_and_iid_jira_title", :using=>:btree, :where=>"(merge_requests.title)::text ~ '[A-Z][A-Z_0-9]+-\\d+'::text", :algorithm=>:concurrently})
                   -> 0.0108s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, [:target_project_id, :iid], {:name=>"index_merge_requests_on_target_project_id_and_iid_jira_title", :using=>:btree, :where=>"(merge_requests.title)::text ~ '[A-Z][A-Z_0-9]+-\\d+'::text", :algorithm=>:concurrently})
                   -> 0.0046s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :iid], {:name=>"index_merge_requests_on_target_project_id_iid_jira_description", :using=>:btree, :where=>"(merge_requests.description)::text ~ '[A-Z][A-Z_0-9]+-\\d+'::text", :algorithm=>:concurrently})
                   -> 0.0113s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, [:target_project_id, :iid], {:name=>"index_merge_requests_on_target_project_id_iid_jira_description", :using=>:btree, :where=>"(merge_requests.description)::text ~ '[A-Z][A-Z_0-9]+-\\d+'::text", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201106082723 AddMergeRequestJiraReferenceIndexes: migrated (0.0340s) =====

                == 20201106134139 AddPipelinesCreatedIndex: migrating =========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:project_id, :status, :created_at], {:name=>:index_ci_pipelines_on_project_id_and_status_and_created_at, :algorithm=>:concurrently})
                   -> 0.0088s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:project_id, :status, :created_at], {:name=>:index_ci_pipelines_on_project_id_and_status_and_created_at, :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201106134139 AddPipelinesCreatedIndex: migrated (0.0134s) ================

                == 20201106134950 DeduplicateEpicIids: migrating ==============================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:epics, [:group_id, :iid], {:unique=>true, :name=>"index_epics_on_group_id_and_iid", :algorithm=>:concurrently})
                   -> 0.0067s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0004s
                -- add_index(:epics, [:group_id, :iid], {:unique=>true, :name=>"index_epics_on_group_id_and_iid", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201106134950 DeduplicateEpicIids: migrated (0.0121s) =====================

                == 20201106135608 RemoveRedundantPipelinesIndex: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_pipelines)
                   -> 0.0095s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_pipelines, {:algorithm=>:concurrently, :name=>:index_ci_pipelines_on_project_id_and_created_at})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201106135608 RemoveRedundantPipelinesIndex: migrated (0.0132s) ===========

                == 20201106193452 AddConvertedAtToExperimentUsers: migrating ==================
                -- add_column(:experiment_users, :converted_at, :datetime_with_timezone)
                   -> 0.0007s
                == 20201106193452 AddConvertedAtToExperimentUsers: migrated (0.0007s) =========

                == 20201107032257 AddDefaultTrueRequireAdminApprovalAfterUserSignupToApplicationSettings: migrating
                -- change_column_default(:application_settings, :require_admin_approval_after_user_signup, {:from=>false, :to=>true})
                   -> 0.0572s
                == 20201107032257 AddDefaultTrueRequireAdminApprovalAfterUserSignupToApplicationSettings: migrated (0.0573s)

                == 20201108134919 AddFindingFingerprintTable: migrating =======================
                -- create_table(:vulnerability_finding_fingerprints)
                   -> 0.0142s
                == 20201108134919 AddFindingFingerprintTable: migrated (0.0169s) ==============

                == 20201109080645 CreateVulnerabilityRemediationsTable: migrating =============
                -- create_table(:vulnerability_remediations, {:if_not_exists=>true})
                   -> 0.0046s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0008s
                -- execute("ALTER TABLE vulnerability_remediations\nADD CONSTRAINT check_ac0ccabff3\nCHECK ( char_length(summary) <= 200 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_remediations VALIDATE CONSTRAINT check_ac0ccabff3;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_remediations\nADD CONSTRAINT check_fe3325e3ba\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_remediations VALIDATE CONSTRAINT check_fe3325e3ba;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201109080645 CreateVulnerabilityRemediationsTable: migrated (0.0172s) ====

                == 20201109080646 CreateVulnerabilityFindingsRemediationsJoinTable: migrating =
                -- create_table(:vulnerability_findings_remediations)
                   -> 0.0105s
                == 20201109080646 CreateVulnerabilityFindingsRemediationsJoinTable: migrated (0.0106s)

                == 20201109114603 ScheduleRemoveInaccessibleEpicTodos: migrating ==============
                == 20201109114603 ScheduleRemoveInaccessibleEpicTodos: migrated (0.0001s) =====

                == 20201109144634 AddRegionFieldToAwsRole: migrating ==========================
                -- column_exists?(:aws_roles, :region)
                   -> 0.0011s
                -- add_column(:aws_roles, :region, :text)
                   -> 0.0011s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0003s
                -- execute("ALTER TABLE aws_roles\nADD CONSTRAINT check_57adedab55\nCHECK ( char_length(region) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0012s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE aws_roles VALIDATE CONSTRAINT check_57adedab55;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201109144634 AddRegionFieldToAwsRole: migrated (0.0089s) =================

                == 20201109180311 AddSecretDetectionRevocationTokenTypesApplicationSettings: migrating
                -- add_column(:application_settings, :secret_detection_revocation_token_types_url, :text, {:null=>true})
                   -> 0.0011s
                == 20201109180311 AddSecretDetectionRevocationTokenTypesApplicationSettings: migrated (0.0011s)

                == 20201109184023 AddTextLimitToSecretDetectionRevocationTokenTypesApplicationSettings: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_a5704163cc\nCHECK ( char_length(secret_detection_revocation_token_types_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_a5704163cc;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201109184023 AddTextLimitToSecretDetectionRevocationTokenTypesApplicationSettings: migrated (0.0076s)

                == 20201110035029 CreatedIndexForVulnerabilityOccurrencesOnProjectFingerprint: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_occurrences, :project_fingerprint, {:name=>"index_vulnerability_occurrences_on_project_fingerprint", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_occurrences, :project_fingerprint, {:name=>"index_vulnerability_occurrences_on_project_fingerprint", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201110035029 CreatedIndexForVulnerabilityOccurrencesOnProjectFingerprint: migrated (0.0097s)

                == 20201110110454 ExtendPostgresIndexesView: migrating ========================
                -- execute("DROP VIEW postgres_indexes;\n\nCREATE VIEW postgres_indexes AS\nSELECT (pg_namespace.nspname::text || '.'::text) || pg_class.relname::text AS identifier,\n  pg_index.indexrelid,\n  pg_namespace.nspname AS schema,\n  pg_class.relname AS name,\n  pg_index.indisunique AS \"unique\",\n  pg_index.indisvalid AS valid_index,\n  pg_class.relispartition AS partitioned,\n  pg_index.indisexclusion AS exclusion,\n  pg_index.indexprs IS NOT NULL as expression,\n  pg_index.indpred IS NOT NULL as partial,\n  pg_indexes.indexdef AS definition,\n  pg_relation_size(pg_class.oid::regclass) AS ondisk_size_bytes\nFROM pg_index\n  JOIN pg_class ON pg_class.oid = pg_index.indexrelid\n  JOIN pg_namespace ON pg_class.relnamespace = pg_namespace.oid\n  JOIN pg_indexes ON pg_class.relname = pg_indexes.indexname\nWHERE pg_namespace.nspname <> 'pg_catalog'::name\n  AND (pg_namespace.nspname = ANY (ARRAY[\"current_schema\"(), 'gitlab_partitions_dynamic'::name, 'gitlab_partitions_static'::name]));\n")
                   -> 0.0028s
                == 20201110110454 ExtendPostgresIndexesView: migrated (0.0028s) ===============

                == 20201110133629 ChangeIndexMrMetricsTargetProjectId: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_metrics, [:target_project_id, :merged_at, :id], {:order=>{:merged_at=>"DESC NULLS LAST", :id=>"DESC"}, :name=>"index_mr_metrics_on_target_project_id_merged_at_nulls_last", :algorithm=>:concurrently})
                   -> 0.0074s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_metrics, [:target_project_id, :merged_at, :id], {:order=>{:merged_at=>"DESC NULLS LAST", :id=>"DESC"}, :name=>"index_mr_metrics_on_target_project_id_merged_at_nulls_last", :algorithm=>:concurrently})
                   -> 0.0051s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_request_metrics)
                   -> 0.0068s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_request_metrics, {:algorithm=>:concurrently, :name=>"index_merge_request_metrics_on_target_project_id_merged_at"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201110133629 ChangeIndexMrMetricsTargetProjectId: migrated (0.0254s) =====

                == 20201110161542 CleanupTransferedProjectsSharedRunners: migrating ===========
                -- Scheduled 1 ResetSharedRunnersForTransferredProjects jobs with a maximum of 25000 records per batch and an interval of 180 seconds.

                The migration is expected to take at least 180 seconds. Expect all jobs to have completed after 2022-03-18 14:27:05 +0800."
                == 20201110161542 CleanupTransferedProjectsSharedRunners: migrated (0.0976s) ==

                == 20201110221400 CreateExperimentSubjects: migrating =========================
                -- create_table(:experiment_subjects)
                   -> 0.0165s
                -- execute("      ALTER TABLE experiment_subjects ADD CONSTRAINT chk_has_one_subject CHECK (num_nonnulls(user_id, group_id, project_id) = 1);\n")
                   -> 0.0006s
                == 20201110221400 CreateExperimentSubjects: migrated (0.0172s) ================

                == 20201111051655 AddForeignKeyToExperimentSubjectsOnUser: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:experiment_subjects)
                   -> 0.0039s
                -- execute("ALTER TABLE experiment_subjects\nADD CONSTRAINT fk_dfc3e211d4\nFOREIGN KEY (user_id)\nREFERENCES users (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE experiment_subjects VALIDATE CONSTRAINT fk_dfc3e211d4;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201111051655 AddForeignKeyToExperimentSubjectsOnUser: migrated (0.0102s) =

                == 20201111051847 AddForeignKeyToExperimentSubjectsOnGroup: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:experiment_subjects)
                   -> 0.0037s
                -- execute("ALTER TABLE experiment_subjects\nADD CONSTRAINT fk_88489af1b1\nFOREIGN KEY (group_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0008s
                -- execute("ALTER TABLE experiment_subjects VALIDATE CONSTRAINT fk_88489af1b1;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201111051847 AddForeignKeyToExperimentSubjectsOnGroup: migrated (0.0091s)

                == 20201111051904 AddForeignKeyToExperimentSubjectsOnProject: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:experiment_subjects)
                   -> 0.0036s
                -- execute("ALTER TABLE experiment_subjects\nADD CONSTRAINT fk_ccc28f8ceb\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE experiment_subjects VALIDATE CONSTRAINT fk_ccc28f8ceb;")
                   -> 0.0022s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201111051904 AddForeignKeyToExperimentSubjectsOnProject: migrated (0.0103s)

                == 20201111100136 CreateAnalyticsDevopsAdoptionSnapshots: migrating ===========
                -- create_table(:analytics_devops_adoption_snapshots)
                   -> 0.0074s
                == 20201111100136 CreateAnalyticsDevopsAdoptionSnapshots: migrated (0.0075s) ==

                == 20201111110318 AddCloudLicenseAuthTokenToSettings: migrating ===============
                -- add_column(:application_settings, :encrypted_cloud_license_auth_token, :text)
                   -> 0.0011s
                -- add_column(:application_settings, :encrypted_cloud_license_auth_token_iv, :text)
                   -> 0.0006s
                == 20201111110318 AddCloudLicenseAuthTokenToSettings: migrated (0.0028s) ======

                == 20201111110918 AddCloudLicenseAuthTokenApplicationSettingsTextLimit: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_ef6176834f\nCHECK ( char_length(encrypted_cloud_license_auth_token_iv) <= 255 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_ef6176834f;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201111110918 AddCloudLicenseAuthTokenApplicationSettingsTextLimit: migrated (0.0082s)

                == 20201111115414 CreateIncidentManagementOncallSchedules: migrating ==========
                -- table_exists?(:incident_management_oncall_schedules)
                   -> 0.0004s
                -- create_table(:incident_management_oncall_schedules)
                   -> 0.0109s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_schedules\nADD CONSTRAINT check_e6ef43a664\nCHECK ( char_length(name) <= 200 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_schedules VALIDATE CONSTRAINT check_e6ef43a664;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_schedules\nADD CONSTRAINT check_7ed1fd5aa7\nCHECK ( char_length(description) <= 1000 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_schedules VALIDATE CONSTRAINT check_7ed1fd5aa7;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_schedules\nADD CONSTRAINT check_cc77cbb103\nCHECK ( char_length(timezone) <= 100 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_schedules VALIDATE CONSTRAINT check_cc77cbb103;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201111115414 CreateIncidentManagementOncallSchedules: migrated (0.0339s) =

                == 20201111145317 AddRelationToIndexesView: migrating =========================
                -- execute("DROP VIEW postgres_indexes;\n\nCREATE VIEW postgres_indexes AS\nSELECT (pg_namespace.nspname::text || '.'::text) || pg_class.relname::text AS identifier,\n  pg_index.indexrelid,\n  pg_namespace.nspname AS schema,\n  pg_class.relname AS name,\n  pg_indexes.tablename,\n  pg_index.indisunique AS \"unique\",\n  pg_index.indisvalid AS valid_index,\n  pg_class.relispartition AS partitioned,\n  pg_index.indisexclusion AS exclusion,\n  pg_index.indexprs IS NOT NULL as expression,\n  pg_index.indpred IS NOT NULL as partial,\n  pg_indexes.indexdef AS definition,\n  pg_relation_size(pg_class.oid::regclass) AS ondisk_size_bytes\nFROM pg_index\n  JOIN pg_class ON pg_class.oid = pg_index.indexrelid\n  JOIN pg_namespace ON pg_class.relnamespace = pg_namespace.oid\n  JOIN pg_indexes ON pg_class.relname = pg_indexes.indexname\nWHERE pg_namespace.nspname <> 'pg_catalog'::name\n  AND (pg_namespace.nspname = ANY (ARRAY[\"current_schema\"(), 'gitlab_partitions_dynamic'::name, 'gitlab_partitions_static'::name]));\n")
                   -> 0.0026s
                == 20201111145317 AddRelationToIndexesView: migrated (0.0027s) ================

                == 20201111152859 AddMissingExpressionIndexes: migrating ======================
                -- index_name_exists?(:namespaces, :index_on_namespaces_lower_name)
                   -> 0.0010s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:namespaces, "LOWER(name)", {:name=>:index_on_namespaces_lower_name, :algorithm=>:concurrently})
                   -> 0.0087s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:namespaces, "LOWER(name)", {:name=>:index_on_namespaces_lower_name, :algorithm=>:concurrently})
                   -> 0.0049s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- index_name_exists?(:namespaces, :index_on_namespaces_lower_path)
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:namespaces, "LOWER(path)", {:name=>:index_on_namespaces_lower_path, :algorithm=>:concurrently})
                   -> 0.0087s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:namespaces, "LOWER(path)", {:name=>:index_on_namespaces_lower_path, :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- index_name_exists?(:projects, :index_on_projects_lower_path)
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, "LOWER(path)", {:name=>:index_on_projects_lower_path, :algorithm=>:concurrently})
                   -> 0.0237s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, "LOWER(path)", {:name=>:index_on_projects_lower_path, :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- index_name_exists?(:routes, :index_on_routes_lower_path)
                   -> 0.0016s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:routes, "LOWER(path)", {:name=>:index_on_routes_lower_path, :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:routes, "LOWER(path)", {:name=>:index_on_routes_lower_path, :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- index_name_exists?(:users, :index_on_users_lower_username)
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:users, "LOWER(username)", {:name=>:index_on_users_lower_username, :algorithm=>:concurrently})
                   -> 0.0113s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0010s
                -- add_index(:users, "LOWER(username)", {:name=>:index_on_users_lower_username, :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- index_name_exists?(:users, :index_on_users_lower_email)
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:users, "LOWER(email)", {:name=>:index_on_users_lower_email, :algorithm=>:concurrently})
                   -> 0.0120s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:users, "LOWER(email)", {:name=>:index_on_users_lower_email, :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- execute("ANALYZE namespaces")
                   -> 0.0021s
                -- execute("ANALYZE projects")
                   -> 0.0965s
                -- execute("ANALYZE routes")
                   -> 0.0023s
                -- execute("ANALYZE users")
                   -> 0.0026s
                == 20201111152859 AddMissingExpressionIndexes: migrated (0.2126s) =============

                == 20201112130710 ScheduleRemoveDuplicateVulnerabilitiesFindings: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_occurrences, [:project_id, :report_type, :location_fingerprint, :primary_identifier_id, :id], {:name=>"tmp_idx_deduplicate_vulnerability_occurrences", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_occurrences, [:project_id, :report_type, :location_fingerprint, :primary_identifier_id, :id], {:name=>"tmp_idx_deduplicate_vulnerability_occurrences", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- Scheduling RemoveDuplicateVulnerabilitiesFindings jobs
                -- Scheduled 0 RemoveDuplicateVulnerabilitiesFindings jobs with a maximum of 5000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:05 +0800."
                == 20201112130710 ScheduleRemoveDuplicateVulnerabilitiesFindings: migrated (0.0241s)

                == 20201112130715 ScheduleRecalculateUuidOnVulnerabilitiesOccurrences: migrating
                -- Scheduling RecalculateVulnerabilitiesOccurrencesUuid jobs
                -- Scheduled 0 RecalculateVulnerabilitiesOccurrencesUuid jobs with a maximum of 2500 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:05 +0800."
                == 20201112130715 ScheduleRecalculateUuidOnVulnerabilitiesOccurrences: migrated (0.0035s)

                == 20201112132808 CreateBulkImportFailures: migrating =========================
                -- table_exists?(:bulk_import_failures)
                   -> 0.0005s
                -- create_table(:bulk_import_failures)
                   -> 0.0111s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0012s
                -- execute("ALTER TABLE bulk_import_failures\nADD CONSTRAINT check_053d65c7a4\nCHECK ( char_length(pipeline_class) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures VALIDATE CONSTRAINT check_053d65c7a4;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures\nADD CONSTRAINT check_c7dba8398e\nCHECK ( char_length(exception_class) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures VALIDATE CONSTRAINT check_c7dba8398e;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures\nADD CONSTRAINT check_6eca8f972e\nCHECK ( char_length(exception_message) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures VALIDATE CONSTRAINT check_6eca8f972e;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures\nADD CONSTRAINT check_e787285882\nCHECK ( char_length(correlation_id_value) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures VALIDATE CONSTRAINT check_e787285882;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201112132808 CreateBulkImportFailures: migrated (0.0419s) ================

                == 20201112145311 AddIndexOnShaForInitialDeployments: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:environment_id, :status, :sha], {:name=>"index_deployments_on_environment_status_sha", :algorithm=>:concurrently})
                   -> 0.0102s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:environment_id, :status, :sha], {:name=>"index_deployments_on_environment_status_sha", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:deployments)
                   -> 0.0115s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0016s
                -- remove_index(:deployments, {:algorithm=>:concurrently, :name=>"index_deployments_on_environment_id_and_status"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201112145311 AddIndexOnShaForInitialDeployments: migrated (0.0309s) ======

                == 20201112173532 AddVerificationStateToPackageFiles: migrating ===============
                -- add_column(:packages_package_files, :verification_state, :integer, {:default=>0, :limit=>2, :null=>false})
                   -> 0.0011s
                -- add_column(:packages_package_files, :verification_started_at, :datetime_with_timezone)
                   -> 0.0004s
                == 20201112173532 AddVerificationStateToPackageFiles: migrated (0.0015s) ======

                == 20201112173911 AddIndexOnVerificationStateOnPackageFiles: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_package_files, :verification_state, {:name=>"index_packages_package_files_on_verification_state", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_package_files, :verification_state, {:name=>"index_packages_package_files_on_verification_state", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0011s
                == 20201112173911 AddIndexOnVerificationStateOnPackageFiles: migrated (0.0092s)

                == 20201112195322 ReseedMergeTrainsEnabled: migrating =========================
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"project_ci_cd_settings\" WHERE \"project_ci_cd_settings\".\"merge_pipelines_enabled\" = TRUE")
                   -> 0.0017s
                == 20201112195322 ReseedMergeTrainsEnabled: migrated (0.0039s) ================

                == 20201112215028 AddPartitionedAuditEventIndexes: migrating ==================
                -- index_name_exists?(:audit_events_part_5fc467ac26, "analytics_index_audit_events_part_on_created_at_and_author_id")
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_000000", [:created_at, :author_id], {:name=>"index_2177f0dd80", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_000000", [:created_at, :author_id], {:name=>"index_2177f0dd80", :algorithm=>:concurrently})
                   -> 0.0049s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201812", [:created_at, :author_id], {:name=>"index_00a6df6e20", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201812", [:created_at, :author_id], {:name=>"index_00a6df6e20", :algorithm=>:concurrently})
                   -> 0.0044s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201901", [:created_at, :author_id], {:name=>"index_8090507f42", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201901", [:created_at, :author_id], {:name=>"index_8090507f42", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201902", [:created_at, :author_id], {:name=>"index_6f9e14fa5c", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201902", [:created_at, :author_id], {:name=>"index_6f9e14fa5c", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201903", [:created_at, :author_id], {:name=>"index_2fca58e5ee", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201903", [:created_at, :author_id], {:name=>"index_2fca58e5ee", :algorithm=>:concurrently})
                   -> 0.0171s
                -- execute("RESET ALL")
                   -> 0.0015s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201904", [:created_at, :author_id], {:name=>"index_756154d033", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201904", [:created_at, :author_id], {:name=>"index_756154d033", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201905", [:created_at, :author_id], {:name=>"index_1e963611e8", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201905", [:created_at, :author_id], {:name=>"index_1e963611e8", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201906", [:created_at, :author_id], {:name=>"index_010c2ced12", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201906", [:created_at, :author_id], {:name=>"index_010c2ced12", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201907", [:created_at, :author_id], {:name=>"index_59a37f2578", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201907", [:created_at, :author_id], {:name=>"index_59a37f2578", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0011s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201908", [:created_at, :author_id], {:name=>"index_de344ff368", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201908", [:created_at, :author_id], {:name=>"index_de344ff368", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201909", [:created_at, :author_id], {:name=>"index_cde486437b", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201909", [:created_at, :author_id], {:name=>"index_cde486437b", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201910", [:created_at, :author_id], {:name=>"index_593de3897a", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201910", [:created_at, :author_id], {:name=>"index_593de3897a", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201911", [:created_at, :author_id], {:name=>"index_3f19df0d20", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201911", [:created_at, :author_id], {:name=>"index_3f19df0d20", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201912", [:created_at, :author_id], {:name=>"index_4decde059d", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201912", [:created_at, :author_id], {:name=>"index_4decde059d", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202001", [:created_at, :author_id], {:name=>"index_622b88bc0e", :algorithm=>:concurrently})
                   -> 0.0012s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202001", [:created_at, :author_id], {:name=>"index_622b88bc0e", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202002", [:created_at, :author_id], {:name=>"index_c65787cbc9", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202002", [:created_at, :author_id], {:name=>"index_c65787cbc9", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202003", [:created_at, :author_id], {:name=>"index_e2e7acc2a2", :algorithm=>:concurrently})
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0005s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202003", [:created_at, :author_id], {:name=>"index_e2e7acc2a2", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202004", [:created_at, :author_id], {:name=>"index_270af5553b", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202004", [:created_at, :author_id], {:name=>"index_270af5553b", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202005", [:created_at, :author_id], {:name=>"index_b50688a64e", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202005", [:created_at, :author_id], {:name=>"index_b50688a64e", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202006", [:created_at, :author_id], {:name=>"index_a8f44534d9", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202006", [:created_at, :author_id], {:name=>"index_a8f44534d9", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202007", [:created_at, :author_id], {:name=>"index_27d63a2c0c", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202007", [:created_at, :author_id], {:name=>"index_27d63a2c0c", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202008", [:created_at, :author_id], {:name=>"index_e0bb0134d4", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202008", [:created_at, :author_id], {:name=>"index_e0bb0134d4", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202009", [:created_at, :author_id], {:name=>"index_06fd6e7588", :algorithm=>:concurrently})
                   -> 0.0014s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202009", [:created_at, :author_id], {:name=>"index_06fd6e7588", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202010", [:created_at, :author_id], {:name=>"index_baad10be45", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202010", [:created_at, :author_id], {:name=>"index_baad10be45", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202011", [:created_at, :author_id], {:name=>"index_82131632c7", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202011", [:created_at, :author_id], {:name=>"index_82131632c7", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202012", [:created_at, :author_id], {:name=>"index_e84582b5f5", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202012", [:created_at, :author_id], {:name=>"index_e84582b5f5", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202101", [:created_at, :author_id], {:name=>"index_309cb73874", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202101", [:created_at, :author_id], {:name=>"index_309cb73874", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0010s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202102", [:created_at, :author_id], {:name=>"index_028162f283", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202102", [:created_at, :author_id], {:name=>"index_028162f283", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202103", [:created_at, :author_id], {:name=>"index_0043962d30", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202103", [:created_at, :author_id], {:name=>"index_0043962d30", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202104", [:created_at, :author_id], {:name=>"index_d42f8dc702", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202104", [:created_at, :author_id], {:name=>"index_d42f8dc702", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202105", [:created_at, :author_id], {:name=>"index_65b6207993", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202105", [:created_at, :author_id], {:name=>"index_65b6207993", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202106", [:created_at, :author_id], {:name=>"index_8e7615e858", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202106", [:created_at, :author_id], {:name=>"index_8e7615e858", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202107", [:created_at, :author_id], {:name=>"index_ffbc0ba6b7", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202107", [:created_at, :author_id], {:name=>"index_ffbc0ba6b7", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202108", [:created_at, :author_id], {:name=>"index_3385728d73", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202108", [:created_at, :author_id], {:name=>"index_3385728d73", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202109", [:created_at, :author_id], {:name=>"index_ea75765da7", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0013s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202109", [:created_at, :author_id], {:name=>"index_ea75765da7", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202110", [:created_at, :author_id], {:name=>"index_270ff8d03c", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202110", [:created_at, :author_id], {:name=>"index_270ff8d03c", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202111", [:created_at, :author_id], {:name=>"index_525e41a545", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0013s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202111", [:created_at, :author_id], {:name=>"index_525e41a545", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202112", [:created_at, :author_id], {:name=>"index_f4bd4f328f", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202112", [:created_at, :author_id], {:name=>"index_f4bd4f328f", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202201", [:created_at, :author_id], {:name=>"index_86aaf8acf5", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202201", [:created_at, :author_id], {:name=>"index_86aaf8acf5", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202202", [:created_at, :author_id], {:name=>"index_b71f948882", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202202", [:created_at, :author_id], {:name=>"index_b71f948882", :algorithm=>:concurrently})
                   -> 0.0046s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202203", [:created_at, :author_id], {:name=>"index_6e363130fb", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202203", [:created_at, :author_id], {:name=>"index_6e363130fb", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202204", [:created_at, :author_id], {:name=>"index_a6917fdb3b", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202204", [:created_at, :author_id], {:name=>"index_a6917fdb3b", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- add_index(:audit_events_part_5fc467ac26, [:created_at, :author_id], {:name=>"analytics_index_audit_events_part_on_created_at_and_author_id"})
                   -> 0.0070s
                -- index_name_exists?(:audit_events_part_5fc467ac26, "idx_audit_events_part_on_entity_id_desc_author_id_created_at")
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_000000", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_a71c4828a0", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_000000", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_a71c4828a0", :algorithm=>:concurrently})
                   -> 0.0051s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201812", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_96f8f2b7df", :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201812", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_96f8f2b7df", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201901", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_71f40fb936", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201901", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_71f40fb936", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201902", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_69934562fa", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201902", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_69934562fa", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201903", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_9529240828", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201903", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_9529240828", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201904", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c9cdca9b73", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201904", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c9cdca9b73", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0017s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201905", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_95757e15b0", :algorithm=>:concurrently})
                   -> 0.0018s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201905", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_95757e15b0", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201906", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c9f139b3c3", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201906", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c9f139b3c3", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0014s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201907", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_79f0d6370c", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201907", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_79f0d6370c", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201908", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_917f40f95e", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201908", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_917f40f95e", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0014s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201909", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_973cb39bf6", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201909", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_973cb39bf6", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201910", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_9ee35dba68", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201910", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_9ee35dba68", :algorithm=>:concurrently})
                   -> 0.0051s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201911", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b08ff7f339", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201911", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b08ff7f339", :algorithm=>:concurrently})
                   -> 0.0048s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201912", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_3b2ca505eb", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_201912", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_3b2ca505eb", :algorithm=>:concurrently})
                   -> 0.0049s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202001", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_a54d4eb6fa", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202001", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_a54d4eb6fa", :algorithm=>:concurrently})
                   -> 0.0054s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202002", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f247ec5d7f", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0017s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202002", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f247ec5d7f", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202003", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b3d82b51ce", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0016s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202003", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b3d82b51ce", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202004", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_e47503e788", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202004", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_e47503e788", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202005", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c0779d3320", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202005", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c0779d3320", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202006", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_96cd71374e", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202006", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_96cd71374e", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202007", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_19f070401a", :algorithm=>:concurrently})
                   -> 0.0031s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202007", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_19f070401a", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202008", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_0d898eabdc", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202008", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_0d898eabdc", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202009", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c6680de2f4", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202009", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c6680de2f4", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202010", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_7816baaa64", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202010", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_7816baaa64", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202011", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_63f4366262", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202011", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_63f4366262", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202012", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_acbdaa58e3", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202012", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_acbdaa58e3", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202101", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f4e81fb9cf", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202101", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f4e81fb9cf", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202102", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_0b3605a395", :algorithm=>:concurrently})
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202102", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_0b3605a395", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202103", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b070ce7dc9", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202103", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b070ce7dc9", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0015s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202104", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_1f4dff0a6d", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202104", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_1f4dff0a6d", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202105", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_d9a68fddcf", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202105", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_d9a68fddcf", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202106", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_7034de5b33", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202106", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_7034de5b33", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202107", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_5be8ca6a01", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202107", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_5be8ca6a01", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202108", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_abb17402ea", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202108", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_abb17402ea", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202109", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_e91cab0030", :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202109", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_e91cab0030", :algorithm=>:concurrently})
                   -> 0.0044s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202110", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_05bfc778e0", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202110", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_05bfc778e0", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202111", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f27cdaed00", :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0012s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202111", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f27cdaed00", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202112", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_4d4db266ca", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202112", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_4d4db266ca", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202201", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b7a043d440", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0014s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202201", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_b7a043d440", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202202", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c4d3377efd", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202202", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_c4d3377efd", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202203", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f4a2ad6448", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202203", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_f4a2ad6448", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202204", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_e145d61039", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.audit_events_part_5fc467ac26_202204", [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"index_e145d61039", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- add_index(:audit_events_part_5fc467ac26, [:entity_id, :entity_type, :id, :author_id, :created_at], {:order=>{:id=>:desc}, :name=>"idx_audit_events_part_on_entity_id_desc_author_id_created_at"})
                   -> 0.0072s
                == 20201112215028 AddPartitionedAuditEventIndexes: migrated (0.6475s) =========

                == 20201112215132 SwapPartitionedAuditEvents: migrating =======================
                -- execute("DROP TRIGGER IF EXISTS table_sync_trigger_ee39a25f9d ON audit_events")
                   -> 0.0020s
                -- execute("DROP FUNCTION IF EXISTS table_sync_function_2be879775d()")
                   -> 0.0003s
                -- replace_table("ALTER TABLE "audit_events"
                ALTER COLUMN "id" DROP DEFAULT;

                ALTER TABLE "audit_events_part_5fc467ac26"
                ALTER COLUMN "id" SET DEFAULT nextval('"audit_events_id_seq"'::regclass);

                ALTER SEQUENCE "audit_events_id_seq"
                OWNED BY "audit_events_part_5fc467ac26"."id";

                ALTER TABLE "audit_events"
                RENAME TO "audit_events_archived";

                ALTER TABLE "audit_events_archived"
                RENAME CONSTRAINT "audit_events_pkey" TO "audit_events_archived_pkey";

                ALTER TABLE "audit_events_part_5fc467ac26"
                RENAME TO "audit_events";

                ALTER TABLE "audit_events"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_pkey" TO "audit_events_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_000000"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_000000_pkey" TO "audit_events_000000_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_000000"
                RENAME TO "audit_events_000000";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201812"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201812_pkey" TO "audit_events_201812_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201812"
                RENAME TO "audit_events_201812";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201901"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201901_pkey" TO "audit_events_201901_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201901"
                RENAME TO "audit_events_201901";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201902"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201902_pkey" TO "audit_events_201902_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201902"
                RENAME TO "audit_events_201902";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201903"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201903_pkey" TO "audit_events_201903_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201903"
                RENAME TO "audit_events_201903";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201904"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201904_pkey" TO "audit_events_201904_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201904"
                RENAME TO "audit_events_201904";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201905"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201905_pkey" TO "audit_events_201905_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201905"
                RENAME TO "audit_events_201905";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201906"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201906_pkey" TO "audit_events_201906_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201906"
                RENAME TO "audit_events_201906";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201907"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201907_pkey" TO "audit_events_201907_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201907"
                RENAME TO "audit_events_201907";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201908"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201908_pkey" TO "audit_events_201908_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201908"
                RENAME TO "audit_events_201908";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201909"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201909_pkey" TO "audit_events_201909_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201909"
                RENAME TO "audit_events_201909";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201910"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201910_pkey" TO "audit_events_201910_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201910"
                RENAME TO "audit_events_201910";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201911"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201911_pkey" TO "audit_events_201911_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201911"
                RENAME TO "audit_events_201911";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201912"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_201912_pkey" TO "audit_events_201912_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_201912"
                RENAME TO "audit_events_201912";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202001"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202001_pkey" TO "audit_events_202001_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202001"
                RENAME TO "audit_events_202001";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202002"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202002_pkey" TO "audit_events_202002_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202002"
                RENAME TO "audit_events_202002";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202003"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202003_pkey" TO "audit_events_202003_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202003"
                RENAME TO "audit_events_202003";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202004"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202004_pkey" TO "audit_events_202004_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202004"
                RENAME TO "audit_events_202004";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202005"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202005_pkey" TO "audit_events_202005_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202005"
                RENAME TO "audit_events_202005";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202006"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202006_pkey" TO "audit_events_202006_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202006"
                RENAME TO "audit_events_202006";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202007"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202007_pkey" TO "audit_events_202007_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202007"
                RENAME TO "audit_events_202007";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202008"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202008_pkey" TO "audit_events_202008_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202008"
                RENAME TO "audit_events_202008";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202009"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202009_pkey" TO "audit_events_202009_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202009"
                RENAME TO "audit_events_202009";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202010"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202010_pkey" TO "audit_events_202010_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202010"
                RENAME TO "audit_events_202010";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202011"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202011_pkey" TO "audit_events_202011_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202011"
                RENAME TO "audit_events_202011";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202012"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202012_pkey" TO "audit_events_202012_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202012"
                RENAME TO "audit_events_202012";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202101"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202101_pkey" TO "audit_events_202101_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202101"
                RENAME TO "audit_events_202101";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202102"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202102_pkey" TO "audit_events_202102_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202102"
                RENAME TO "audit_events_202102";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202103"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202103_pkey" TO "audit_events_202103_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202103"
                RENAME TO "audit_events_202103";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202104"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202104_pkey" TO "audit_events_202104_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202104"
                RENAME TO "audit_events_202104";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202105"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202105_pkey" TO "audit_events_202105_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202105"
                RENAME TO "audit_events_202105";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202106"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202106_pkey" TO "audit_events_202106_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202106"
                RENAME TO "audit_events_202106";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202107"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202107_pkey" TO "audit_events_202107_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202107"
                RENAME TO "audit_events_202107";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202108"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202108_pkey" TO "audit_events_202108_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202108"
                RENAME TO "audit_events_202108";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202109"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202109_pkey" TO "audit_events_202109_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202109"
                RENAME TO "audit_events_202109";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202110"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202110_pkey" TO "audit_events_202110_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202110"
                RENAME TO "audit_events_202110";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202111"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202111_pkey" TO "audit_events_202111_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202111"
                RENAME TO "audit_events_202111";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202112"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202112_pkey" TO "audit_events_202112_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202112"
                RENAME TO "audit_events_202112";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202201"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202201_pkey" TO "audit_events_202201_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202201"
                RENAME TO "audit_events_202201";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202202"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202202_pkey" TO "audit_events_202202_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202202"
                RENAME TO "audit_events_202202";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202203"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202203_pkey" TO "audit_events_202203_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202203"
                RENAME TO "audit_events_202203";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202204"
                RENAME CONSTRAINT "audit_events_part_5fc467ac26_202204_pkey" TO "audit_events_202204_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."audit_events_part_5fc467ac26_202204"
                RENAME TO "audit_events_202204"")
                -- execute("CREATE  FUNCTION table_sync_function_2be879775d()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM audit_events_archived where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE audit_events_archived\n  SET author_id = NEW.author_id,\n    entity_id = NEW.entity_id,\n    entity_type = NEW.entity_type,\n    details = NEW.details,\n    created_at = NEW.created_at,\n    ip_address = NEW.ip_address,\n    author_name = NEW.author_name,\n    target_details = NEW.target_details,\n    entity_path = NEW.entity_path,\n    target_type = NEW.target_type,\n    target_id = NEW.target_id\n  WHERE audit_events_archived.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO audit_events_archived (id,\n    author_id,\n    entity_id,\n    entity_type,\n    details,\n    created_at,\n    ip_address,\n    author_name,\n    target_details,\n    entity_path,\n    target_type,\n    target_id)\n  VALUES (NEW.id,\n    NEW.author_id,\n    NEW.entity_id,\n    NEW.entity_type,\n    NEW.details,\n    NEW.created_at,\n    NEW.ip_address,\n    NEW.author_name,\n    NEW.target_details,\n    NEW.entity_path,\n    NEW.target_type,\n    NEW.target_id);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0005s
                -- execute("COMMENT ON FUNCTION table_sync_function_2be879775d IS 'Partitioning migration: table sync for audit_events table'")
                   -> 0.0002s
                -- current_schema()
                   -> 0.0002s
                -- execute("CREATE TRIGGER table_sync_trigger_ee39a25f9d\nAFTER INSERT OR UPDATE OR DELETE ON audit_events\nFOR EACH ROW\nEXECUTE FUNCTION table_sync_function_2be879775d()\n")
                   -> 0.0063s
                == 20201112215132 SwapPartitionedAuditEvents: migrated (0.0820s) ==============

                == 20201113105000 UpdateIndexSecureForApiFuzzingTelemetry: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:user_id, :name, :created_at], {:where=>"(((type)::text = 'Ci::Build'::text) AND ((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text, ('dast'::character varying)::text, ('dependency_scanning'::character varying)::text, ('license_management'::character varying)::text, ('license_scanning'::character varying)::text, ('sast'::character varying)::text, ('coverage_fuzzing'::character varying)::text, ('apifuzzer_fuzz'::character varying)::text, ('apifuzzer_fuzz_dnd'::character varying)::text, ('secret_detection'::character varying)::text])))", :name=>"index_secure_ci_builds_on_user_id_name_created_at", :algorithm=>:concurrently})
                   -> 0.0141s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:user_id, :name, :created_at], {:where=>"(((type)::text = 'Ci::Build'::text) AND ((name)::text = ANY (ARRAY[('container_scanning'::character varying)::text, ('dast'::character varying)::text, ('dependency_scanning'::character varying)::text, ('license_management'::character varying)::text, ('license_scanning'::character varying)::text, ('sast'::character varying)::text, ('coverage_fuzzing'::character varying)::text, ('apifuzzer_fuzz'::character varying)::text, ('apifuzzer_fuzz_dnd'::character varying)::text, ('secret_detection'::character varying)::text])))", :name=>"index_secure_ci_builds_on_user_id_name_created_at", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0137s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"index_secure_ci_builds_on_user_id_created_at_parser_features"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201113105000 UpdateIndexSecureForApiFuzzingTelemetry: migrated (0.0366s) =

                == 20201116090328 AddRegulatedToComplianceFrameworks: migrating ===============
                -- add_column(:compliance_management_frameworks, :regulated, :boolean, {:default=>true, :null=>false})
                   -> 0.0011s
                == 20201116090328 AddRegulatedToComplianceFrameworks: migrated (0.0011s) ======

                == 20201116211829 CreateUserPermissionExportUploads: migrating ================
                -- table_exists?(:user_permission_export_uploads)
                   -> 0.0018s
                -- create_table(:user_permission_export_uploads)
                   -> 0.0085s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE user_permission_export_uploads\nADD CONSTRAINT check_1956806648\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0006s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0007s
                -- execute("ALTER TABLE user_permission_export_uploads VALIDATE CONSTRAINT check_1956806648;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201116211829 CreateUserPermissionExportUploads: migrated (0.0197s) =======

                == 20201117054609 AddCloudLicenseEnabledToSettings: migrating =================
                -- add_column(:application_settings, :cloud_license_enabled, :boolean, {:null=>false, :default=>false})
                   -> 0.0028s
                == 20201117054609 AddCloudLicenseEnabledToSettings: migrated (0.0028s) ========

                == 20201117075742 ChangeWebauthnXidLength: migrating ==========================
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE webauthn_registrations\nADD CONSTRAINT check_e54008d9ce\nCHECK ( char_length(credential_xid) <= 340 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE webauthn_registrations VALIDATE CONSTRAINT check_e54008d9ce;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- execute("ALTER TABLE webauthn_registrations\nDROP CONSTRAINT IF EXISTS check_242f0cc65c\n")
                   -> 0.0004s
                == 20201117075742 ChangeWebauthnXidLength: migrated (0.0108s) =================

                == 20201117153333 AddIndexOnPackageSizeAndProjectIdToProjectStatistics: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_statistics, [:packages_size, :project_id], {:name=>"index_project_statistics_on_packages_size_and_project_id", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_statistics, [:packages_size, :project_id], {:name=>"index_project_statistics_on_packages_size_and_project_id", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201117153333 AddIndexOnPackageSizeAndProjectIdToProjectStatistics: migrated (0.0096s)

                == 20201117184334 AddIndexToProjectRepositoriesShardIdProjectId: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_repositories, [:shard_id, :project_id], {:algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_repositories, [:shard_id, :project_id], {:algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201117184334 AddIndexToProjectRepositoriesShardIdProjectId: migrated (0.0082s)

                == 20201117203224 AddIterationIdToBoardsTable: migrating ======================
                -- add_column(:boards, :iteration_id, :bigint)
                   -> 0.0005s
                == 20201117203224 AddIterationIdToBoardsTable: migrated (0.0035s) =============

                == 20201117213024 AddIterationIdIndexToBoardsTable: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:boards, :iteration_id, {:name=>"index_boards_on_iteration_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:boards, :iteration_id, {:name=>"index_boards_on_iteration_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201117213024 AddIterationIdIndexToBoardsTable: migrated (0.0081s) ========

                == 20201118093135 CreateNamespaceOnboardingActions: migrating =================
                -- create_table(:namespace_onboarding_actions)
                   -> 0.0082s
                == 20201118093135 CreateNamespaceOnboardingActions: migrated (0.0107s) ========

                == 20201119031515 AddIterationIdToLists: migrating ============================
                -- add_column(:lists, :iteration_id, :bigint)
                   -> 0.0020s
                == 20201119031515 AddIterationIdToLists: migrated (0.0020s) ===================

                == 20201119053603 AddIterationListsForeignKey: migrating ======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:lists, :iteration_id, {:name=>"index_lists_on_iteration_id", :algorithm=>:concurrently})
                   -> 0.0048s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:lists, :iteration_id, {:name=>"index_lists_on_iteration_id", :algorithm=>:concurrently})
                   -> 0.0052s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:lists)
                   -> 0.0037s
                -- execute("ALTER TABLE lists\nADD CONSTRAINT fk_30f2a831f4\nFOREIGN KEY (iteration_id)\nREFERENCES sprints (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0004s
                -- execute("ALTER TABLE lists VALIDATE CONSTRAINT fk_30f2a831f4;")
                   -> 0.0015s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201119053603 AddIterationListsForeignKey: migrated (0.0820s) =============

                == 20201119092319 ScheduleRepopulateHistoricalVulnerabilityStatistics: migrating
                == 20201119092319 ScheduleRepopulateHistoricalVulnerabilityStatistics: migrated (0.0138s)

                == 20201119125730 AddWebHooksServiceForeignKey: migrating =====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:web_hooks, :service_id, {:name=>"index_web_hooks_on_service_id", :algorithm=>:concurrently})
                   -> 0.0024s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:web_hooks, :service_id, {:name=>"index_web_hooks_on_service_id", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:web_hooks)
                   -> 0.0037s
                -- execute("ALTER TABLE web_hooks\nADD CONSTRAINT fk_d47999a98a\nFOREIGN KEY (service_id)\nREFERENCES services (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                == 20201119125730 AddWebHooksServiceForeignKey: migrated (0.0131s) ============

                == 20201119133534 AddPersonalAccessTokenPrefixToApplicationSetting: migrating =
                -- add_column(:application_settings, :personal_access_token_prefix, :text)
                   -> 0.0011s
                == 20201119133534 AddPersonalAccessTokenPrefixToApplicationSetting: migrated (0.0011s)

                == 20201119133604 AddTextLimitToApplicationSettingPersonalAccessTokenPrefix: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_718b4458ae\nCHECK ( char_length(personal_access_token_prefix) <= 20 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_718b4458ae;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201119133604 AddTextLimitToApplicationSettingPersonalAccessTokenPrefix: migrated (0.0060s)

                == 20201119162801 ChangeServicesInheritFromIdForeignKey: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:services)
                   -> 0.0036s
                -- execute("ALTER TABLE services\nADD CONSTRAINT fk_services_inherit_from_id\nFOREIGN KEY (inherit_from_id)\nREFERENCES services (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE services VALIDATE CONSTRAINT fk_services_inherit_from_id;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- foreign_keys(:services)
                   -> 0.0040s
                -- remove_foreign_key(:services, {:name=>"fk_868a8e7ad6"})
                   -> 0.0049s
                == 20201119162801 ChangeServicesInheritFromIdForeignKey: migrated (0.0166s) ===

                == 20201119164605 AddChecksumIntoVulnerabilityRemediations: migrating =========
                -- add_column(:vulnerability_remediations, :checksum, :binary, {:null=>false, :comment=>"Stores the SHA256 checksum of the attached diff file"})
                   -> 0.0009s
                -- add_index(:vulnerability_remediations, :checksum, {:unique=>true})
                   -> 0.0031s
                == 20201119164605 AddChecksumIntoVulnerabilityRemediations: migrated (0.0042s)

                == 20201119213406 ChangeTerraformVersioningEnabledDefault: migrating ==========
                -- change_column_default(:terraform_states, :versioning_enabled, {:from=>false, :to=>true})
                   -> 0.0020s
                == 20201119213406 ChangeTerraformVersioningEnabledDefault: migrated (0.0021s) =

                == 20201120071303 DropFeatureFilterTypeFromUserPreferences: migrating =========
                -- remove_column(:user_preferences, :feature_filter_type)
                   -> 0.0004s
                == 20201120071303 DropFeatureFilterTypeFromUserPreferences: migrated (0.0019s)

                == 20201120092000 AddKrokiFormatsToApplicationSettingsTable: migrating ========
                -- change_table(:application_settings)
                   -> 0.0016s
                == 20201120092000 AddKrokiFormatsToApplicationSettingsTable: migrated (0.0017s)

                == 20201120125953 ReplaceUnusedLabelsIndex: migrating =========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:labels, [:group_id, :title], {:where=>"project_id IS NULL", :name=>"index_labels_on_group_id_and_title_with_null_project_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:labels, [:group_id, :title], {:where=>"project_id IS NULL", :name=>"index_labels_on_group_id_and_title_with_null_project_id", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:labels)
                   -> 0.0039s
                -- current_schema()
                   -> 0.0002s
                == 20201120125953 ReplaceUnusedLabelsIndex: migrated (0.0141s) ================

                == 20201120140210 AddRunnerIdAndIdDescIndexToCiBuilds: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, [:runner_id, :id], {:name=>"index_ci_builds_on_runner_id_and_id_desc", :order=>{:id=>:desc}, :algorithm=>:concurrently})
                   -> 0.0118s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, [:runner_id, :id], {:name=>"index_ci_builds_on_runner_id_and_id_desc", :order=>{:id=>:desc}, :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0121s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"index_ci_builds_on_runner_id"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201120140210 AddRunnerIdAndIdDescIndexToCiBuilds: migrated (0.0320s) =====

                == 20201120144823 CreateTokensWithIv: migrating ===============================
                -- create_table(:token_with_ivs)
                   -> 0.0099s
                == 20201120144823 CreateTokensWithIv: migrated (0.0100s) ======================

                == 20201123081307 AddOperationsProjectFeatureToMetrics: migrating =============
                -- add_column(:project_features, :operations_access_level, :integer, {:default=>20, :null=>false})
                   -> 0.0008s
                == 20201123081307 AddOperationsProjectFeatureToMetrics: migrated (0.0022s) ====

                == 20201123161611 AddProvisionedByGroupToUserDetails: migrating ===============
                -- column_exists?(:user_details, :provisioned_by_group_id)
                   -> 0.0013s
                -- add_column(:user_details, :provisioned_by_group_id, :integer, {:limit=>8})
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:user_details, :provisioned_by_group_id, {:name=>"index_user_details_on_provisioned_by_group_id", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:user_details, :provisioned_by_group_id, {:name=>"index_user_details_on_provisioned_by_group_id", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:user_details)
                   -> 0.0036s
                -- execute("ALTER TABLE user_details\nADD CONSTRAINT fk_190e4fcc88\nFOREIGN KEY (provisioned_by_group_id)\nREFERENCES namespaces (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE user_details VALIDATE CONSTRAINT fk_190e4fcc88;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201123161611 AddProvisionedByGroupToUserDetails: migrated (0.0173s) ======

                == 20201124030537 CreateIncidentManagementOnCallRotations: migrating ==========
                -- table_exists?(:incident_management_oncall_rotations)
                   -> 0.0005s
                -- create_table(:incident_management_oncall_rotations)
                   -> 0.0108s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_rotations\nADD CONSTRAINT check_5209fb5d02\nCHECK ( char_length(name) <= 200 )\nNOT VALID;\n")
                   -> 0.0072s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE incident_management_oncall_rotations VALIDATE CONSTRAINT check_5209fb5d02;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201124030537 CreateIncidentManagementOnCallRotations: migrated (0.0250s) =

                == 20201124075951 CreateVulnerabilityExternalLinks: migrating =================
                -- create_table(:vulnerability_external_issue_links, {:if_not_exists=>true})
                   -> 0.0166s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:vulnerability_external_issue_links)
                   -> 0.0036s
                -- execute("ALTER TABLE vulnerability_external_issue_links\nADD CONSTRAINT fk_f07bb8233d\nFOREIGN KEY (vulnerability_id)\nREFERENCES vulnerabilities (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_external_issue_links VALIDATE CONSTRAINT fk_f07bb8233d;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_external_issue_links\nADD CONSTRAINT check_68cffd19b0\nCHECK ( char_length(external_project_key) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_external_issue_links VALIDATE CONSTRAINT check_68cffd19b0;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_external_issue_links\nADD CONSTRAINT check_3200604f5e\nCHECK ( char_length(external_issue_key) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_external_issue_links VALIDATE CONSTRAINT check_3200604f5e;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201124075951 CreateVulnerabilityExternalLinks: migrated (0.0361s) ========

                == 20201124122817 PopulateRemainingMissingDismissalInformationForVulnerabilities: migrating
                == 20201124122817 PopulateRemainingMissingDismissalInformationForVulnerabilities: migrated (0.0020s)

                == 20201124185639 RemoveUnusedIndexes: migrating ==============================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:packages_package_files)
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:packages_package_files, {:algorithm=>:concurrently, :name=>"packages_packages_verification_failure_partial"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:packages_package_files)
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:packages_package_files, {:algorithm=>:concurrently, :name=>"packages_packages_verification_checksum_partial"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:snippet_repositories)
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:snippet_repositories, {:algorithm=>:concurrently, :name=>"snippet_repositories_verification_failure_partial"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:snippet_repositories)
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:snippet_repositories, {:algorithm=>:concurrently, :name=>"snippet_repositories_verification_checksum_partial"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:terraform_state_versions)
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:terraform_state_versions, {:algorithm=>:concurrently, :name=>"terraform_state_versions_verification_failure_partial"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:terraform_state_versions)
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:terraform_state_versions, {:algorithm=>:concurrently, :name=>"terraform_state_versions_verification_checksum_partial"})
                   -> 0.0022s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201124185639 RemoveUnusedIndexes: migrated (0.0351s) =====================

                == 20201125030847 CreateDependencyProxyManifests: migrating ===================
                -- create_table(:dependency_proxy_manifests, {:if_not_exists=>true})
                   -> 0.0083s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests\nADD CONSTRAINT check_c579e3f586\nCHECK ( char_length(file_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests VALIDATE CONSTRAINT check_c579e3f586;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests\nADD CONSTRAINT check_079b293a7b\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests VALIDATE CONSTRAINT check_079b293a7b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests\nADD CONSTRAINT check_f5d9996bf1\nCHECK ( char_length(digest) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests VALIDATE CONSTRAINT check_f5d9996bf1;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201125030847 CreateDependencyProxyManifests: migrated (0.0258s) ==========

                == 20201125233219 AddIncidentManagementOnCallParticipants: migrating ==========
                -- table_exists?(:incident_management_oncall_participants)
                   -> 0.0005s
                -- create_table(:incident_management_oncall_participants)
                   -> 0.0120s
                == 20201125233219 AddIncidentManagementOnCallParticipants: migrated (0.0142s) =

                == 20201126165919 AddEpicBoards: migrating ====================================
                -- create_table(:boards_epic_boards)
                   -> 0.0084s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE boards_epic_boards\nADD CONSTRAINT check_bcbbffe601\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE boards_epic_boards VALIDATE CONSTRAINT check_bcbbffe601;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201126165919 AddEpicBoards: migrated (0.0151s) ===========================

                == 20201126172030 AddFeedTokenOffToSettings: migrating ========================
                -- add_column(:application_settings, :disable_feed_token, :boolean, {:null=>false, :default=>false})
                   -> 0.0016s
                == 20201126172030 AddFeedTokenOffToSettings: migrated (0.0017s) ===============

                == 20201126190039 AddEpicBoardLabels: migrating ===============================
                -- create_table(:boards_epic_board_labels)
                   -> 0.0097s
                == 20201126190039 AddEpicBoardLabels: migrated (0.0115s) ======================

                == 20201127104228 AddIndexToSecurityScansOnCreatedAtAndId: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:security_scans, "date(timezone('UTC', created_at)), id", {:name=>"index_security_scans_on_date_created_at_and_id", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:security_scans, "date(timezone('UTC', created_at)), id", {:name=>"index_security_scans_on_date_created_at_and_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201127104228 AddIndexToSecurityScansOnCreatedAtAndId: migrated (0.0066s) =

                == 20201127141433 AddOtherRoleToUserDetails: migrating ========================
                -- column_exists?(:user_details, :other_role)
                   -> 0.0015s
                -- add_column(:user_details, :other_role, :text)
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE user_details\nADD CONSTRAINT check_b132136b01\nCHECK ( char_length(other_role) <= 100 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE user_details VALIDATE CONSTRAINT check_b132136b01;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201127141433 AddOtherRoleToUserDetails: migrated (0.0107s) ===============

                == 20201127170848 AddIndexBloatEstimateView: migrating ========================
                -- execute("CREATE VIEW postgres_index_bloat_estimates AS\n-- Originally from: https://github.com/ioguix/pgsql-bloat-estimation/blob/master/btree/btree_bloat.sql\n-- WARNING: executed with a non-superuser role, the query inspect only index on tables you are granted to read.\n-- WARNING: rows with is_na = 't' are known to have bad statistics (\"name\" type is not supported).\n-- This query is compatible with PostgreSQL 8.2 and after\nSELECT nspname || '.' || idxname as identifier,\n  CASE WHEN relpages > est_pages_ff\n    THEN bs*(relpages-est_pages_ff)\n    ELSE 0\n  END::bigint AS bloat_size_bytes\nFROM (\n  SELECT\n      coalesce(1 +\n        ceil(reltuples/floor((bs-pageopqdata-pagehdr)*fillfactor/(100*(4+nulldatahdrwidth)::float))), 0\n      ) AS est_pages_ff,\n      bs, nspname, tblname, idxname, relpages, is_na\n  FROM (\n      SELECT maxalign, bs, nspname, tblname, idxname, reltuples, relpages, idxoid, fillfactor,\n            ( index_tuple_hdr_bm +\n                maxalign - CASE -- Add padding to the index tuple header to align on MAXALIGN\n                  WHEN index_tuple_hdr_bm%maxalign = 0 THEN maxalign\n                  ELSE index_tuple_hdr_bm%maxalign\n                END\n              + nulldatawidth + maxalign - CASE -- Add padding to the data to align on MAXALIGN\n                  WHEN nulldatawidth = 0 THEN 0\n                  WHEN nulldatawidth::integer%maxalign = 0 THEN maxalign\n                  ELSE nulldatawidth::integer%maxalign\n                END\n            )::numeric AS nulldatahdrwidth, pagehdr, pageopqdata, is_na\n      FROM (\n          SELECT n.nspname, i.tblname, i.idxname, i.reltuples, i.relpages,\n              i.idxoid, i.fillfactor, current_setting('block_size')::numeric AS bs,\n              CASE -- MAXALIGN: 4 on 32bits, 8 on 64bits (and mingw32 ?)\n                WHEN version() ~ 'mingw32' OR version() ~ '64-bit|x86_64|ppc64|ia64|amd64' THEN 8\n                ELSE 4\n              END AS maxalign,\n              /* per page header, fixed size: 20 for 7.X, 24 for others */\n              24 AS pagehdr,\n              /* per page btree opaque data */\n              16 AS pageopqdata,\n              /* per tuple header: add IndexAttributeBitMapData if some cols are null-able */\n              CASE WHEN max(coalesce(s.null_frac,0)) = 0\n                  THEN 2 -- IndexTupleData size\n                  ELSE 2 + (( 32 + 8 - 1 ) / 8) -- IndexTupleData size + IndexAttributeBitMapData size ( max num filed per index + 8 - 1 /8)\n              END AS index_tuple_hdr_bm,\n              /* data len: we remove null values save space using it fractionnal part from stats */\n              sum( (1-coalesce(s.null_frac, 0)) * coalesce(s.avg_width, 1024)) AS nulldatawidth,\n              max( CASE WHEN i.atttypid = 'pg_catalog.name'::regtype THEN 1 ELSE 0 END ) > 0 AS is_na\n          FROM (\n              SELECT ct.relname AS tblname, ct.relnamespace, ic.idxname, ic.attpos, ic.indkey, ic.indkey[ic.attpos], ic.reltuples, ic.relpages, ic.tbloid, ic.idxoid, ic.fillfactor,\n                  coalesce(a1.attnum, a2.attnum) AS attnum, coalesce(a1.attname, a2.attname) AS attname, coalesce(a1.atttypid, a2.atttypid) AS atttypid,\n                  CASE WHEN a1.attnum IS NULL\n                  THEN ic.idxname\n                  ELSE ct.relname\n                  END AS attrelname\n              FROM (\n                  SELECT idxname, reltuples, relpages, tbloid, idxoid, fillfactor, indkey,\n                      pg_catalog.generate_series(1,indnatts) AS attpos\n                  FROM (\n                      SELECT ci.relname AS idxname, ci.reltuples, ci.relpages, i.indrelid AS tbloid,\n                          i.indexrelid AS idxoid,\n                          coalesce(substring(\n                              array_to_string(ci.reloptions, ' ')\n                              from 'fillfactor=([0-9]+)')::smallint, 90) AS fillfactor,\n                          i.indnatts,\n                          pg_catalog.string_to_array(pg_catalog.textin(\n                              pg_catalog.int2vectorout(i.indkey)),' ')::int[] AS indkey\n                      FROM pg_catalog.pg_index i\n                      JOIN pg_catalog.pg_class ci ON ci.oid = i.indexrelid\n                      WHERE ci.relam=(SELECT oid FROM pg_am WHERE amname = 'btree')\n                      AND ci.relpages > 0\n                  ) AS idx_data\n              ) AS ic\n              JOIN pg_catalog.pg_class ct ON ct.oid = ic.tbloid\n              LEFT JOIN pg_catalog.pg_attribute a1 ON\n                  ic.indkey[ic.attpos] <> 0\n                  AND a1.attrelid = ic.tbloid\n                  AND a1.attnum = ic.indkey[ic.attpos]\n              LEFT JOIN pg_catalog.pg_attribute a2 ON\n                  ic.indkey[ic.attpos] = 0\n                  AND a2.attrelid = ic.idxoid\n                  AND a2.attnum = ic.attpos\n            ) i\n            JOIN pg_catalog.pg_namespace n ON n.oid = i.relnamespace\n            JOIN pg_catalog.pg_stats s ON s.schemaname = n.nspname\n                                      AND s.tablename = i.attrelname\n                                      AND s.attname = i.attname\n            GROUP BY 1,2,3,4,5,6,7,8,9,10,11\n      ) AS rows_data_stats\n  ) AS rows_hdr_pdg_stats\n) AS relation_stats\nWHERE nspname IN (\"current_schema\"(), 'gitlab_partitions_dynamic', 'gitlab_partitions_static') AND NOT is_na\nORDER BY nspname, tblname, idxname;\n")
                   -> 0.0065s
                == 20201127170848 AddIndexBloatEstimateView: migrated (0.0066s) ===============

                == 20201128210000 AddServiceDeskReplyToIsNotNullIndexOnIssuesFix: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, [:id], {:name=>"idx_on_issues_where_service_desk_reply_to_is_not_null", :where=>"service_desk_reply_to IS NOT NULL", :algorithm=>:concurrently})
                   -> 0.0108s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, [:id], {:name=>"idx_on_issues_where_service_desk_reply_to_is_not_null", :where=>"service_desk_reply_to IS NOT NULL", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201128210000 AddServiceDeskReplyToIsNotNullIndexOnIssuesFix: migrated (0.0155s)

                == 20201128210234 SchedulePopulateIssueEmailParticipants: migrating ===========
                -- Scheduled 0 PopulateIssueEmailParticipants jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:07 +0800."
                == 20201128210234 SchedulePopulateIssueEmailParticipants: migrated (0.0026s) ==

                == 20201130103926 SchedulePopulateDismissedStateForVulnerabilities: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerabilities, :id, {:where=>"state <> 2", :name=>"tmp_index_on_vulnerabilities_non_dismissed", :algorithm=>:concurrently})
                   -> 0.0052s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerabilities, :id, {:where=>"state <> 2", :name=>"tmp_index_on_vulnerabilities_non_dismissed", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201130103926 SchedulePopulateDismissedStateForVulnerabilities: migrated (0.0120s)

                == 20201201033202 AddVerificationIndexesForPackageFiles: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_package_files, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"packages_packages_pending_verification", :algorithm=>:concurrently})NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_elasticsearch_indexed_projects_on_project_id" to "elasticsearch_indexed_projects_pkey"
                NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "index_elasticsearch_indexed_namespaces_on_namespace_id" to "elasticsearch_indexed_namespaces_pkey"

                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_package_files, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"packages_packages_pending_verification", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_package_files, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"packages_packages_failed_verification", :algorithm=>:concurrently})
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_package_files, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"packages_packages_failed_verification", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_package_files, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"packages_packages_needs_verification", :algorithm=>:concurrently})
                   -> 0.0028s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_package_files, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"packages_packages_needs_verification", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201201033202 AddVerificationIndexesForPackageFiles: migrated (0.0214s) ===

                == 20201201034258 AddIndexForNonSystemNoteables: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:notes, [:noteable_id, :noteable_type, :system], {:name=>"index_notes_on_noteable_id_and_noteable_type_and_system", :algorithm=>:concurrently})
                   -> 0.0049s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:notes, [:noteable_id, :noteable_type, :system], {:name=>"index_notes_on_noteable_id_and_noteable_type_and_system", :algorithm=>:concurrently})
                   -> 0.0046s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:notes)
                   -> 0.0051s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:notes, {:algorithm=>:concurrently, :name=>"index_notes_on_noteable_id_and_noteable_type"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201201034258 AddIndexForNonSystemNoteables: migrated (0.0187s) ===========

                == 20201201161655 AddPrimaryKeyToElasticSearchIndexedProjects: migrating ======
                -- execute("DELETE FROM elasticsearch_indexed_projects\nWHERE project_id IS NULL\n")
                   -> 0.0006s
                -- execute("ALTER TABLE elasticsearch_indexed_projects\nALTER COLUMN project_id SET NOT NULL,\nADD CONSTRAINT elasticsearch_indexed_projects_pkey PRIMARY KEY USING INDEX index_elasticsearch_indexed_projects_on_project_id\n")
                   -> 0.0009s
                == 20201201161655 AddPrimaryKeyToElasticSearchIndexedProjects: migrated (0.0016s)

                == 20201201163227 AddFindingUuidToVulnerabilityFeedback: migrating ============
                -- add_column(:vulnerability_feedback, :finding_uuid, :uuid)
                   -> 0.0007s
                == 20201201163227 AddFindingUuidToVulnerabilityFeedback: migrated (0.0007s) ===

                == 20201201175656 AddIndexVulnerabilitiesOnProjectIdAndStateAndSeverity: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerabilities, [:project_id, :state, :severity], {:name=>"index_vulnerabilities_on_project_id_and_state_and_severity", :algorithm=>:concurrently})
                   -> 0.0058s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerabilities, [:project_id, :state, :severity], {:name=>"index_vulnerabilities_on_project_id_and_state_and_severity", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201201175656 AddIndexVulnerabilitiesOnProjectIdAndStateAndSeverity: migrated (0.0104s)

                == 20201201190002 AddOtherContextToExperimentUser: migrating ==================
                -- add_column(:experiment_users, :context, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0025s
                == 20201201190002 AddOtherContextToExperimentUser: migrated (0.0040s) =========

                == 20201201192112 AddPrimaryKeyToElasticSearchIndexedNamespaces: migrating ====
                -- execute("LOCK TABLE elasticsearch_indexed_namespaces IN ACCESS EXCLUSIVE MODE;\n\nDELETE FROM elasticsearch_indexed_namespaces\nWHERE namespace_id IS NULL;\n\nALTER TABLE elasticsearch_indexed_namespaces\nADD CONSTRAINT elasticsearch_indexed_namespaces_pkey PRIMARY KEY USING INDEX index_elasticsearch_indexed_namespaces_on_namespace_id;\n")
                   -> 0.0010s
                == 20201201192112 AddPrimaryKeyToElasticSearchIndexedNamespaces: migrated (0.0025s)

                == 20201202003042 AddEpicBoardPositions: migrating ============================
                -- create_table(:boards_epic_board_positions)
                   -> 0.0094s
                == 20201202003042 AddEpicBoardPositions: migrated (0.0107s) ===================

                == 20201202025644 AddColumnToSecurityFindings: migrating ======================
                -- add_column(:security_findings, :uuid, :uuid)
                   -> 0.0006s
                == 20201202025644 AddColumnToSecurityFindings: migrated (0.0007s) =============

                == 20201202025937 AddIndexToSecurityFindingsUuid: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:security_findings, :uuid, {:name=>"index_security_findings_on_uuid", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:security_findings, :uuid, {:name=>"index_security_findings_on_uuid", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201202025937 AddIndexToSecurityFindingsUuid: migrated (0.0077s) ==========

                == 20201202133606 AddSortedToMergeRequestDiffs: migrating =====================
                -- add_column(:merge_request_diffs, :sorted, :boolean, {:null=>false, :default=>false})
                   -> 0.0008s
                == 20201202133606 AddSortedToMergeRequestDiffs: migrated (0.0020s) ============

                == 20201202142751 DropIndexVulnerabilitiesOnProjectId: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerabilities)
                   -> 0.0058s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerabilities, {:algorithm=>:concurrently, :name=>"index_vulnerabilities_on_project_id"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201202142751 DropIndexVulnerabilitiesOnProjectId: migrated (0.0094s) =====

                == 20201202150001 AddDetailsToVulnerabilityFindings: migrating ================
                -- add_column(:vulnerability_occurrences, :details, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0008s
                == 20201202150001 AddDetailsToVulnerabilityFindings: migrated (0.0021s) =======

                == 20201202155913 AddPrimaryKeyToMergeRequestContextCommitDiffFiles: migrating
                -- execute("DELETE FROM merge_request_context_commit_diff_files\nWHERE merge_request_context_commit_id IS NULL;\n\nDELETE FROM merge_request_context_commit_diff_files df1\nUSING merge_request_context_commit_diff_files df2\nWHERE df1.ctid < df2.ctid\n  AND df1.merge_request_context_commit_id = df2.merge_request_context_commit_id\n  AND df1.relative_order = df2.relative_order;\n\nALTER TABLE merge_request_context_commit_diff_files\nADD CONSTRAINT merge_request_context_commit_diff_files_pkey PRIMARY KEY (merge_request_context_commit_id, relative_order);\n")
                   -> 0.0027s
                == 20201202155913 AddPrimaryKeyToMergeRequestContextCommitDiffFiles: migrated (0.0027s)

                == 20201202160105 AddGroupFileNameIndexToDependencyProxyManifests: migrating ==
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:dependency_proxy_manifests, [:group_id, :file_name], {:name=>"index_dependency_proxy_manifests_on_group_id_and_file_name", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:dependency_proxy_manifests, [:group_id, :file_name], {:name=>"index_dependency_proxy_manifests_on_group_id_and_file_name", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:dependency_proxy_manifests)
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:dependency_proxy_manifests, {:algorithm=>:concurrently, :name=>"index_dependency_proxy_manifests_on_group_id_and_digest"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201202160105 AddGroupFileNameIndexToDependencyProxyManifests: migrated (0.0127s)

                == 20201202161021 RemoveRedundantIndexOnMergeRequestContextCommitDiffFiles: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:merge_request_context_commit_diff_files)
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:merge_request_context_commit_diff_files, {:algorithm=>:concurrently, :name=>"idx_mr_cc_diff_files_on_mr_cc_id"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201202161021 RemoveRedundantIndexOnMergeRequestContextCommitDiffFiles: migrated (0.0050s)

                == 20201203123201 RemoveOrphanServiceHooks: migrating =========================
                == 20201203123201 RemoveOrphanServiceHooks: migrated (0.0158s) ================

                == 20201203123524 AddDomainEnumToAlerts: migrating ============================
                -- add_column(:alert_management_alerts, :domain, :integer, {:limit=>2, :default=>0})
                   -> 0.0010s
                == 20201203123524 AddDomainEnumToAlerts: migrated (0.0024s) ===================

                == 20201203144655 AddAllowToEditCommitToProjectSettings: migrating ============
                -- add_column(:project_settings, :allow_editing_commit_messages, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20201203144655 AddAllowToEditCommitToProjectSettings: migrated (0.0021s) ===

                == 20201203171631 AddIndexToDomain: migrating =================================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:alert_management_alerts, :domain, {:name=>"index_alert_management_alerts_on_domain", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:alert_management_alerts, :domain, {:name=>"index_alert_management_alerts_on_domain", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201203171631 AddIndexToDomain: migrated (0.0079s) ========================

                == 20201204085522 AddProjectIdIntoVulnerabilityRemediations: migrating ========
                -- add_column(:vulnerability_remediations, :project_id, :bigint, {:null=>false})
                   -> 0.0005s
                == 20201204085522 AddProjectIdIntoVulnerabilityRemediations: migrated (0.0011s)

                == 20201204090855 AddCompoundIndexToVulnerabilityRemediationsTable: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_remediations, [:project_id, :checksum], {:unique=>true, :name=>"index_vulnerability_remediations_on_project_id_and_checksum", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_remediations, [:project_id, :checksum], {:unique=>true, :name=>"index_vulnerability_remediations_on_project_id_and_checksum", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:vulnerability_remediations)
                   -> 0.0036s
                -- execute("ALTER TABLE vulnerability_remediations\nADD CONSTRAINT fk_fc61a535a0\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_remediations VALIDATE CONSTRAINT fk_fc61a535a0;")
                   -> 0.0021s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerability_remediations)
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerability_remediations, {:algorithm=>:concurrently, :name=>"index_vulnerability_remediations_on_checksum"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204090855 AddCompoundIndexToVulnerabilityRemediationsTable: migrated (0.0203s)

                == 20201204105300 CreatePackagesDebianFileMetadata: migrating =================
                -- table_exists?(:packages_debian_file_metadata)
                   -> 0.0006s
                -- create_table(:packages_debian_file_metadata, {:id=>false})
                   -> 0.0048s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_file_metadata\nADD CONSTRAINT check_2ebedda4b6\nCHECK ( char_length(component) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_file_metadata VALIDATE CONSTRAINT check_2ebedda4b6;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_file_metadata\nADD CONSTRAINT check_e6e1fffcca\nCHECK ( char_length(architecture) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_file_metadata VALIDATE CONSTRAINT check_e6e1fffcca;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204105300 CreatePackagesDebianFileMetadata: migrated (0.0155s) ========

                == 20201204110700 CreatePackagesDebianProjectDistributions: migrating =========
                -- table_exists?(:packages_debian_project_distributions)
                   -> 0.0004s
                -- create_table(:packages_debian_project_distributions, {})
                   -> 0.0183s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_834dabadb6\nCHECK ( char_length(codename) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_834dabadb6;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_a56ae58a17\nCHECK ( char_length(suite) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_a56ae58a17;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_6177ccd4a6\nCHECK ( char_length(origin) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_6177ccd4a6;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_6f6b55a4c4\nCHECK ( char_length(label) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_6f6b55a4c4;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_96965792c2\nCHECK ( char_length(version) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_96965792c2;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_b93154339f\nCHECK ( char_length(description) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_b93154339f;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_c25603a25b\nCHECK ( char_length(encrypted_signing_keys) <= 2048 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_c25603a25b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_d488f8cce3\nCHECK ( char_length(encrypted_signing_keys_iv) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_d488f8cce3;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_cb4ac9599e\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_cb4ac9599e;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions\nADD CONSTRAINT check_a5a2ac6af2\nCHECK ( char_length(file_signature) <= 4096 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_distributions VALIDATE CONSTRAINT check_a5a2ac6af2;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204110700 CreatePackagesDebianProjectDistributions: migrated (0.0727s)

                == 20201204110800 CreatePackagesDebianGroupDistributions: migrating ===========
                -- table_exists?(:packages_debian_group_distributions)
                   -> 0.0004s
                -- create_table(:packages_debian_group_distributions, {})
                   -> 0.0179s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_590e18405a\nCHECK ( char_length(codename) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_590e18405a;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_e7c928a24b\nCHECK ( char_length(suite) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_e7c928a24b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_b057cd840a\nCHECK ( char_length(origin) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_b057cd840a;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_d3244bfc0b\nCHECK ( char_length(label) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_d3244bfc0b;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_3fdadf4a0c\nCHECK ( char_length(version) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_3fdadf4a0c;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_310ac457b8\nCHECK ( char_length(description) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_310ac457b8;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_b811ec1218\nCHECK ( char_length(encrypted_signing_keys) <= 2048 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_b811ec1218;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_9b90bc0f07\nCHECK ( char_length(encrypted_signing_keys_iv) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_9b90bc0f07;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_be5ed8d307\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_be5ed8d307;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions\nADD CONSTRAINT check_3d6f87fc31\nCHECK ( char_length(file_signature) <= 4096 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_distributions VALIDATE CONSTRAINT check_3d6f87fc31;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204110800 CreatePackagesDebianGroupDistributions: migrated (0.0701s) ==

                == 20201204111000 CreatePackagesDebianProjectArchitectures: migrating =========
                -- table_exists?(:packages_debian_project_architectures)
                   -> 0.0004s
                -- create_table(:packages_debian_project_architectures, {})
                   -> 0.0101s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_architectures\nADD CONSTRAINT check_9c2e1c99d8\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_architectures VALIDATE CONSTRAINT check_9c2e1c99d8;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204111000 CreatePackagesDebianProjectArchitectures: migrated (0.0176s)

                == 20201204111100 CreatePackagesDebianGroupArchitectures: migrating ===========
                -- table_exists?(:packages_debian_group_architectures)
                   -> 0.0004s
                -- create_table(:packages_debian_group_architectures, {})
                   -> 0.0099s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_architectures\nADD CONSTRAINT check_ddb220164a\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_architectures VALIDATE CONSTRAINT check_ddb220164a;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204111100 CreatePackagesDebianGroupArchitectures: migrated (0.0191s) ==

                == 20201204111200 CreatePackagesDebianProjectComponents: migrating ============
                -- table_exists?(:packages_debian_project_components)
                   -> 0.0005s
                -- create_table(:packages_debian_project_components, {})
                   -> 0.0086s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_components\nADD CONSTRAINT check_517559f298\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_components VALIDATE CONSTRAINT check_517559f298;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204111200 CreatePackagesDebianProjectComponents: migrated (0.0141s) ===

                == 20201204111300 CreatePackagesDebianGroupComponents: migrating ==============
                -- table_exists?(:packages_debian_group_components)
                   -> 0.0004s
                -- create_table(:packages_debian_group_components, {})
                   -> 0.0080s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_components\nADD CONSTRAINT check_a9bc7d85be\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_components VALIDATE CONSTRAINT check_a9bc7d85be;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204111300 CreatePackagesDebianGroupComponents: migrated (0.0135s) =====

                == 20201204111400 CreatePackagesDebianProjectComponentFiles: migrating ========
                -- table_exists?(:packages_debian_project_component_files)
                   -> 0.0004s
                -- create_table(:packages_debian_project_component_files, {})
                   -> 0.0106s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_component_files\nADD CONSTRAINT check_e5af03fa2d\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_project_component_files VALIDATE CONSTRAINT check_e5af03fa2d;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204111400 CreatePackagesDebianProjectComponentFiles: migrated (0.0179s)

                == 20201204111500 CreatePackagesDebianGroupComponentFiles: migrating ==========
                -- table_exists?(:packages_debian_group_component_files)
                   -> 0.0004s
                -- create_table(:packages_debian_group_component_files, {})
                   -> 0.0106s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_component_files\nADD CONSTRAINT check_839e1685bc\nCHECK ( char_length(file) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_debian_group_component_files VALIDATE CONSTRAINT check_839e1685bc;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201204111500 CreatePackagesDebianGroupComponentFiles: migrated (0.0178s) =

                == 20201204111600 CreatePackagesDebianPublications: migrating =================
                -- create_table(:packages_debian_publications, {})
                   -> 0.0091s
                == 20201204111600 CreatePackagesDebianPublications: migrated (0.0092s) ========

                == 20201204141038 AddTraceBytesizeToCiBuildPendingStates: migrating ===========
                -- add_column(:ci_build_pending_states, :trace_bytesize, :bigint)
                   -> 0.0006s
                == 20201204141038 AddTraceBytesizeToCiBuildPendingStates: migrated (0.0006s) ==

                == 20201204193952 KeepLatestArtifactProjectLevel: migrating ===================
                -- add_column(:project_ci_cd_settings, :keep_latest_artifact, :boolean, {:default=>true, :null=>false})
                   -> 0.0007s
                == 20201204193952 KeepLatestArtifactProjectLevel: migrated (0.0020s) ==========

                == 20201204205814 AddMemberEventsToWebHooks: migrating ========================
                -- add_column(:web_hooks, :member_events, :boolean, {:null=>false, :default=>false})
                   -> 0.0009s
                == 20201204205814 AddMemberEventsToWebHooks: migrated (0.0010s) ===============

                == 20201204215353 AddPullMirrorIntervalToPlanLimits: migrating ================
                -- add_column(:plan_limits, :pull_mirror_interval_seconds, :integer, {:default=>300, :null=>false})
                   -> 0.0010s
                == 20201204215353 AddPullMirrorIntervalToPlanLimits: migrated (0.0011s) =======

                == 20201207151651 TruncateSecurityFindingsTable2: migrating ===================
                == 20201207151651 TruncateSecurityFindingsTable2: migrated (0.0000s) ==========

                == 20201207165956 RemoveDuplicateServices: migrating ==========================
                == 20201207165956 RemoveDuplicateServices: migrated (0.0000s) =================

                == 20201208081429 UpdateInternalIdsLastValueForEpicsRenamed: migrating ========
                == 20201208081429 UpdateInternalIdsLastValueForEpicsRenamed: migrated (0.0012s)

                == 20201208143911 AddApprovalsCreatedAtIndex: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:approvals, [:merge_request_id, :created_at], {:name=>"index_approvals_on_merge_request_id_and_created_at", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:approvals, [:merge_request_id, :created_at], {:name=>"index_approvals_on_merge_request_id_and_created_at", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201208143911 AddApprovalsCreatedAtIndex: migrated (0.0063s) ==============

                == 20201208175117 ScheduleBackfillingArtifactExpiryMigration: migrating =======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_job_artifacts, [:id, :created_at], {:where=>"expire_at IS NULL AND created_at < '2020-06-22 00:00:00 UTC'", :name=>"expired_artifacts_temp_index", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_job_artifacts, [:id, :created_at], {:where=>"expire_at IS NULL AND created_at < '2020-06-22 00:00:00 UTC'", :name=>"expired_artifacts_temp_index", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201208175117 ScheduleBackfillingArtifactExpiryMigration: migrated (0.0079s)

                == 20201208181411 RemoveTemporaryBlockingIssuesIndex: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issue_links)
                   -> 0.0028s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issue_links, {:algorithm=>:concurrently, :name=>"tmp_idx_blocking_type_links"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issue_links)
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issue_links, {:algorithm=>:concurrently, :name=>"tmp_idx_blocked_by_type_links"})
                   -> 0.0022s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issues)
                   -> 0.0106s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issues, {:algorithm=>:concurrently, :name=>"tmp_idx_index_issues_with_outdate_blocking_count"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201208181411 RemoveTemporaryBlockingIssuesIndex: migrated (0.0256s) ======

                == 20201208210209 CreateIncidentManagementOncallShifts: migrating =============
                -- table_exists?(:incident_management_oncall_shifts)
                   -> 0.0006s
                -- create_table(:incident_management_oncall_shifts)
                   -> 0.0091s
                -- execute("ALTER TABLE incident_management_oncall_shifts\n  ADD CONSTRAINT inc_mgmnt_no_overlapping_oncall_shifts\n  EXCLUDE USING gist\n  ( rotation_id WITH =,\n    tstzrange(starts_at, ends_at, '[)') WITH &&\n  )\n")
                   -> 0.0009s
                == 20201208210209 CreateIncidentManagementOncallShifts: migrated (0.0118s) ====

                == 20201209154746 ExpandCiPipelinesIndexOnCiRefId: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:ci_ref_id, :id, :source, :status], {:order=>{:id=>:desc}, :where=>"ci_ref_id IS NOT NULL", :name=>"index_ci_pipelines_on_ci_ref_id_and_more", :algorithm=>:concurrently})
                   -> 0.0115s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:ci_ref_id, :id, :source, :status], {:order=>{:id=>:desc}, :where=>"ci_ref_id IS NOT NULL", :name=>"index_ci_pipelines_on_ci_ref_id_and_more", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_pipelines)
                   -> 0.0086s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_pipelines, {:algorithm=>:concurrently, :name=>"index_ci_pipelines_on_ci_ref_id"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201209154746 ExpandCiPipelinesIndexOnCiRefId: migrated (0.0309s) =========

                == 20201209163113 RecreateIndexIssueEmailParticipantsOnIssueIdAndEmail: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issue_email_participants, "issue_id, lower(email)", {:unique=>true, :name=>"index_issue_email_participants_on_issue_id_and_lower_email", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issue_email_participants, "issue_id, lower(email)", {:unique=>true, :name=>"index_issue_email_participants_on_issue_id_and_lower_email", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issue_email_participants)
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issue_email_participants, {:algorithm=>:concurrently, :name=>"index_issue_email_participants_on_issue_id_and_email"})
                   -> 0.0023s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201209163113 RecreateIndexIssueEmailParticipantsOnIssueIdAndEmail: migrated (0.0104s)

                == 20201209163958 AddCodeChallengeToOauthAccessGrants: migrating ==============
                -- column_exists?(:oauth_access_grants, :code_challenge)
                   -> 0.0013s
                -- add_column(:oauth_access_grants, :code_challenge, :text, {:null=>true})
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE oauth_access_grants\nADD CONSTRAINT oauth_access_grants_code_challenge\nCHECK ( char_length(code_challenge) <= 128 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE oauth_access_grants VALIDATE CONSTRAINT oauth_access_grants_code_challenge;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- column_exists?(:oauth_access_grants, :code_challenge_method)
                   -> 0.0011s
                -- add_column(:oauth_access_grants, :code_challenge_method, :text, {:null=>true})
                   -> 0.0007s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE oauth_access_grants\nADD CONSTRAINT oauth_access_grants_code_challenge_method\nCHECK ( char_length(code_challenge_method) <= 5 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE oauth_access_grants VALIDATE CONSTRAINT oauth_access_grants_code_challenge_method;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201209163958 AddCodeChallengeToOauthAccessGrants: migrated (0.0141s) =====

                == 20201209193551 AddVersionShaCacheToComposerMetadata: migrating =============
                -- add_column(:packages_composer_metadata, :version_cache_sha, :binary, {:null=>true})
                   -> 0.0004s
                == 20201209193551 AddVersionShaCacheToComposerMetadata: migrated (0.0018s) ====

                == 20201210101250 AddIndexProjectsOnImportTypeAndCreatorId: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, [:creator_id, :import_type, :created_at], {:where=>"import_type IS NOT NULL", :name=>"index_projects_on_creator_id_import_type_and_created_at_partial", :algorithm=>:concurrently})
                   -> 0.0187s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, [:creator_id, :import_type, :created_at], {:where=>"import_type IS NOT NULL", :name=>"index_projects_on_creator_id_import_type_and_created_at_partial", :algorithm=>:concurrently})
                   -> 0.0044s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201210101250 AddIndexProjectsOnImportTypeAndCreatorId: migrated (0.0238s)

                == 20201210175044 AddIndexToSnippetOnProjectId: migrating =====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippets, [:id, :project_id], {:name=>"index_snippet_on_id_and_project_id", :algorithm=>:concurrently})
                   -> 0.0049s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippets, [:id, :project_id], {:name=>"index_snippet_on_id_and_project_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201210175044 AddIndexToSnippetOnProjectId: migrated (0.0092s) ============

                == 20201211042306 AddDeploymentsFinderByFinishedAtIndex: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:project_id, :finished_at], {:where=>"status = 2", :name=>"index_deployments_on_project_and_finished", :algorithm=>:concurrently})
                   -> 0.0076s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:project_id, :finished_at], {:where=>"status = 2", :name=>"index_deployments_on_project_and_finished", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201211042306 AddDeploymentsFinderByFinishedAtIndex: migrated (0.0118s) ===

                == 20201211090634 SchedulePopulateFindingUuidForVulnerabilityFeedback: migrating
                -- Scheduled 0 PopulateFindingUuidForVulnerabilityFeedback jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:07 +0800."
                == 20201211090634 SchedulePopulateFindingUuidForVulnerabilityFeedback: migrated (0.0069s)

                == 20201211145950 AddBloatEstimateToReindexAction: migrating ==================
                -- add_column(:postgres_reindex_actions, :bloat_estimate_bytes_start, :bigint)
                   -> 0.0006s
                == 20201211145950 AddBloatEstimateToReindexAction: migrated (0.0006s) =========

                == 20201214000000 ChangeMrAllowMaintainerToPushDefault: migrating =============
                -- change_column_default(:merge_requests, :allow_maintainer_to_push, {:from=>nil, :to=>true})
                   -> 0.0023s
                == 20201214000000 ChangeMrAllowMaintainerToPushDefault: migrated (0.0036s) ====

                == 20201214032220 AddHasExternalWikiTrigger: migrating ========================
                -- execute("CREATE OR REPLACE FUNCTION set_has_external_wiki()\nRETURNS TRIGGER AS\n$$\nBEGIN\nUPDATE projects SET has_external_wiki = COALESCE(NEW.active, FALSE)\nWHERE projects.id = COALESCE(NEW.project_id, OLD.project_id);\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0007s
                -- execute("CREATE TRIGGER trigger_has_external_wiki_on_insert\nAFTER INSERT ON services\nFOR EACH ROW\nWHEN (NEW.active = TRUE AND NEW.type = 'ExternalWikiService' AND NEW.project_id IS NOT NULL)\nEXECUTE FUNCTION set_has_external_wiki();\n")
                   -> 0.0004s
                -- execute("CREATE TRIGGER trigger_has_external_wiki_on_update\nAFTER UPDATE ON services\nFOR EACH ROW\nWHEN (NEW.type = 'ExternalWikiService' AND OLD.active != NEW.active AND NEW.project_id IS NOT NULL)\nEXECUTE FUNCTION set_has_external_wiki();\n")
                   -> 0.0005s
                -- execute("CREATE TRIGGER trigger_has_external_wiki_on_delete\nAFTER DELETE ON services\nFOR EACH ROW\nWHEN (OLD.type = 'ExternalWikiService' AND OLD.project_id IS NOT NULL)\nEXECUTE FUNCTION set_has_external_wiki();\n")
                   -> 0.0003s
                == 20201214032220 AddHasExternalWikiTrigger: migrated (0.0020s) ===============

                == 20201214084105 AddExpirationPolicyCompletedAtToContainerRepositories: migrating
                -- add_column(:container_repositories, :expiration_policy_completed_at, :datetime_with_timezone)
                   -> 0.0006s
                == 20201214084105 AddExpirationPolicyCompletedAtToContainerRepositories: migrated (0.0006s)

                == 20201214111858 AddContainerRegistryCleanupTagsServiceMaxListSizeToApplicationSettings: migrating
                -- add_column(:application_settings, :container_registry_cleanup_tags_service_max_list_size, :integer, {:default=>200, :null=>false})
                   -> 0.0017s
                == 20201214111858 AddContainerRegistryCleanupTagsServiceMaxListSizeToApplicationSettings: migrated (0.0017s) NOTICE:  trigger "trigger_448e14608510" for relation "pages_deployments" does not exist, skipping


                == 20201214112752 AddAppSettingsContainerRegCleanupTagsServiceMaxListSizeConstraint: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT app_settings_container_reg_cleanup_tags_max_list_size_positive\nCHECK ( container_registry_cleanup_tags_service_max_list_size >= 0 )\nNOT VALID;\n")
                   -> 0.0008s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT app_settings_container_reg_cleanup_tags_max_list_size_positive;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201214112752 AddAppSettingsContainerRegCleanupTagsServiceMaxListSizeConstraint: migrated (0.0059s)

                == 20201214113729 AddCustomMappingColumnsToHttpIntegrations: migrating ========
                -- add_column(:alert_management_http_integrations, :payload_example, :jsonb, {:null=>false, :default=>{}})
                   -> 0.0009s
                -- add_column(:alert_management_http_integrations, :payload_attribute_mapping, :jsonb, {:null=>false, :default=>{}})
                   -> 0.0007s
                == 20201214113729 AddCustomMappingColumnsToHttpIntegrations: migrated (0.0017s)

                == 20201214184020 AddEpicBoardList: migrating =================================
                -- table_exists?(:boards_epic_lists)
                   -> 0.0005s
                -- create_table(:boards_epic_lists)
                   -> 0.0124s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE boards_epic_lists\nADD CONSTRAINT boards_epic_lists_position_constraint\nCHECK ( (list_type <> 1) OR (\"position\" IS NOT NULL AND \"position\" >= 0) )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE boards_epic_lists VALIDATE CONSTRAINT boards_epic_lists_position_constraint;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201214184020 AddEpicBoardList: migrated (0.0197s) ========================

                == 20201215084652 DeleteMockDeploymentServiceRecords: migrating ===============
                == 20201215084652 DeleteMockDeploymentServiceRecords: migrated (0.0000s) ======

                == 20201215132151 ChangeUniqueIndexOnSecurityFindings: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:security_findings, [:uuid, :scan_id], {:unique=>true, :name=>"index_security_findings_on_uuid_and_scan_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:security_findings, [:uuid, :scan_id], {:unique=>true, :name=>"index_security_findings_on_uuid_and_scan_id", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:security_findings)
                   -> 0.0038s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:security_findings, {:algorithm=>:concurrently, :name=>"index_security_findings_on_uuid"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201215132151 ChangeUniqueIndexOnSecurityFindings: migrated (0.0153s) =====

                == 20201215205404 CreateNamespacePackageSettings: migrating ===================
                -- create_table(:namespace_package_settings, {:if_not_exists=>true, :id=>false})
                   -> 0.0058s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE namespace_package_settings\nADD CONSTRAINT check_d63274b2b6\nCHECK ( char_length(maven_duplicate_exception_regex) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE namespace_package_settings VALIDATE CONSTRAINT check_d63274b2b6;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201215205404 CreateNamespacePackageSettings: migrated (0.0130s) ==========

                == 20201216151616 AddSquashCommitShaIndex: migrating ==========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :squash_commit_sha], {:name=>"index_merge_requests_on_target_project_id_and_squash_commit_sha", :algorithm=>:concurrently})
                   -> 0.0120s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, [:target_project_id, :squash_commit_sha], {:name=>"index_merge_requests_on_target_project_id_and_squash_commit_sha", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201216151616 AddSquashCommitShaIndex: migrated (0.0167s) =================

                == 20201216154457 AddDevopsAdoptionSnapshotRangeEnd: migrating ================
                -- add_column(:analytics_devops_adoption_snapshots, :end_time, :datetime_with_timezone)
                   -> 0.0006s
                == 20201216154457 AddDevopsAdoptionSnapshotRangeEnd: migrated (0.0007s) =======

                == 20201216185336 AddDevopsAdoptionSnapshotNotNull: migrating =================
                -- execute("LOCK TABLE analytics_devops_adoption_snapshots IN ACCESS EXCLUSIVE MODE;\n\nUPDATE analytics_devops_adoption_snapshots SET end_time = date_trunc('month', recorded_at) - interval '1 millisecond';\n\nALTER TABLE analytics_devops_adoption_snapshots ALTER COLUMN end_time SET NOT NULL;\n")
                   -> 0.0008s
                == 20201216185336 AddDevopsAdoptionSnapshotNotNull: migrated (0.0024s) ========

                == 20201217070530 AddGroupMergeRequestApprovalSettings: migrating =============
                -- create_table(:group_merge_request_approval_settings, {:id=>false})
                   -> 0.0034s
                == 20201217070530 AddGroupMergeRequestApprovalSettings: migrated (0.0047s) ====

                == 20201217111448 ChangePagesDeploymentSizeToBigint: migrating ================
                -- column_exists?(:pages_deployments, :id)
                   -> 0.0014s
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:pages_deployments)
                   -> 0.0011s
                -- add_column(:pages_deployments, "size_for_type_change", :bigint, {:limit=>4, :precision=>nil, :scale=>nil})
                   -> 0.0007s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"pages_deployments\"")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE pages_deployments\nADD CONSTRAINT check_5f9132a958\nCHECK ( size_for_type_change IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE pages_deployments VALIDATE CONSTRAINT check_5f9132a958;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- indexes(:pages_deployments)
                   -> 0.0026s
                -- foreign_keys(:pages_deployments)
                   -> 0.0036s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:pages_deployments, :size)
                   -> 0.0012s
                -- column_exists?(:pages_deployments, "size_for_type_change")
                   -> 0.0011s
                -- current_schema()
                   -> 0.0002s
                == 20201217111448 ChangePagesDeploymentSizeToBigint: migrated (0.0426s) =======

                == 20201217112249 ChangePagesDeploymentSizeToBigintCleanup: migrating =========
                -- transaction()
                -- remove_column(:pages_deployments, :size)
                   -> 0.0004s
                -- rename_column(:pages_deployments, "size_for_type_change", :size)
                   -> 0.0021s
                   -> 0.0041s
                == 20201217112249 ChangePagesDeploymentSizeToBigintCleanup: migrated (0.0041s)

                == 20201217132603 CreateElasticReindexingSubtasks: migrating ==================
                -- table_exists?(:elastic_reindexing_subtasks)
                   -> 0.0005s
                -- create_table(:elastic_reindexing_subtasks)
                   -> 0.0088s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks\nADD CONSTRAINT check_a1fbd9faa9\nCHECK ( char_length(index_name_from) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks VALIDATE CONSTRAINT check_a1fbd9faa9;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks\nADD CONSTRAINT check_f456494bd8\nCHECK ( char_length(index_name_to) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks VALIDATE CONSTRAINT check_f456494bd8;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks\nADD CONSTRAINT check_4910adc798\nCHECK ( char_length(elastic_task) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks VALIDATE CONSTRAINT check_4910adc798;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks\nADD CONSTRAINT check_88f56216a4\nCHECK ( char_length(alias_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE elastic_reindexing_subtasks VALIDATE CONSTRAINT check_88f56216a4;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201217132603 CreateElasticReindexingSubtasks: migrated (0.0468s) =========

                == 20201218194311 CreateAdminNotes: migrating =================================
                -- create_table(:namespace_admin_notes, {})
                -- quote_column_name(:note)
                   -> 0.0000s
                   -> 0.0080s
                -- quote_table_name("check_e9d2e71b5d")
                   -> 0.0000s
                -- quote_table_name(:namespace_admin_notes)
                   -> 0.0000s
                -- execute("ALTER TABLE \"namespace_admin_notes\"\nADD CONSTRAINT \"check_e9d2e71b5d\" CHECK (char_length(\"note\") <= 1000)\n")
                   -> 0.0004s
                == 20201218194311 CreateAdminNotes: migrated (0.0098s) ========================

                == 20201221124036 AddDevopsSnapshotIndex: migrating ===========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:analytics_devops_adoption_snapshots, [:segment_id, :end_time], {:name=>"index_on_snapshots_segment_id_end_time", :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:analytics_devops_adoption_snapshots, [:segment_id, :end_time], {:name=>"index_on_snapshots_segment_id_end_time", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201221124036 AddDevopsSnapshotIndex: migrated (0.0059s) ==================

                == 20201221213415 ChangeClustersHelmMajorVersionDefaultTo3: migrating =========
                -- change_column_default(:clusters, :helm_major_version, {:from=>2, :to=>3})
                   -> 0.0021s
                == 20201221213415 ChangeClustersHelmMajorVersionDefaultTo3: migrated (0.0021s)

                == 20201221225303 AddServiceDeskReplyToIsNotNullIndexOnIssues: migrating ======
                == 20201221225303 AddServiceDeskReplyToIsNotNullIndexOnIssues: migrated (0.0000s)

                == 20201222151823 UpdateTrustedAppsToConfidential: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:oauth_applications, :id, {:where=>"trusted = true", :name=>"tmp_index_oauth_applications_on_id_where_trusted", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:oauth_applications, :id, {:where=>"trusted = true", :name=>"tmp_index_oauth_applications_on_id_where_trusted", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- execute("UPDATE oauth_applications SET confidential = true WHERE trusted = true")
                   -> 0.0004s
                == 20201222151823 UpdateTrustedAppsToConfidential: migrated (0.0069s) =========

                == 20201223012231 ReindexCiPipelinesOnScheduleIdAndId: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:pipeline_schedule_id, :id], {:name=>"index_ci_pipelines_on_pipeline_schedule_id_and_id", :algorithm=>:concurrently})
                   -> 0.0087s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:pipeline_schedule_id, :id], {:name=>"index_ci_pipelines_on_pipeline_schedule_id_and_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_pipelines)
                   -> 0.0087s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_pipelines, {:algorithm=>:concurrently, :name=>"index_ci_pipelines_on_pipeline_schedule_id"})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201223012231 ReindexCiPipelinesOnScheduleIdAndId: migrated (0.0259s) =====

                == 20201223114050 AddRestrictUserDefinedVariablesToProjectSettings: migrating =
                -- add_column(:project_ci_cd_settings, :restrict_user_defined_variables, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20201223114050 AddRestrictUserDefinedVariablesToProjectSettings: migrated (0.0022s)

                == 20201224144948 MigrateCoverageReportWorker: migrating ======================
                == 20201224144948 MigrateCoverageReportWorker: migrated (0.0002s) =============

                == 20201228110136 CreateIterationsCadence: migrating ==========================
                -- create_table(:iterations_cadences, {})
                -- quote_column_name(:title)
                   -> 0.0000s
                   -> 0.0089s
                -- quote_table_name("check_fedff82d3b")
                   -> 0.0000s
                -- quote_table_name(:iterations_cadences)
                   -> 0.0000s
                -- execute("ALTER TABLE \"iterations_cadences\"\nADD CONSTRAINT \"check_fedff82d3b\" CHECK (char_length(\"title\") <= 255)\n")
                   -> 0.0005s
                == 20201228110136 CreateIterationsCadence: migrated (0.0112s) =================

                == 20201228110238 AddIterationsCadenceToSprints: migrating ====================
                -- column_exists?(:sprints, :iterations_cadence_id)
                   -> 0.0014s
                -- add_column(:sprints, :iterations_cadence_id, :integer)
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:sprints, :iterations_cadence_id, {:name=>"index_sprints_iterations_cadence_id", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:sprints, :iterations_cadence_id, {:name=>"index_sprints_iterations_cadence_id", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:sprints)
                   -> 0.0037s
                -- execute("ALTER TABLE sprints\nADD CONSTRAINT fk_365d1db505\nFOREIGN KEY (iterations_cadence_id)\nREFERENCES iterations_cadences (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE sprints VALIDATE CONSTRAINT fk_365d1db505;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20201228110238 AddIterationsCadenceToSprints: migrated (0.0186s) ===========

                == 20201228184500 AddDismissalReasonIntoVulnerabilityFeedbackTable: migrating =
                -- add_column(:vulnerability_feedback, :dismissal_reason, :smallint)
                   -> 0.0006s
                == 20201228184500 AddDismissalReasonIntoVulnerabilityFeedbackTable: migrated (0.0006s)

                == 20201229105948 AddInvisibleCaptchaEnabledToSettings: migrating =============
                -- add_column(:application_settings, :invisible_captcha_enabled, :boolean, {:null=>false, :default=>false})
                   -> 0.0018s
                == 20201229105948 AddInvisibleCaptchaEnabledToSettings: migrated (0.0018s) ====

                == 20201230161206 AddRateLimitingResponseTextToApplicationSettings: migrating =
                -- add_column(:application_settings, :rate_limiting_response_text, :text)
                   -> 0.0010s
                == 20201230161206 AddRateLimitingResponseTextToApplicationSettings: migrated (0.0010s)

                == 20201230180202 CreateOnboardingProgress: migrating =========================
                -- create_table(:onboarding_progresses)
                   -> 0.0065s
                == 20201230180202 CreateOnboardingProgress: migrated (0.0078s) ================

                == 20201231133921 ScheduleSetDefaultIterationCadences: migrating ==============
                == 20201231133921 ScheduleSetDefaultIterationCadences: migrated (0.0000s) =====

                == 20210101110640 SetLimitForRateLimitingResponseText: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_7227fad848\nCHECK ( char_length(rate_limiting_response_text) <= 255 )\nNOT VALID;\n")
                   -> 0.0009s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_7227fad848;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210101110640 SetLimitForRateLimitingResponseText: migrated (0.0060s) =====

                == 20210102164121 DropTemporaryIndexOnCiBuilds: migrating =====================NOTICE:  trigger "trigger_9a96291bb38d" for relation "application_settings" does not exist, skipping
                NOTICE:  trigger "trigger_22a39c5c25f3" for relation "application_settings" does not exist, skipping
                NOTICE:  trigger "trigger_1572cbc9a15f" for relation "application_settings" does not exist, skipping

                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0118s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"tmp_build_stage_position_index"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210102164121 DropTemporaryIndexOnCiBuilds: migrated (0.0153s) ============

                == 20210104163218 AddEpicBoardPositionIndex: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:boards_epic_board_positions, [:epic_board_id, :epic_id, :relative_position], {:name=>"index_boards_epic_board_positions_on_scoped_relative_position", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:boards_epic_board_positions, [:epic_board_id, :epic_id, :relative_position], {:name=>"index_boards_epic_board_positions_on_scoped_relative_position", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210104163218 AddEpicBoardPositionIndex: migrated (0.0067s) ===============

                == 20210105030125 CleanupProjectsWithBadHasExternalWikiData: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, :id, {:where=>"(\n  \"projects\".\"has_external_wiki\" = TRUE\n)\nAND \"projects\".\"pending_delete\" = FALSE\nAND \"projects\".\"archived\" = FALSE\n", :name=>"tmp_index_projects_on_id_where_has_external_wiki_is_true", :algorithm=>:concurrently})
                   -> 0.0191s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, :id, {:where=>"(\n  \"projects\".\"has_external_wiki\" = TRUE\n)\nAND \"projects\".\"pending_delete\" = FALSE\nAND \"projects\".\"archived\" = FALSE\n", :name=>"tmp_index_projects_on_id_where_has_external_wiki_is_true", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:projects)
                   -> 0.0195s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:projects, {:algorithm=>:concurrently, :name=>"tmp_index_projects_on_id_where_has_external_wiki_is_true"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210105030125 CleanupProjectsWithBadHasExternalWikiData: migrated (0.0527s)

                == 20210105052034 RenameAssetProxyWhitelistOnApplicationSettings: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:application_settings)
                   -> 0.0573s
                -- column_exists?(:application_settings, :id)
                   -> 0.0587s
                -- column_exists?(:application_settings, :asset_proxy_allowlist)
                   -> 0.0572s
                -- columns(:application_settings)
                   -> 0.0579s
                -- add_column(:application_settings, :asset_proxy_allowlist, :text, {:limit=>nil, :precision=>nil, :scale=>nil})
                   -> 0.0014s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"application_settings\"")
                   -> 0.0008s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" ORDER BY \"application_settings\".\"id\" ASC LIMIT 1")
                   -> 0.0004s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" WHERE \"application_settings\".\"id\" >= 1 ORDER BY \"application_settings\".\"id\" ASC LIMIT 1 OFFSET 1")
                   -> 0.0005s
                -- execute("UPDATE \"application_settings\" SET \"asset_proxy_allowlist\" = \"application_settings\".\"asset_proxy_whitelist\" WHERE \"application_settings\".\"id\" >= 1")
                   -> 0.0010s
                -- indexes(:application_settings)
                   -> 0.0049s
                -- foreign_keys(:application_settings)
                   -> 0.0040s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:application_settings, :asset_proxy_whitelist)
                   -> 0.0591s
                -- column_exists?(:application_settings, :asset_proxy_allowlist)
                   -> 0.0594s
                -- current_schema()
                   -> 0.0002s
                -- quote_table_name(:application_settings)
                   -> 0.0000s
                -- quote_column_name(:asset_proxy_whitelist)
                   -> 0.0000s
                -- quote_column_name(:asset_proxy_allowlist)
                   -> 0.0000s
                -- execute("CREATE OR REPLACE FUNCTION function_for_trigger_9a96291bb38d()\nRETURNS trigger\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  IF NEW.\"asset_proxy_whitelist\" IS NULL AND NEW.\"asset_proxy_allowlist\" IS NOT NULL THEN\n    NEW.\"asset_proxy_whitelist\" = NEW.\"asset_proxy_allowlist\";\n  END IF;\n\n  IF NEW.\"asset_proxy_allowlist\" IS NULL AND NEW.\"asset_proxy_whitelist\" IS NOT NULL THEN\n    NEW.\"asset_proxy_allowlist\" = NEW.\"asset_proxy_whitelist\";\n  END IF;\n\n  RETURN NEW;\nEND\n$$;\n\nDROP TRIGGER IF EXISTS trigger_9a96291bb38d\nON \"application_settings\";\n\nCREATE TRIGGER trigger_9a96291bb38d\nBEFORE INSERT ON \"application_settings\"\nFOR EACH ROW EXECUTE FUNCTION function_for_trigger_9a96291bb38d();\n")
                   -> 0.0011s
                -- execute("CREATE OR REPLACE FUNCTION function_for_trigger_22a39c5c25f3()\nRETURNS trigger\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  NEW.\"asset_proxy_whitelist\" := NEW.\"asset_proxy_allowlist\";\n  RETURN NEW;\nEND\n$$;\n\nDROP TRIGGER IF EXISTS trigger_22a39c5c25f3\nON \"application_settings\";\n\nCREATE TRIGGER trigger_22a39c5c25f3\nBEFORE UPDATE OF \"asset_proxy_allowlist\" ON \"application_settings\"\nFOR EACH ROW EXECUTE FUNCTION function_for_trigger_22a39c5c25f3();\n")
                   -> 0.0009s
                -- execute("CREATE OR REPLACE FUNCTION function_for_trigger_1572cbc9a15f()\nRETURNS trigger\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  NEW.\"asset_proxy_allowlist\" := NEW.\"asset_proxy_whitelist\";\n  RETURN NEW;\nEND\n$$;\n\nDROP TRIGGER IF EXISTS trigger_1572cbc9a15f\nON \"application_settings\";\n\nCREATE TRIGGER trigger_1572cbc9a15f\nBEFORE UPDATE OF \"asset_proxy_whitelist\" ON \"application_settings\"\nFOR EACH ROW EXECUTE FUNCTION function_for_trigger_1572cbc9a15f();\n")
                   -> 0.0010s
                == 20210105052034 RenameAssetProxyWhitelistOnApplicationSettings: migrated (0.3879s)

                == 20210105052229 CleanUpAssetProxyWhitelistRenameOnApplicationSettings: migrating
                == 20210105052229 CleanUpAssetProxyWhitelistRenameOnApplicationSettings: migrated (0.0000s)

                == 20210105103649 DeleteColumnGroupIdOnComplianceFramework: migrating =========
                -- remove_column(:compliance_management_frameworks, :group_id, :bigint)
                   -> 0.0006s
                == 20210105103649 DeleteColumnGroupIdOnComplianceFramework: migrated (0.0006s)

                == 20210105153342 AddEntityColumnsToVulnerabilityOccurrences: migrating =======
                -- add_column(:vulnerability_occurrences, :description, :text)
                   -> 0.0007s
                -- add_column(:vulnerability_occurrences, :message, :text)
                   -> 0.0004s
                -- add_column(:vulnerability_occurrences, :solution, :text)
                   -> 0.0004s
                -- add_column(:vulnerability_occurrences, :cve, :text)
                   -> 0.0004s
                -- add_column(:vulnerability_occurrences, :location, :jsonb)
                   -> 0.0004s
                == 20210105153342 AddEntityColumnsToVulnerabilityOccurrences: migrated (0.0024s)

                == 20210105154321 AddTextLimitToVulnerabilityOccurrencesEntityColumns: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences\nADD CONSTRAINT check_ade261da6b\nCHECK ( char_length(description) <= 15000 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences VALIDATE CONSTRAINT check_ade261da6b;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences\nADD CONSTRAINT check_df6dd20219\nCHECK ( char_length(message) <= 3000 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences VALIDATE CONSTRAINT check_df6dd20219;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences\nADD CONSTRAINT check_4a3a60f2ba\nCHECK ( char_length(solution) <= 7000 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences VALIDATE CONSTRAINT check_4a3a60f2ba;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences\nADD CONSTRAINT check_f602da68dd\nCHECK ( char_length(cve) <= 48400 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_occurrences VALIDATE CONSTRAINT check_f602da68dd;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210105154321 AddTextLimitToVulnerabilityOccurrencesEntityColumns: migrated (0.0221s)

                == 20210106061254 AddUniqueIndexForGolangPackages: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_packages, [:project_id, :name, :version], {:unique=>true, :where=>"package_type = 8", :name=>"index_packages_on_project_id_name_version_unique_when_golang", :algorithm=>:concurrently})
                   -> 0.0048s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_packages, [:project_id, :name, :version], {:unique=>true, :where=>"package_type = 8", :name=>"index_packages_on_project_id_name_version_unique_when_golang", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210106061254 AddUniqueIndexForGolangPackages: migrated (0.0093s) =========

                == 20210106153021 DropTmpIndexOnEmails: migrating =============================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:emails)
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:emails, {:algorithm=>:concurrently, :name=>"tmp_index_for_email_unconfirmation_migration"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210106153021 DropTmpIndexOnEmails: migrated (0.0070s) ====================

                == 20210106155209 AddMergeRequestDiffCommitTrailers: migrating ================
                -- add_column(:merge_request_diff_commits, :trailers, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0008s
                == 20210106155209 AddMergeRequestDiffCommitTrailers: migrated (0.0021s) =======

                == 20210106191305 RenameIndexesOnGitLabCom: migrating =========================
                -- indexes(:ldap_group_links)
                   -> 0.0010s
                -- current_schema()
                   -> 0.0002s
                -- indexes(:emails)
                   -> 0.0022s
                -- current_schema()
                   -> 0.0002s
                -- indexes(:users)
                   -> 0.0098s
                -- current_schema()
                   -> 0.0002s
                -- indexes(:users)
                   -> 0.0094s
                -- current_schema()
                   -> 0.0002s
                -- indexes(:users)
                   -> 0.0094s
                -- current_schema()
                   -> 0.0002s
                -- indexes(:schema_migrations)
                   -> 0.0009s
                -- current_schema()
                   -> 0.0002s
                == 20210106191305 RenameIndexesOnGitLabCom: migrated (0.0403s) ================

                == 20210106225424 AddKeepLatestArtifactsToApplicationSettings: migrating ======
                -- add_column(:application_settings, :keep_latest_artifact, :boolean, {:default=>true, :null=>false})
                   -> 0.0018s
                == 20210106225424 AddKeepLatestArtifactsToApplicationSettings: migrated (0.0018s)

                == 20210107105306 AddDiffTypeToMergeRequestDiffs: migrating ===================
                -- column_exists?(:merge_request_diffs, :diff_type)
                   -> 0.0017s
                -- add_column(:merge_request_diffs, :diff_type, :integer, {:null=>false, :limit=>2, :default=>1})
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_request_diffs, :merge_request_id, {:unique=>true, :where=>"diff_type = 2", :name=>"index_merge_request_diffs_on_unique_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_request_diffs, :merge_request_id, {:unique=>true, :where=>"diff_type = 2", :name=>"index_merge_request_diffs_on_unique_merge_request_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210107105306 AddDiffTypeToMergeRequestDiffs: migrated (0.0109s) ==========

                == 20210107154615 AddMergeRequestContextCommitTrailers: migrating =============
                -- add_column(:merge_request_context_commits, :trailers, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0009s
                == 20210107154615 AddMergeRequestContextCommitTrailers: migrated (0.0010s) ====

                == 20210107194543 RemoveAlertsServiceRecords: migrating =======================
                == 20210107194543 RemoveAlertsServiceRecords: migrated (0.0016s) ==============

                == 20210108161039 UpdateMaxImportSizeDefault: migrating =======================
                -- change_column_default(:application_settings, :max_import_size, {:from=>50, :to=>0})
                   -> 0.0596s
                == 20210108161039 UpdateMaxImportSizeDefault: migrated (0.0596s) ==============

                == 20210111051045 CreateDastProfiles: migrating ===============================
                -- create_table(:dast_profiles, {:comment=>"{\"owner\":\"group::dynamic analysis\",\"description\":\"Profile used to run a DAST on-demand scan\"}"})
                -- quote_column_name(:name)
                   -> 0.0000s
                -- quote_column_name(:description)
                   -> 0.0000s
                   -> 0.0140s
                -- quote_table_name("check_5fcf73bf61")
                   -> 0.0000s
                -- quote_table_name("check_c34e505c24")
                   -> 0.0000s
                -- quote_table_name(:dast_profiles)
                   -> 0.0000s
                -- execute("ALTER TABLE \"dast_profiles\"\nADD CONSTRAINT \"check_5fcf73bf61\" CHECK (char_length(\"name\") <= 255),\nADD CONSTRAINT \"check_c34e505c24\" CHECK (char_length(\"description\") <= 255)\n")
                   -> 0.0006s
                == 20210111051045 CreateDastProfiles: migrated (0.0161s) ======================

                == 20210111053308 AddProjectFkForDastProfile: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:dast_profiles)
                   -> 0.0037s
                -- execute("ALTER TABLE dast_profiles\nADD CONSTRAINT fk_aa76ef30e9\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_profiles VALIDATE CONSTRAINT fk_aa76ef30e9;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210111053308 AddProjectFkForDastProfile: migrated (0.0087s) ==============

                == 20210111075104 AddTemporaryIndexOnSecurityFindingsScanId: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:security_findings, :scan_id, {:where=>"uuid is null", :name=>"tmp_index_on_security_findings_scan_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:security_findings, :scan_id, {:where=>"uuid is null", :name=>"tmp_index_on_security_findings_scan_id", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210111075104 AddTemporaryIndexOnSecurityFindingsScanId: migrated (0.0078s)

                == 20210111075105 ScheduleUuidPopulationForSecurityFindings: migrating ========
                == 20210111075105 ScheduleUuidPopulationForSecurityFindings: migrated (0.0000s)

                == 20210111075206 ScheduleUuidPopulationForSecurityFindings2: migrating =======
                == 20210111075206 ScheduleUuidPopulationForSecurityFindings2: migrated (0.0017s)

                == 20210112084512 DropTmpIndexOnEmailsAgain: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:emails)
                   -> 0.0022s
                -- current_schema()
                   -> 0.0002s
                == 20210112084512 DropTmpIndexOnEmailsAgain: migrated (0.0041s) ===============

                == 20210112143418 RemoveDuplicateServices2: migrating =========================
                == 20210112143418 RemoveDuplicateServices2: migrated (0.0034s) ================

                == 20210112202949 CreateComposerCacheFile: migrating ==========================
                -- create_table(:packages_composer_cache_files, {})
                -- quote_column_name(:file)
                   -> 0.0000s
                   -> 0.0087s
                -- quote_table_name("check_84f5ba81f5")
                   -> 0.0000s
                -- quote_table_name(:packages_composer_cache_files)
                   -> 0.0000s
                -- execute("ALTER TABLE \"packages_composer_cache_files\"\nADD CONSTRAINT \"check_84f5ba81f5\" CHECK (char_length(\"file\") <= 255)\n")
                   -> 0.0004s
                == 20210112202949 CreateComposerCacheFile: migrated (0.0106s) =================

                == 20210113224909 AddPipelineConfigurationFullPathToCompliancePipeline: migrating
                -- add_column(:compliance_management_frameworks, :pipeline_configuration_full_path, :text)
                   -> 0.0008s
                == 20210113224909 AddPipelineConfigurationFullPathToCompliancePipeline: migrated (0.0009s)

                == 20210113231532 AddConvertedAtToExperimentSubjects: migrating ===============
                -- add_column(:experiment_subjects, :converted_at, :datetime_with_timezone)
                   -> 0.0006s
                == 20210113231532 AddConvertedAtToExperimentSubjects: migrated (0.0007s) ======

                == 20210113231546 AddContextToExperimentSubjects: migrating ===================
                -- add_column(:experiment_subjects, :context, :jsonb, {:default=>{}, :null=>false})
                   -> 0.0028s
                == 20210113231546 AddContextToExperimentSubjects: migrated (0.0049s) ==========

                == 20210114033715 RemoveGroupIdTitleIndex: migrating ==========================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:labels)
                   -> 0.0042s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:labels, {:algorithm=>:concurrently, :name=>"index_labels_on_group_id_and_title_with_null_project_id"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210114033715 RemoveGroupIdTitleIndex: migrated (0.0078s) =================

                == 20210114142443 AddIndexesToOnboardingProgresses: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:onboarding_progresses, :created_at, {:where=>"git_write_at IS NULL", :name=>"index_onboarding_progresses_for_create_track", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:onboarding_progresses, :created_at, {:where=>"git_write_at IS NULL", :name=>"index_onboarding_progresses_for_create_track", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:onboarding_progresses, :git_write_at, {:where=>"git_write_at IS NOT NULL AND pipeline_created_at IS NULL", :name=>"index_onboarding_progresses_for_verify_track", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:onboarding_progresses, :git_write_at, {:where=>"git_write_at IS NOT NULL AND pipeline_created_at IS NULL", :name=>"index_onboarding_progresses_for_verify_track", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:onboarding_progresses, "GREATEST(git_write_at, pipeline_created_at)", {:where=>"git_write_at IS NOT NULL AND pipeline_created_at IS NOT NULL AND trial_started_at IS NULL", :name=>"index_onboarding_progresses_for_trial_track", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:onboarding_progresses, "GREATEST(git_write_at, pipeline_created_at)", {:where=>"git_write_at IS NOT NULL AND pipeline_created_at IS NOT NULL AND trial_started_at IS NULL", :name=>"index_onboarding_progresses_for_trial_track", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:onboarding_progresses, "GREATEST(git_write_at, pipeline_created_at, trial_started_at)", {:where=>"git_write_at IS NOT NULL AND pipeline_created_at IS NOT NULL AND trial_started_at IS NOT NULL AND user_added_at IS NULL", :name=>"index_onboarding_progresses_for_team_track", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0003s
                -- add_index(:onboarding_progresses, "GREATEST(git_write_at, pipeline_created_at, trial_started_at)", {:where=>"git_write_at IS NOT NULL AND pipeline_created_at IS NOT NULL AND trial_started_at IS NOT NULL AND user_added_at IS NULL", :name=>"index_onboarding_progresses_for_team_track", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20210114142443 AddIndexesToOnboardingProgresses: migrated (0.0253s) ========

                == 20210115090452 CreateGroupRepositoryStorageMove: migrating =================
                -- table_exists?(:group_repository_storage_moves)
                   -> 0.0005s
                -- create_table(:group_repository_storage_moves)
                   -> 0.0079s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE group_repository_storage_moves\nADD CONSTRAINT group_repository_storage_moves_source_storage_name\nCHECK ( char_length(source_storage_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE group_repository_storage_moves VALIDATE CONSTRAINT group_repository_storage_moves_source_storage_name;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE group_repository_storage_moves\nADD CONSTRAINT group_repository_storage_moves_destination_storage_name\nCHECK ( char_length(destination_storage_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE group_repository_storage_moves VALIDATE CONSTRAINT group_repository_storage_moves_destination_storage_name;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210115090452 CreateGroupRepositoryStorageMove: migrated (0.0204s) ========

                == 20210115215854 CancelArtifactExpiryBackfill: migrating =====================
                == 20210115215854 CancelArtifactExpiryBackfill: migrated (0.0011s) ============

                == 20210115220610 ScheduleArtifactExpiryBackfill: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_job_artifacts)
                   -> 0.0040s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_job_artifacts, {:algorithm=>:concurrently, :name=>"expired_artifacts_temp_index"})
                   -> 0.0030s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_job_artifacts, [:id, :created_at], {:where=>"expire_at IS NULL AND date(created_at AT TIME ZONE 'UTC') < '2020-06-22'::date", :name=>"expired_artifacts_temp_index", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_job_artifacts, [:id, :created_at], {:where=>"expire_at IS NULL AND date(created_at AT TIME ZONE 'UTC') < '2020-06-22'::date", :name=>"expired_artifacts_temp_index", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- Scheduled 0 BackfillArtifactExpiryDate jobs with a maximum of 200000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:08 +0800."
                == 20210115220610 ScheduleArtifactExpiryBackfill: migrated (0.0315s) ==========

                == 20210117210226 AddHasExternalIssueTrackerTrigger: migrating ================
                -- execute("CREATE OR REPLACE FUNCTION set_has_external_issue_tracker()\nRETURNS TRIGGER AS\n$$\nBEGIN\nUPDATE projects SET has_external_issue_tracker = (\n  EXISTS\n  (\n    SELECT 1\n    FROM services\n    WHERE project_id = COALESCE(NEW.project_id, OLD.project_id)\n      AND active = TRUE\n      AND category = 'issue_tracker'\n  )\n)\nWHERE projects.id = COALESCE(NEW.project_id, OLD.project_id);\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0007s
                -- execute("CREATE TRIGGER trigger_has_external_issue_tracker_on_insert\nAFTER INSERT ON services\nFOR EACH ROW\nWHEN (NEW.category = 'issue_tracker' AND NEW.active = TRUE AND NEW.project_id IS NOT NULL)\nEXECUTE FUNCTION set_has_external_issue_tracker();\n")
                   -> 0.0004s
                -- execute("CREATE TRIGGER trigger_has_external_issue_tracker_on_update\nAFTER UPDATE ON services\nFOR EACH ROW\nWHEN (NEW.category = 'issue_tracker' AND OLD.active != NEW.active AND NEW.project_id IS NOT NULL)\nEXECUTE FUNCTION set_has_external_issue_tracker();\n")
                   -> 0.0004s
                -- execute("CREATE TRIGGER trigger_has_external_issue_tracker_on_delete\nAFTER DELETE ON services\nFOR EACH ROW\nWHEN (OLD.category = 'issue_tracker' AND OLD.active = TRUE AND OLD.project_id IS NOT NULL)\nEXECUTE FUNCTION set_has_external_issue_tracker();\n")
                   -> 0.0004s
                == 20210117210226 AddHasExternalIssueTrackerTrigger: migrated (0.0020s) =======

                == 20210118111307 AddEnforceSshKeyExpirationToApplicationSettings: migrating ==
                -- add_column(:application_settings, :enforce_ssh_key_expiration, :boolean, {:default=>false, :null=>false})
                   -> 0.0018s
                == 20210118111307 AddEnforceSshKeyExpirationToApplicationSettings: migrated (0.0018s)

                == 20210119122354 AlterVsaIssueFirstMentionedInCommitValue: migrating =========
                == 20210119122354 AlterVsaIssueFirstMentionedInCommitValue: migrated (0.0135s)

                == 20210119153801 AddProxySettingsToJiraTrackerData: migrating ================
                -- add_column(:jira_tracker_data, :encrypted_proxy_address, :text)
                   -> 0.0007s
                -- add_column(:jira_tracker_data, :encrypted_proxy_address_iv, :text)
                   -> 0.0004s
                -- add_column(:jira_tracker_data, :encrypted_proxy_port, :text)
                   -> 0.0004s
                -- add_column(:jira_tracker_data, :encrypted_proxy_port_iv, :text)
                   -> 0.0004s
                -- add_column(:jira_tracker_data, :encrypted_proxy_username, :text)
                   -> 0.0004s
                -- add_column(:jira_tracker_data, :encrypted_proxy_username_iv, :text)
                   -> 0.0004s
                -- add_column(:jira_tracker_data, :encrypted_proxy_password, :text)
                   -> 0.0004s
                -- add_column(:jira_tracker_data, :encrypted_proxy_password_iv, :text)
                   -> 0.0004s
                == 20210119153801 AddProxySettingsToJiraTrackerData: migrated (0.0054s) =======

                == 20210119162812 AddTextLimitToCompliancePipelineConfigurationFullPath: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks\nADD CONSTRAINT check_e7a9972435\nCHECK ( char_length(pipeline_configuration_full_path) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE compliance_management_frameworks VALIDATE CONSTRAINT check_e7a9972435;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20210119162812 AddTextLimitToCompliancePipelineConfigurationFullPath: migrated (0.0057s)

                == 20210120180956 ExtendIndexOnCiBuildsMetadata: migrating ====================
                -- indexes(:ci_builds_metadata)
                   -> 0.0027s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("CREATE INDEX CONCURRENTLY index_ci_builds_metadata_on_build_id_and_id_and_interruptible\nON ci_builds_metadata (build_id) INCLUDE (id)\nWHERE interruptible = true\n")
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds_metadata)
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds_metadata, {:algorithm=>:concurrently, :name=>:index_ci_builds_metadata_on_build_id_and_interruptible})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210120180956 ExtendIndexOnCiBuildsMetadata: migrated (0.0134s) ===========

                == 20210120221743 DeleteOauthApplicationsTmpIndex: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:oauth_applications)
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:oauth_applications, {:algorithm=>:concurrently, :name=>"tmp_index_oauth_applications_on_id_where_trusted"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210120221743 DeleteOauthApplicationsTmpIndex: migrated (0.0059s) =========

                == 20210121093618 RemoveRepositoryReadOnlyToGroups: migrating =================
                -- column_exists?(:namespaces, :repository_read_only)
                   -> 0.0026s
                == 20210121093618 RemoveRepositoryReadOnlyToGroups: migrated (0.0026s) ========

                == 20210121100038 AddDevopsAdoptionGroupSegment: migrating ====================
                -- add_column(:analytics_devops_adoption_segments, :namespace_id, :integer, {:if_not_exists=>true})
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:analytics_devops_adoption_segments, :namespace_id, {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:analytics_devops_adoption_segments, :namespace_id, {:unique=>true, :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210121100038 AddDevopsAdoptionGroupSegment: migrated (0.0068s) ===========

                == 20210121121102 OptionalDevopsAdoptionSegmentName: migrating ================
                -- change_column_null(:analytics_devops_adoption_segments, :name, true)
                   -> 0.0006s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:analytics_devops_adoption_segments)
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:analytics_devops_adoption_segments, {:algorithm=>:concurrently, :name=>"index_analytics_devops_adoption_segments_on_name"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210121121102 OptionalDevopsAdoptionSegmentName: migrated (0.0060s) =======

                == 20210122073805 AddRepositoryReadOnlyToNamespaceSettings: migrating =========
                -- add_column(:namespace_settings, :repository_read_only, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20210122073805 AddRepositoryReadOnlyToNamespaceSettings: migrated (0.0023s)

                == 20210122153259 AddStateToMergeRequestReviewers: migrating ==================
                -- add_column(:merge_request_reviewers, :state, :smallint, {:default=>0, :null=>false})
                   -> 0.0010s
                == 20210122153259 AddStateToMergeRequestReviewers: migrated (0.0010s) =========

                == 20210122155158 AddPipelineStepToBulkImportsFailures: migrating =============
                -- column_exists?(:bulk_import_failures, :pipeline_step, :text)
                   -> 0.0013s
                -- add_column(:bulk_import_failures, :pipeline_step, :text)
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures\nADD CONSTRAINT check_721a422375\nCHECK ( char_length(pipeline_step) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_failures VALIDATE CONSTRAINT check_721a422375;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210122155158 AddPipelineStepToBulkImportsFailures: migrated (0.0086s) ====

                == 20210125105410 AddDevopsAdoptionSegmentNamespaceFk: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:analytics_devops_adoption_segments)
                   -> 0.0036s
                -- execute("ALTER TABLE analytics_devops_adoption_segments\nADD CONSTRAINT fk_f5aa768998\nFOREIGN KEY (namespace_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segments VALIDATE CONSTRAINT fk_f5aa768998;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210125105410 AddDevopsAdoptionSegmentNamespaceFk: migrated (0.0081s) =====

                == 20210126030249 AddSecurityDashboardAccessLevelIntoProjectFeatures: migrating
                -- add_column(:project_features, :security_and_compliance_access_level, :integer, {:default=>10, :null=>false})
                   -> 0.0008s
                == 20210126030249 AddSecurityDashboardAccessLevelIntoProjectFeatures: migrated (0.0021s)

                == 20210126091713 AddUniqueIndexServicesProjectIdAndType: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:services, [:project_id, :type], {:name=>"index_services_on_project_id_and_type_unique", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:services, [:project_id, :type], {:name=>"index_services_on_project_id_and_type_unique", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210126091713 AddUniqueIndexServicesProjectIdAndType: migrated (0.0087s) ==

                == 20210126092102 RemoveIndexServicesProjectIdAndType: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:services)
                   -> 0.0044s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:services, {:algorithm=>:concurrently, :name=>"index_services_on_project_id_and_type"})
                   -> 0.0026s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210126092102 RemoveIndexServicesProjectIdAndType: migrated (0.0078s) =====

                == 20210126233608 AddRubygemsMaxFileSizeToPlanLimits: migrating ===============
                -- add_column(:plan_limits, :rubygems_max_file_size, :bigint, {:default=>3221225472, :null=>false})
                   -> 0.0012s
                == 20210126233608 AddRubygemsMaxFileSizeToPlanLimits: migrated (0.0013s) ======

                == 20210127052226 AddSubgroupEventsToWebHooks: migrating ======================
                -- add_column(:web_hooks, :subgroup_events, :boolean, {:null=>false, :default=>false})
                   -> 0.0011s
                == 20210127052226 AddSubgroupEventsToWebHooks: migrated (0.0011s) =============

                == 20210127143025 AddOldestMergeRequestsIndex: migrating ======================
                == 20210127143025 AddOldestMergeRequestsIndex: migrated (0.0000s) =============

                == 20210127152613 AddIterationsCadenceDateRangeConstraint: migrating ==========
                -- execute("ALTER TABLE sprints\n  ADD CONSTRAINT iteration_start_and_due_date_iterations_cadence_id_constraint\n  EXCLUDE USING gist\n  ( iterations_cadence_id WITH =,\n    daterange(start_date, due_date, '[]') WITH &&\n  )\n  WHERE (group_id IS NOT NULL)\n")
                   -> 0.0012s
                == 20210127152613 AddIterationsCadenceDateRangeConstraint: migrated (0.0046s) =

                == 20210127202613 RemoveIterationGroupDateRangeConstraint: migrating ==========
                -- execute("ALTER TABLE sprints\n  DROP CONSTRAINT IF EXISTS iteration_start_and_due_daterange_group_id_constraint\n")
                   -> 0.0005s
                == 20210127202613 RemoveIterationGroupDateRangeConstraint: migrated (0.0019s) =

                == 20210128044930 AddGitTwoFactorSessionExpiryToApplicationSettings: migrating
                -- add_column(:application_settings, :git_two_factor_session_expiry, :integer, {:default=>15, :null=>false})
                   -> 0.0019s
                == 20210128044930 AddGitTwoFactorSessionExpiryToApplicationSettings: migrated (0.0020s)

                == 20210128101707 AddPreventMergeWithoutJiraIssueToProjectSettings: migrating =
                -- add_column(:project_settings, :prevent_merge_without_jira_issue, :boolean, {:null=>false, :default=>false})
                   -> 0.0008s
                == 20210128101707 AddPreventMergeWithoutJiraIssueToProjectSettings: migrated (0.0021s)

                == 20210128114526 AddAutoDeleteAtToEnvironments: migrating ====================
                -- add_column(:environments, :auto_delete_at, :datetime_with_timezone)
                   -> 0.0004s
                == 20210128114526 AddAutoDeleteAtToEnvironments: migrated (0.0017s) ===========

                == 20210128140157 AddContentTypeToDependencyProxyManifests: migrating =========
                -- add_column(:dependency_proxy_manifests, :content_type, :text)
                   -> 0.0006s
                == 20210128140157 AddContentTypeToDependencyProxyManifests: migrated (0.0006s)

                == 20210128140232 AddTextLimitToDependencyProxyManifestsContentType: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests\nADD CONSTRAINT check_167a9a8a91\nCHECK ( char_length(content_type) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dependency_proxy_manifests VALIDATE CONSTRAINT check_167a9a8a91;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210128140232 AddTextLimitToDependencyProxyManifestsContentType: migrated (0.0052s)

                == 20210128152830 CreateCiNamespaceMonthlyUsage: migrating ====================
                -- create_table(:ci_namespace_monthly_usages, {:if_not_exists=>true})
                   -> 0.0067s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_namespace_monthly_usages\nADD CONSTRAINT ci_namespace_monthly_usages_year_month_constraint\nCHECK ( (date = date_trunc('month', date)) )\nNOT VALID;\n")
                   -> 0.0006s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0003s
                -- execute("ALTER TABLE ci_namespace_monthly_usages VALIDATE CONSTRAINT ci_namespace_monthly_usages_year_month_constraint;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210128152830 CreateCiNamespaceMonthlyUsage: migrated (0.0135s) ===========

                == 20210128172149 CreateBackgroundMigrationTrackingTables: migrating ==========
                -- create_table(:batched_background_migrations, {})
                -- quote_column_name(:job_class_name)
                   -> 0.0000s
                -- quote_column_name(:batch_class_name)
                   -> 0.0000s
                -- quote_column_name(:table_name)
                   -> 0.0000s
                -- quote_column_name(:column_name)
                   -> 0.0000s
                   -> 0.0085s
                -- quote_table_name("check_e6c75b1e29")
                   -> 0.0000s
                -- quote_table_name("check_fe10674721")
                   -> 0.0000s
                -- quote_table_name("check_6b6a06254a")
                   -> 0.0000s
                -- quote_table_name("check_5bb0382d6f")
                   -> 0.0000s
                -- quote_table_name(:check_positive_min_value)
                   -> 0.0000s
                -- quote_table_name(:check_max_value_in_range)
                   -> 0.0000s
                -- quote_table_name(:check_positive_sub_batch_size)
                   -> 0.0000s
                -- quote_table_name(:check_batch_size_in_range)
                   -> 0.0000s
                -- quote_table_name(:batched_background_migrations)
                   -> 0.0000s
                -- execute("ALTER TABLE \"batched_background_migrations\"\nADD CONSTRAINT \"check_e6c75b1e29\" CHECK (char_length(\"job_class_name\") <= 100),\nADD CONSTRAINT \"check_fe10674721\" CHECK (char_length(\"batch_class_name\") <= 100),\nADD CONSTRAINT \"check_6b6a06254a\" CHECK (char_length(\"table_name\") <= 63),\nADD CONSTRAINT \"check_5bb0382d6f\" CHECK (char_length(\"column_name\") <= 63),\nADD CONSTRAINT \"check_positive_min_value\" CHECK (min_value > 0),\nADD CONSTRAINT \"check_max_value_in_range\" CHECK (max_value >= min_value),\nADD CONSTRAINT \"check_positive_sub_batch_size\" CHECK (sub_batch_size > 0),\nADD CONSTRAINT \"check_batch_size_in_range\" CHECK (batch_size >= sub_batch_size)\n")
                   -> 0.0012s
                -- create_table(:batched_background_migration_jobs)
                   -> 0.0065s
                == 20210128172149 CreateBackgroundMigrationTrackingTables: migrated (0.0178s) =

                == 20210129225244 AddIndexToOncallShftsOnStartsAtAndEndsAt: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:incident_management_oncall_shifts, [:rotation_id, :starts_at, :ends_at], {:name=>"index_oncall_shifts_on_rotation_id_and_starts_at_and_ends_at", :algorithm=>:concurrently})
                   -> 0.0021s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:incident_management_oncall_shifts, [:rotation_id, :starts_at, :ends_at], {:name=>"index_oncall_shifts_on_rotation_id_and_starts_at_and_ends_at", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:incident_management_oncall_shifts)
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:incident_management_oncall_shifts, {:algorithm=>:concurrently, :name=>"index_incident_management_oncall_shifts_on_rotation_id"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210129225244 AddIndexToOncallShftsOnStartsAtAndEndsAt: migrated (0.0119s)

                == 20210201034649 AddActivePeriodsToOnCallRotations: migrating ================
                -- add_column(:incident_management_oncall_rotations, :active_period_start, :time, {:null=>true})
                   -> 0.0007s
                -- add_column(:incident_management_oncall_rotations, :active_period_end, :time, {:null=>true})
                   -> 0.0004s
                == 20210201034649 AddActivePeriodsToOnCallRotations: migrated (0.0011s) =======

                == 20210201140434 AddOldestMergeRequestsIndexAgain: migrating =================
                -- execute("SELECT pg_class.relname\nFROM pg_class, pg_index\nWHERE pg_index.indisvalid = false\nAND pg_index.indexrelid = pg_class.oid\nAND pg_class.relname = 'index_on_merge_requests_for_latest_diffs';\n")
                   -> 0.0005s
                -- indexes("merge_requests")
                   -> 0.0120s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("CREATE INDEX CONCURRENTLY index_on_merge_requests_for_latest_diffs ON merge_requests USING btree (target_project_id) INCLUDE (id, latest_merge_request_diff_id)")
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- execute("COMMENT ON INDEX index_on_merge_requests_for_latest_diffs IS 'Index used to efficiently obtain the oldest merge request for a commit SHA'")
                   -> 0.0005s
                == 20210201140434 AddOldestMergeRequestsIndexAgain: migrated (0.0177s) ========

                == 20210203002331 DropBackupLabelIndex: migrating =============================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:backup_labels)
                   -> 0.0038s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:backup_labels, {:algorithm=>:concurrently, :name=>"backup_labels_project_id_title_idx"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210203002331 DropBackupLabelIndex: migrated (0.0074s) ====================

                == 20210203092540 RemoveHasExternalWikiConstraint: migrating ==================
                -- current_schema()
                   -> 0.0002s
                == 20210203092540 RemoveHasExternalWikiConstraint: migrated (0.0011s) =========

                == 20210203092549 RestoreHasExternalWikiDefaultValue: migrating ===============
                == 20210203092549 RestoreHasExternalWikiDefaultValue: migrated (0.0017s) ======

                == 20210203143131 MigrateExistingDevopsSegmentsToGroups: migrating ============
                == 20210203143131 MigrateExistingDevopsSegmentsToGroups: migrated (0.0006s) ===

                == 20210203221631 CreatePackagesRubygemsMetadata: migrating ===================
                -- create_table(:packages_rubygems_metadata, {:id=>false})
                -- quote_column_name(:authors)
                   -> 0.0000s
                -- quote_column_name(:files)
                   -> 0.0000s
                -- quote_column_name(:summary)
                   -> 0.0000s
                -- quote_column_name(:description)
                   -> 0.0000s
                -- quote_column_name(:email)
                   -> 0.0000s
                -- quote_column_name(:homepage)
                   -> 0.0000s
                -- quote_column_name(:licenses)
                   -> 0.0000s
                -- quote_column_name(:metadata)
                   -> 0.0000s
                -- quote_column_name(:author)
                   -> 0.0000s
                -- quote_column_name(:bindir)
                   -> 0.0000s
                -- quote_column_name(:cert_chain)
                   -> 0.0000s
                -- quote_column_name(:executables)
                   -> 0.0000s
                -- quote_column_name(:extensions)
                   -> 0.0000s
                -- quote_column_name(:extra_rdoc_files)
                   -> 0.0000s
                -- quote_column_name(:platform)
                   -> 0.0000s
                -- quote_column_name(:post_install_message)
                   -> 0.0000s
                -- quote_column_name(:rdoc_options)
                   -> 0.0000s
                -- quote_column_name(:require_paths)
                   -> 0.0000s
                -- quote_column_name(:required_ruby_version)
                   -> 0.0000s
                -- quote_column_name(:required_rubygems_version)
                   -> 0.0000s
                -- quote_column_name(:requirements)
                   -> 0.0000s
                -- quote_column_name(:rubygems_version)
                   -> 0.0000s
                -- quote_column_name(:signing_key)
                   -> 0.0000s
                   -> 0.0077s
                -- quote_table_name("check_994b68eb64")
                   -> 0.0000s
                -- quote_table_name("check_b0f4f8c853")
                   -> 0.0000s
                -- quote_table_name("check_8be21d92e7")
                   -> 0.0000s
                -- quote_table_name("check_0154a18c82")
                   -> 0.0000s
                -- quote_table_name("check_22814c771b")
                   -> 0.0000s
                -- quote_table_name("check_946cb96acb")
                   -> 0.0000s
                -- quote_table_name("check_7cb01436df")
                   -> 0.0000s
                -- quote_table_name("check_ea02f4800f")
                   -> 0.0000s
                -- quote_table_name("check_b7b296b420")
                   -> 0.0000s
                -- quote_table_name("check_9824fc9efc")
                   -> 0.0000s
                -- quote_table_name("check_6ff3abe325")
                   -> 0.0000s
                -- quote_table_name("check_5988451714")
                   -> 0.0000s
                -- quote_table_name("check_242293030e")
                   -> 0.0000s
                -- quote_table_name("check_6ac7043c50")
                   -> 0.0000s
                -- quote_table_name("check_5f9c84ea17")
                   -> 0.0000s
                -- quote_table_name("check_3d1b6f3a39")
                   -> 0.0000s
                -- quote_table_name("check_bf16b21a47")
                   -> 0.0000s
                -- quote_table_name("check_f76bad1a9a")
                   -> 0.0000s
                -- quote_table_name("check_ca641a3354")
                   -> 0.0000s
                -- quote_table_name("check_545f7606f9")
                   -> 0.0000s
                -- quote_table_name("check_64f1cecf05")
                   -> 0.0000s
                -- quote_table_name("check_27619a7922")
                   -> 0.0000s
                -- quote_table_name("check_9d42fa48ae")
                   -> 0.0000s
                -- quote_table_name(:packages_rubygems_metadata)
                   -> 0.0000s
                -- execute("ALTER TABLE \"packages_rubygems_metadata\"\nADD CONSTRAINT \"check_994b68eb64\" CHECK (char_length(\"authors\") <= 255),\nADD CONSTRAINT \"check_b0f4f8c853\" CHECK (char_length(\"files\") <= 255),\nADD CONSTRAINT \"check_8be21d92e7\" CHECK (char_length(\"summary\") <= 1024),\nADD CONSTRAINT \"check_0154a18c82\" CHECK (char_length(\"description\") <= 1024),\nADD CONSTRAINT \"check_22814c771b\" CHECK (char_length(\"email\") <= 255),\nADD CONSTRAINT \"check_946cb96acb\" CHECK (char_length(\"homepage\") <= 255),\nADD CONSTRAINT \"check_7cb01436df\" CHECK (char_length(\"licenses\") <= 255),\nADD CONSTRAINT \"check_ea02f4800f\" CHECK (char_length(\"metadata\") <= 255),\nADD CONSTRAINT \"check_b7b296b420\" CHECK (char_length(\"author\") <= 255),\nADD CONSTRAINT \"check_9824fc9efc\" CHECK (char_length(\"bindir\") <= 255),\nADD CONSTRAINT \"check_6ff3abe325\" CHECK (char_length(\"cert_chain\") <= 255),\nADD CONSTRAINT \"check_5988451714\" CHECK (char_length(\"executables\") <= 255),\nADD CONSTRAINT \"check_242293030e\" CHECK (char_length(\"extensions\") <= 255),\nADD CONSTRAINT \"check_6ac7043c50\" CHECK (char_length(\"extra_rdoc_files\") <= 255),\nADD CONSTRAINT \"check_5f9c84ea17\" CHECK (char_length(\"platform\") <= 255),\nADD CONSTRAINT \"check_3d1b6f3a39\" CHECK (char_length(\"post_install_message\") <= 255),\nADD CONSTRAINT \"check_bf16b21a47\" CHECK (char_length(\"rdoc_options\") <= 255),\nADD CONSTRAINT \"check_f76bad1a9a\" CHECK (char_length(\"require_paths\") <= 255),\nADD CONSTRAINT \"check_ca641a3354\" CHECK (char_length(\"required_ruby_version\") <= 255),\nADD CONSTRAINT \"check_545f7606f9\" CHECK (char_length(\"required_rubygems_version\") <= 255),\nADD CONSTRAINT \"check_64f1cecf05\" CHECK (char_length(\"requirements\") <= 255),\nADD CONSTRAINT \"check_27619a7922\" CHECK (char_length(\"rubygems_version\") <= 255),\nADD CONSTRAINT \"check_9d42fa48ae\" CHECK (char_length(\"signing_key\") <= 255)\n")
                   -> 0.0030s
                == 20210203221631 CreatePackagesRubygemsMetadata: migrated (0.0128s) ==========

                == 20210203222620 AddExpiredIndexToComposerCacheFiles: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_composer_cache_files, [:delete_at, :id], {:name=>"composer_cache_files_index_on_deleted_at", :algorithm=>:concurrently})
                   -> 0.0017s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_composer_cache_files, [:delete_at, :id], {:name=>"composer_cache_files_index_on_deleted_at", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210203222620 AddExpiredIndexToComposerCacheFiles: migrated (0.0059s) =====

                == 20210203223551 AddOrphanIndexToComposerCacheFiles: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_composer_cache_files, :id, {:name=>"index_composer_cache_files_where_namespace_id_is_null", :where=>"namespace_id IS NULL", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_composer_cache_files, :id, {:name=>"index_composer_cache_files_where_namespace_id_is_null", :where=>"namespace_id IS NULL", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20210203223551 AddOrphanIndexToComposerCacheFiles: migrated (0.0062s) ======

                == 20210204152257 AddStatusToPackagesPackages: migrating ======================
                -- add_column(:packages_packages, :status, :smallint, {:default=>0, :null=>false})
                   -> 0.0010s
                == 20210204152257 AddStatusToPackagesPackages: migrated (0.0010s) =============

                == 20210204212850 AddGroupIdToCiDailyBuildGroupReportResults: migrating =======
                -- add_column(:ci_daily_build_group_report_results, :group_id, :bigint)
                   -> 0.0006s
                == 20210204212850 AddGroupIdToCiDailyBuildGroupReportResults: migrated (0.0006s)

                == 20210205084357 CreateCiProjectMonthlyUsage: migrating ======================
                -- create_table(:ci_project_monthly_usages, {:if_not_exists=>true})
                   -> 0.0066s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_project_monthly_usages\nADD CONSTRAINT ci_project_monthly_usages_year_month_constraint\nCHECK ( (date = date_trunc('month', date)) )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_project_monthly_usages VALIDATE CONSTRAINT ci_project_monthly_usages_year_month_constraint;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210205084357 CreateCiProjectMonthlyUsage: migrated (0.0135s) =============

                == 20210205104425 AddNewPostEoaPlans: migrating ===============================
                -- execute("INSERT INTO plans (name, title, created_at, updated_at) VALUES ('premium', 'Premium (Formerly Silver)', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)")
                   -> 0.0006s
                -- execute("INSERT INTO plans (name, title, created_at, updated_at) VALUES ('ultimate', 'Ultimate (Formerly Gold)', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)")
                   -> 0.0003s
                == 20210205104425 AddNewPostEoaPlans: migrated (0.0009s) ======================

                == 20210205134213 AddCreatorIdToCustomEmoji: migrating ========================
                -- execute("DELETE FROM custom_emoji")
                   -> 0.0006s
                -- add_reference(:custom_emoji, :creator, {:index=>true, :null=>false, :foreign_key=>false})
                   -> 0.0034s
                == 20210205134213 AddCreatorIdToCustomEmoji: migrated (0.0040s) ===============

                == 20210205143926 RemoveNamespaceIdForeignKeyOnNamespaceOnboardingActions: migrating
                -- remove_foreign_key(:namespace_onboarding_actions, :namespaces)
                   -> 0.0043s
                == 20210205143926 RemoveNamespaceIdForeignKeyOnNamespaceOnboardingActions: migrated (0.0056s)

                == 20210205144537 RemoveNamespaceOnboardingActionsTable: migrating ============
                -- drop_table(:namespace_onboarding_actions)
                   -> 0.0008s
                == 20210205144537 RemoveNamespaceOnboardingActionsTable: migrated (0.0021s) ===

                == 20210205174154 RemoveBadDependencyProxyManifests: migrating ================
                == 20210205174154 RemoveBadDependencyProxyManifests: migrated (0.0075s) =======

                == 20210205213915 RemoveForeignKeysFromAlertsServiceData: migrating ===========
                -- foreign_keys(:alerts_service_data)
                   -> 0.0036s
                -- remove_foreign_key(:alerts_service_data, {:column=>:service_id})
                   -> 0.0043s
                == 20210205213915 RemoveForeignKeysFromAlertsServiceData: migrated (0.0093s) ==

                == 20210205213933 DropAlertsServiceData: migrating ============================
                -- drop_table(:alerts_service_data)
                   -> 0.0009s
                == 20210205213933 DropAlertsServiceData: migrated (0.0022s) ===================

                == 20210205214003 RemoveAlertsServiceRecordsAgain: migrating ==================
                == 20210205214003 RemoveAlertsServiceRecordsAgain: migrated (0.0017s) =========

                == 20210208103243 AddIssueCreatedAtToOnboardingProgress: migrating ============
                -- add_column(:onboarding_progresses, :issue_created_at, :datetime_with_timezone)
                   -> 0.0006s
                == 20210208103243 AddIssueCreatedAtToOnboardingProgress: migrated (0.0007s) ===

                == 20210208125050 AddStatusExpiresAtToUserStatuses: migrating =================
                -- add_column(:user_statuses, :clear_status_at, :datetime_with_timezone, {:null=>true})
                   -> 0.0004s
                == 20210208125050 AddStatusExpiresAtToUserStatuses: migrated (0.0017s) ========

                == 20210208125248 AddIndexOnUserStatusesStatusExpiresAt: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:user_statuses, :clear_status_at, {:name=>"index_user_statuses_on_clear_status_at_not_null", :where=>"clear_status_at IS NOT NULL", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:user_statuses, :clear_status_at, {:name=>"index_user_statuses_on_clear_status_at_not_null", :where=>"clear_status_at IS NOT NULL", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210208125248 AddIndexOnUserStatusesStatusExpiresAt: migrated (0.0070s) ===

                == 20210208144134 AddIndexGroupIdToCiDailyBuildGroupReportResults: migrating ==
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_daily_build_group_report_results, :group_id, {:name=>"index_ci_daily_build_group_report_results_on_group_id", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_daily_build_group_report_results, :group_id, {:name=>"index_ci_daily_build_group_report_results_on_group_id", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:ci_daily_build_group_report_results)
                   -> 0.0036s
                -- execute("ALTER TABLE ci_daily_build_group_report_results\nADD CONSTRAINT fk_fd1858fefd\nFOREIGN KEY (group_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_daily_build_group_report_results VALIDATE CONSTRAINT fk_fd1858fefd;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210208144134 AddIndexGroupIdToCiDailyBuildGroupReportResults: migrated (0.0145s)

                == 20210208161207 AddNotesCreateLimitToApplicationSettings: migrating =========
                -- add_column(:application_settings, :notes_create_limit, :integer, {:default=>300, :null=>false})
                   -> 0.0018s
                == 20210208161207 AddNotesCreateLimitToApplicationSettings: migrated (0.0018s)

                == 20210208200914 AddEndsAtToOncallRotations: migrating =======================
                -- add_column(:incident_management_oncall_rotations, :ends_at, :datetime_with_timezone)
                   -> 0.0006s
                == 20210208200914 AddEndsAtToOncallRotations: migrated (0.0006s) ==============

                == 20210209110019 CreateExternalApprovalRules: migrating ======================
                -- create_table(:external_approval_rules, {:if_not_exists=>true})
                -- quote_column_name(:external_url)
                   -> 0.0000s
                -- quote_column_name(:name)
                   -> 0.0000s
                   -> 0.0112s
                -- quote_table_name("check_b634ca168d")
                   -> 0.0000s
                -- quote_table_name("check_1c64b53ea5")
                   -> 0.0000s
                -- quote_table_name(:external_approval_rules)
                   -> 0.0000s
                -- execute("ALTER TABLE \"external_approval_rules\"\nADD CONSTRAINT \"check_b634ca168d\" CHECK (char_length(\"external_url\") <= 255),\nADD CONSTRAINT \"check_1c64b53ea5\" CHECK (char_length(\"name\") <= 255)\n")
                   -> 0.0005s
                -- create_table(:external_approval_rules_protected_branches)
                   -> 0.0093s
                == 20210209110019 CreateExternalApprovalRules: migrated (0.0231s) =============

                == 20210209160510 CreateSecurityOrchestrationPolicyConfigurations: migrating ==
                -- create_table(:security_orchestration_policy_configurations, {:comment=>"{\"owner\":\"group::container security\",\"description\":\"Configuration used to store relationship between project and security policy repository\"}"})
                   -> 0.0098s
                == 20210209160510 CreateSecurityOrchestrationPolicyConfigurations: migrated (0.0112s)

                == 20210209171525 AddStatusIndexToPackagesPackages: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_packages, [:project_id, :status], {:name=>"index_packages_packages_on_project_id_and_status", :algorithm=>:concurrently})
                   -> 0.0052s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_packages, [:project_id, :status], {:name=>"index_packages_packages_on_project_id_and_status", :algorithm=>:concurrently})
                   -> 0.0051s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210209171525 AddStatusIndexToPackagesPackages: migrated (0.0111s) ========

                == 20210209232508 AddMarkdownSurroundSelectionToUserPreferences: migrating ====
                -- add_column(:user_preferences, :markdown_surround_selection, :boolean, {:default=>true, :null=>false})
                   -> 0.0008s
                == 20210209232508 AddMarkdownSurroundSelectionToUserPreferences: migrated (0.0023s)

                == 20210210093901 BackfillUpdatedAtAfterRepositoryStorageMove: migrating ======
                == 20210210093901 BackfillUpdatedAtAfterRepositoryStorageMove: migrated (0.0031s)

                == 20210210210232 AddNotesCreateLimitAllowlistToApplicationSettings: migrating
                -- add_column(:application_settings, :notes_create_limit_allowlist, :text, {:array=>true, :default=>[], :null=>false})
                   -> 0.0017s
                == 20210210210232 AddNotesCreateLimitAllowlistToApplicationSettings: migrated (0.0018s)

                == 20210210221006 CleanupProjectsWithBadHasExternalIssueTrackerData: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:projects, :id, {:where=>"\"projects\".\"has_external_issue_tracker\" = TRUE\nAND \"projects\".\"pending_delete\" = FALSE\n", :name=>"tmp_idx_projects_on_id_where_has_external_issue_tracker_is_true", :algorithm=>:concurrently})
                   -> 0.0192s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:projects, :id, {:where=>"\"projects\".\"has_external_issue_tracker\" = TRUE\nAND \"projects\".\"pending_delete\" = FALSE\n", :name=>"tmp_idx_projects_on_id_where_has_external_issue_tracker_is_true", :algorithm=>:concurrently})
                   -> 0.0044s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:projects)
                   -> 0.0193s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:projects, {:algorithm=>:concurrently, :name=>"tmp_idx_projects_on_id_where_has_external_issue_tracker_is_true"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210210221006 CleanupProjectsWithBadHasExternalIssueTrackerData: migrated (0.0523s)

                == 20210211195543 AddCreatedByUserForClusterAgentToken: migrating =============
                -- column_exists?(:cluster_agent_tokens, :created_by_user_id)
                   -> 0.0012s
                -- add_column(:cluster_agent_tokens, :created_by_user_id, :bigint)
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:cluster_agent_tokens, :created_by_user_id, {:name=>"index_cluster_agent_tokens_on_created_by_user_id", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:cluster_agent_tokens, :created_by_user_id, {:name=>"index_cluster_agent_tokens_on_created_by_user_id", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:cluster_agent_tokens)
                   -> 0.0037s
                -- execute("ALTER TABLE cluster_agent_tokens\nADD CONSTRAINT fk_75008f3553\nFOREIGN KEY (created_by_user_id)\nREFERENCES users (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens VALIDATE CONSTRAINT fk_75008f3553;")
                   -> 0.0016s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210211195543 AddCreatedByUserForClusterAgentToken: migrated (0.0184s) ====

                == 20210212153934 MakeTheGeoOauthApplicationTrustedByDefault: migrating =======
                -- execute("UPDATE oauth_applications SET confidential = true, trusted = true WHERE id IN (SELECT oauth_application_id FROM geo_nodes);")
                   -> 0.0009s
                == 20210212153934 MakeTheGeoOauthApplicationTrustedByDefault: migrated (0.0010s)

                == 20210212163231 AddMergeWhenPipelineSucceedsToNotificationSettings: migrating
                -- add_column(:notification_settings, :merge_when_pipeline_succeeds, :boolean, {:default=>false, :null=>false})
                   -> 0.0010s
                == 20210212163231 AddMergeWhenPipelineSucceedsToNotificationSettings: migrated (0.0010s)

                == 20210214201118 AddDelayedProjectRemovalToNamespaceSettings: migrating ======
                -- add_column(:namespace_settings, :delayed_project_removal, :boolean, {:default=>false, :null=>false})
                   -> 0.0010s
                == 20210214201118 AddDelayedProjectRemovalToNamespaceSettings: migrated (0.0010s)

                == 20210214205155 AddIndexToNamespacesDelayedProjectRemoval: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:namespaces, :id, {:name=>"tmp_idx_on_namespaces_delayed_project_removal", :where=>"delayed_project_removal = TRUE", :algorithm=>:concurrently})
                   -> 0.0071s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:namespaces, :id, {:name=>"tmp_idx_on_namespaces_delayed_project_removal", :where=>"delayed_project_removal = TRUE", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210214205155 AddIndexToNamespacesDelayedProjectRemoval: migrated (0.0124s)

                == 20210215095328 MigrateDelayedProjectRemovalFromNamespacesToNamespaceSettings: migrating
                == 20210215095328 MigrateDelayedProjectRemovalFromNamespacesToNamespaceSettings: migrated (0.0028s)

                == 20210215144909 MigrateUsageTrendsSidekiqQueue: migrating ===================
                == 20210215144909 MigrateUsageTrendsSidekiqQueue: migrated (0.0003s) ==========

                == 20210215172449 RemoveArtifactExpiryTempIndex: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_job_artifacts)
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_job_artifacts, {:algorithm=>:concurrently, :name=>"expired_artifacts_temp_index"})
                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210215172449 RemoveArtifactExpiryTempIndex: migrated (0.0074s) ===========

                == 20210216122140 AddInProductMarketingEmailsEnabledSetting: migrating ========
                -- add_column(:application_settings, :in_product_marketing_emails_enabled, :boolean, {:null=>false, :default=>true})
                   -> 0.0019s
                == 20210216122140 AddInProductMarketingEmailsEnabledSetting: migrated (0.0019s)

                == 20210216135504 AddCreatedByToClusterAgent: migrating =======================
                -- column_exists?(:cluster_agents, :created_by_user_id)
                   -> 0.0012s
                -- add_column(:cluster_agents, :created_by_user_id, :bigint)
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:cluster_agents, :created_by_user_id, {:name=>"index_cluster_agents_on_created_by_user_id", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:cluster_agents, :created_by_user_id, {:name=>"index_cluster_agents_on_created_by_user_id", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:cluster_agents)
                   -> 0.0036s
                -- execute("ALTER TABLE cluster_agents\nADD CONSTRAINT fk_f7d43dee13\nFOREIGN KEY (created_by_user_id)\nREFERENCES users (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agents VALIDATE CONSTRAINT fk_f7d43dee13;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210216135504 AddCreatedByToClusterAgent: migrated (0.0170s) ==============

                == 20210216193620 AddDescriptionToClusterToken: migrating =====================
                -- column_exists?(:cluster_agent_tokens, :description)
                   -> 0.0011s
                -- add_column(:cluster_agent_tokens, :description, :text)
                   -> 0.0007s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens\nADD CONSTRAINT check_4e4ec5070a\nCHECK ( char_length(description) <= 1024 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens VALIDATE CONSTRAINT check_4e4ec5070a;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210216193620 AddDescriptionToClusterToken: migrated (0.0070s) ============

                == 20210216223335 RemoveIndexOnIssuesWhereServiceDeskReplyToIsNotNull: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issues)
                   -> 0.0104s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issues, {:algorithm=>:concurrently, :name=>"idx_on_issues_where_service_desk_reply_to_is_not_null"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210216223335 RemoveIndexOnIssuesWhereServiceDeskReplyToIsNotNull: migrated (0.0152s)

                == 20210217100728 MoveCreateReleaseEvidenceQueueOutOfCronjobNamespace: migrating
                == 20210217100728 MoveCreateReleaseEvidenceQueueOutOfCronjobNamespace: migrated (0.0001s)

                == 20210217101901 CreateEpicListUserPreferences: migrating ====================
                -- create_table(:boards_epic_list_user_preferences)
                   -> 0.0059s
                -- add_index(:boards_epic_list_user_preferences, [:user_id, :epic_list_id], {:unique=>true, :name=>"index_epic_board_list_preferences_on_user_and_list"})
                   -> 0.0027s
                == 20210217101901 CreateEpicListUserPreferences: migrated (0.0087s) ===========

                == 20210218040814 AddEnvironmentScopeToGroupVariables: migrating ==============
                -- column_exists?(:ci_group_variables, :environment_scope)
                   -> 0.0014s
                -- add_column(:ci_group_variables, :environment_scope, :text, {:null=>false, :default=>"*"})
                   -> 0.0011s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_group_variables, [:group_id, :key, :environment_scope], {:unique=>true, :name=>"index_ci_group_variables_on_group_id_and_key_and_environment", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_group_variables, [:group_id, :key, :environment_scope], {:unique=>true, :name=>"index_ci_group_variables_on_group_id_and_key_and_environment", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_group_variables)
                   -> 0.0018s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_group_variables, {:algorithm=>:concurrently, :name=>"index_ci_group_variables_on_group_id_and_key"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210218040814 AddEnvironmentScopeToGroupVariables: migrated (0.0136s) =====

                == 20210218105431 RemoveDeprecatedCiBuildsColumns: migrating ==================
                -- remove_column(:ci_builds, :artifacts_file)
                   -> 0.0006s
                -- remove_column(:ci_builds, :artifacts_file_store)
                   -> 0.0004s
                -- remove_column(:ci_builds, :artifacts_metadata)
                   -> 0.0003s
                -- remove_column(:ci_builds, :artifacts_metadata_store)
                   -> 0.0004s
                -- remove_column(:ci_builds, :artifacts_size)
                   -> 0.0003s
                -- remove_column(:ci_builds, :commands)
                   -> 0.0003s
                == 20210218105431 RemoveDeprecatedCiBuildsColumns: migrated (0.0057s) =========

                == 20210218110552 RemoveDeprecatedCiRunnerColumn: migrating ===================
                -- remove_column(:ci_runners, :is_shared)
                   -> 0.0006s
                == 20210218110552 RemoveDeprecatedCiRunnerColumn: migrated (0.0034s) ==========

                == 20210218142626 ChangeFindingFingerprintEnum: migrating =====================
                -- change_column(:vulnerability_finding_fingerprints, :algorithm_type, :integer, {:limit=>2})
                   -> 0.0097s
                == 20210218142626 ChangeFindingFingerprintEnum: migrated (0.0098s) ============

                == 20210218144056 AddSprintsStartDateNotNullCheckConstraint: migrating ========
                -- current_schema()
                   -> 0.0023s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE sprints\nADD CONSTRAINT check_ccd8a1eae0\nCHECK ( start_date IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20210218144056 AddSprintsStartDateNotNullCheckConstraint: migrated (0.0087s)

                == 20210218144656 AddSprintsDueDateNotNullCheckConstraint: migrating ==========
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE sprints\nADD CONSTRAINT check_df3816aed7\nCHECK ( due_date IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20210218144656 AddSprintsDueDateNotNullCheckConstraint: migrated (0.0058s) =

                == 20210219100137 AddCreatorForeignKeyToCustomEmoji: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:custom_emoji)
                   -> 0.0036s
                -- execute("ALTER TABLE custom_emoji\nADD CONSTRAINT fk_custom_emoji_creator_id\nFOREIGN KEY (creator_id)\nREFERENCES users (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE custom_emoji VALIDATE CONSTRAINT fk_custom_emoji_creator_id;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210219100137 AddCreatorForeignKeyToCustomEmoji: migrated (0.0080s) =======

                == 20210219102900 RescheduleSetDefaultIterationCadences: migrating ============
                == 20210219102900 RescheduleSetDefaultIterationCadences: migrated (0.0028s) ===

                == 20210219111040 AddEpicIssueCompositeIndex: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:epic_issues, [:epic_id, :issue_id], {:name=>"index_epic_issues_on_epic_id_and_issue_id", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:epic_issues, [:epic_id, :issue_id], {:name=>"index_epic_issues_on_epic_id_and_issue_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210219111040 AddEpicIssueCompositeIndex: migrated (0.0066s) ==============

                == 20210219211845 AddVersionUsageDataIdToRawUsageData: migrating ==============
                -- add_column(:raw_usage_data, :version_usage_data_id_value, :bigint)
                   -> 0.0006s
                == 20210219211845 AddVersionUsageDataIdToRawUsageData: migrated (0.0006s) =====

                == 20210222030537 AddIsRemovedToOncallParticipant: migrating ==================
                -- add_column(:incident_management_oncall_participants, :is_removed, :boolean, {:default=>false, :null=>false})
                   -> 0.0007s
                == 20210222030537 AddIsRemovedToOncallParticipant: migrated (0.0021s) =========

                == 20210222042745 AddIsRemovedIndexToOncallParticipant: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:incident_management_oncall_participants, [:oncall_rotation_id, :is_removed], {:name=>"index_inc_mgmnt_oncall_pcpnt_on_oncall_rotation_id_is_removed", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:incident_management_oncall_participants, [:oncall_rotation_id, :is_removed], {:name=>"index_inc_mgmnt_oncall_pcpnt_on_oncall_rotation_id_is_removed", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:incident_management_oncall_participants)
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:incident_management_oncall_participants, {:algorithm=>:concurrently, :name=>"index_inc_mgmnt_oncall_participants_on_oncall_rotation_id"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210222042745 AddIsRemovedIndexToOncallParticipant: migrated (0.0123s) ====

                == 20210222070356 AddStorageSizeToNamespaceStatistics: migrating ==============
                -- add_column(:namespace_statistics, :storage_size, :bigint, {:default=>0, :null=>false})
                   -> 0.0009s
                == 20210222070356 AddStorageSizeToNamespaceStatistics: migrated (0.0022s) =====

                == 20210222070413 AddWikiSizeToNamespaceStatistics: migrating =================
                -- add_column(:namespace_statistics, :wiki_size, :bigint, {:default=>0, :null=>false})
                   -> 0.0008s
                == 20210222070413 AddWikiSizeToNamespaceStatistics: migrated (0.0020s) ========

                == 20210222085529 AddEpicBoardUserPreferenceUserFk: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:boards_epic_list_user_preferences)
                   -> 0.0039s
                -- execute("ALTER TABLE boards_epic_list_user_preferences\nADD CONSTRAINT fk_f5f2fe5c1f\nFOREIGN KEY (user_id)\nREFERENCES users (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE boards_epic_list_user_preferences VALIDATE CONSTRAINT fk_f5f2fe5c1f;")
                   -> 0.0013s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210222085529 AddEpicBoardUserPreferenceUserFk: migrated (0.0084s) ========

                == 20210222085551 AddEpicBoardUserPreferenceEpicListFk: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:boards_epic_list_user_preferences)
                   -> 0.0035s
                -- execute("ALTER TABLE boards_epic_list_user_preferences\nADD CONSTRAINT fk_95eac55851\nFOREIGN KEY (epic_list_id)\nREFERENCES boards_epic_lists (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE boards_epic_list_user_preferences VALIDATE CONSTRAINT fk_95eac55851;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210222085551 AddEpicBoardUserPreferenceEpicListFk: migrated (0.0074s) ====

                == 20210222105120 AddContainerRegistryAccessLevel: migrating ==================
                -- add_column(:project_features, :container_registry_access_level, :integer, {:default=>0, :null=>false})
                   -> 0.0008s
                == 20210222105120 AddContainerRegistryAccessLevel: migrated (0.0020s) =========

                == 20210222185538 RemoveBackupLabelsForeignKeys: migrating ====================
                -- foreign_keys(:backup_labels)
                   -> 0.0036s
                -- remove_foreign_key(:backup_labels, :projects)
                   -> 0.0044s
                -- foreign_keys(:backup_labels)
                   -> 0.0035s
                -- remove_foreign_key(:backup_labels, :namespaces)
                   -> 0.0041s
                == 20210222185538 RemoveBackupLabelsForeignKeys: migrated (0.0171s) ===========

                == 20210222192144 RemoveBackupLabelsTable: migrating ==========================
                -- drop_table(:backup_labels)
                   -> 0.0013s
                == 20210222192144 RemoveBackupLabelsTable: migrated (0.0014s) =================

                == 20210223053451 AddBranchNameToDastProfile: migrating =======================
                -- add_column(:dast_profiles, :branch_name, :text)
                   -> 0.0005s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_profiles\nADD CONSTRAINT check_6c9d775949\nCHECK ( char_length(branch_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_profiles VALIDATE CONSTRAINT check_6c9d775949;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210223053451 AddBranchNameToDastProfile: migrated (0.0073s) ==============

                == 20210223132934 AddForeignKeyToExternalApprovalRules: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:external_approval_rules_protected_branches)
                   -> 0.0036s
                -- execute("ALTER TABLE external_approval_rules_protected_branches\nADD CONSTRAINT fk_c9a037a926\nFOREIGN KEY (external_approval_rule_id)\nREFERENCES external_approval_rules (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE external_approval_rules_protected_branches VALIDATE CONSTRAINT fk_c9a037a926;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210223132934 AddForeignKeyToExternalApprovalRules: migrated (0.0078s) ====

                == 20210223133116 AddForeignKeyToExternalApprovalRulesProtectedBranches: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:external_approval_rules_protected_branches)
                   -> 0.0035s
                -- execute("ALTER TABLE external_approval_rules_protected_branches\nADD CONSTRAINT fk_ca2ffb55e6\nFOREIGN KEY (protected_branch_id)\nREFERENCES protected_branches (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE external_approval_rules_protected_branches VALIDATE CONSTRAINT fk_ca2ffb55e6;")
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210223133116 AddForeignKeyToExternalApprovalRulesProtectedBranches: migrated (0.0095s)

                == 20210223230600 UpdateRubygemsMetadataMetadata: migrating ===================
                -- execute("ALTER TABLE packages_rubygems_metadata\nDROP CONSTRAINT IF EXISTS check_ea02f4800f\n")
                   -> 0.0004s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE packages_rubygems_metadata\nADD CONSTRAINT check_ea02f4800f\nCHECK ( char_length(metadata) <= 30000 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE packages_rubygems_metadata VALIDATE CONSTRAINT check_ea02f4800f;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210223230600 UpdateRubygemsMetadataMetadata: migrated (0.0071s) ==========

                == 20210224132547 AddNullConstraintToTerraformStateName: migrating ============
                -- change_column_null(:terraform_states, :name, false)
                   -> 0.0005s
                == 20210224132547 AddNullConstraintToTerraformStateName: migrated (0.0005s) ===

                == 20210224133337 AddNameFieldToClusterAgentToken: migrating ==================
                -- add_column(:cluster_agent_tokens, :name, :text)
                   -> 0.0006s
                == 20210224133337 AddNameFieldToClusterAgentToken: migrated (0.0006s) =========

                == 20210224150506 RescheduleArtifactExpiryBackfill: migrating =================
                -- Scheduled 0 BackfillArtifactExpiryDate jobs with a maximum of 200000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:09 +0800."
                == 20210224150506 RescheduleArtifactExpiryBackfill: migrated (0.0034s) ========

                == 20210224161552 AddJiraIssueTransitionAutomaticToJiraTrackerData: migrating =
                -- add_column(:jira_tracker_data, :jira_issue_transition_automatic, :boolean, {:null=>false, :default=>false})
                   -> 0.0011s
                == 20210224161552 AddJiraIssueTransitionAutomaticToJiraTrackerData: migrated (0.0011s)

                == 20210225090801 CreateDoraDailyMetrics: migrating ===========================
                -- create_table(:dora_daily_metrics, {:if_not_exists=>true})
                   -> 0.0068s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dora_daily_metrics\nADD CONSTRAINT dora_daily_metrics_deployment_frequency_positive\nCHECK ( deployment_frequency >= 0 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dora_daily_metrics VALIDATE CONSTRAINT dora_daily_metrics_deployment_frequency_positive;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dora_daily_metrics\nADD CONSTRAINT dora_daily_metrics_lead_time_for_changes_in_seconds_positive\nCHECK ( lead_time_for_changes_in_seconds >= 0 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dora_daily_metrics VALIDATE CONSTRAINT dora_daily_metrics_lead_time_for_changes_in_seconds_positive;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210225090801 CreateDoraDailyMetrics: migrated (0.0181s) ==================

                == 20210225135533 LimitClusterTokenSize: migrating ============================
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens\nADD CONSTRAINT check_2b79dbb315\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens VALIDATE CONSTRAINT check_2b79dbb315;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210225135533 LimitClusterTokenSize: migrated (0.0050s) ===================

                == 20210225153522 AddAllowForcePushToProtectedBranches: migrating =============
                -- add_column(:protected_branches, :allow_force_push, :boolean, {:default=>false, :null=>false})
                   -> 0.0007s
                == 20210225153522 AddAllowForcePushToProtectedBranches: migrated (0.0022s) ====

                == 20210226120851 MoveContainerRegistryEnabledToProjectFeatures: migrating ====
                == 20210226120851 MoveContainerRegistryEnabledToProjectFeatures: migrated (0.0000s)

                == 20210226141517 DedupIssueMetrics: migrating ================================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issue_metrics, :issue_id, {:where=>"id > 113", :unique=>true, :name=>"tmp_unique_issue_metrics_by_issue_id", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issue_metrics, :issue_id, {:where=>"id > 113", :unique=>true, :name=>"tmp_unique_issue_metrics_by_issue_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issue_metrics, :issue_id, {:unique=>true, :name=>"index_unique_issue_metrics_issue_id", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issue_metrics, :issue_id, {:unique=>true, :name=>"index_unique_issue_metrics_issue_id", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issue_metrics)
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issue_metrics, {:algorithm=>:concurrently, :name=>"tmp_unique_issue_metrics_by_issue_id"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:issue_metrics)
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:issue_metrics, {:algorithm=>:concurrently, :name=>"index_issue_metrics"})
                   -> 0.0022s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210226141517 DedupIssueMetrics: migrated (0.0472s) =======================

                == 20210301150451 AddTierToEnvironments: migrating ============================
                -- add_column(:environments, :tier, :smallint)
                   -> 0.0005s
                == 20210301150451 AddTierToEnvironments: migrated (0.0019s) ===================

                == 20210301193412 AddOptionalToCiBuildNeeds: migrating ========================
                -- add_column(:ci_build_needs, :optional, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20210301193412 AddOptionalToCiBuildNeeds: migrated (0.0021s) ===============

                == 20210301200601 RenameAssetProxyAllowlistOnApplicationSettings: migrating ===
                -- column_exists?(:application_settings, :asset_proxy_whitelist)
                   -> 0.0627s
                -- quote_table_name(:application_settings)
                   -> 0.0000s
                -- execute("DROP TRIGGER IF EXISTS trigger_9a96291bb38d\nON \"application_settings\";\n\nDROP FUNCTION IF EXISTS function_for_trigger_9a96291bb38d;\n")
                   -> 0.0004s
                -- execute("DROP TRIGGER IF EXISTS trigger_22a39c5c25f3\nON \"application_settings\";\n\nDROP FUNCTION IF EXISTS function_for_trigger_22a39c5c25f3;\n")
                   -> 0.0008s
                -- execute("DROP TRIGGER IF EXISTS trigger_1572cbc9a15f\nON \"application_settings\";\n\nDROP FUNCTION IF EXISTS function_for_trigger_1572cbc9a15f;\n")
                   -> 0.0005s
                -- remove_column(:application_settings, :asset_proxy_whitelist)
                   -> 0.0008s
                -- transaction_open?()
                   -> 0.0000s
                -- columns(:application_settings)
                   -> 0.0631s
                -- column_exists?(:application_settings, :id)
                   -> 0.0605s
                -- column_exists?(:application_settings, :asset_proxy_whitelist)
                   -> 0.0599s
                -- columns(:application_settings)
                   -> 0.0607s
                -- add_column(:application_settings, :asset_proxy_whitelist, :text, {:limit=>nil, :precision=>nil, :scale=>nil})
                   -> 0.0013s
                -- transaction_open?()
                   -> 0.0000s
                -- exec_query("SELECT COUNT(*) AS count FROM \"application_settings\"")
                   -> 0.0011s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" ORDER BY \"application_settings\".\"id\" ASC LIMIT 1")
                   -> 0.0004s
                -- exec_query("SELECT \"application_settings\".\"id\" FROM \"application_settings\" WHERE \"application_settings\".\"id\" >= 1 ORDER BY \"application_settings\".\"id\" ASC LIMIT 1 OFFSET 1")NOTICE:  trigger "trigger_e40a6f1858e6" for relation "application_settings" does not exist, skipping
                NOTICE:  trigger "trigger_0d588df444c8" for relation "application_settings" does not exist, skipping
                NOTICE:  trigger "trigger_b01442420ce6" for relation "application_settings" does not exist, skipping

                   -> 0.0005s
                -- execute("UPDATE \"application_settings\" SET \"asset_proxy_whitelist\" = \"application_settings\".\"asset_proxy_allowlist\" WHERE \"application_settings\".\"id\" >= 1")
                   -> 0.0012s
                -- indexes(:application_settings)
                   -> 0.0049s
                -- foreign_keys(:application_settings)
                   -> 0.0037s
                -- transaction_open?()
                   -> 0.0000s
                -- column_exists?(:application_settings, :asset_proxy_allowlist)
                   -> 0.0625s
                -- column_exists?(:application_settings, :asset_proxy_whitelist)
                   -> 0.0615s
                -- current_schema()
                   -> 0.0002s
                -- quote_table_name(:application_settings)
                   -> 0.0000s
                -- quote_column_name(:asset_proxy_allowlist)
                   -> 0.0000s
                -- quote_column_name(:asset_proxy_whitelist)
                   -> 0.0000s
                -- execute("CREATE OR REPLACE FUNCTION function_for_trigger_e40a6f1858e6()\nRETURNS trigger\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  IF NEW.\"asset_proxy_allowlist\" IS NULL AND NEW.\"asset_proxy_whitelist\" IS NOT NULL THEN\n    NEW.\"asset_proxy_allowlist\" = NEW.\"asset_proxy_whitelist\";\n  END IF;\n\n  IF NEW.\"asset_proxy_whitelist\" IS NULL AND NEW.\"asset_proxy_allowlist\" IS NOT NULL THEN\n    NEW.\"asset_proxy_whitelist\" = NEW.\"asset_proxy_allowlist\";\n  END IF;\n\n  RETURN NEW;\nEND\n$$;\n\nDROP TRIGGER IF EXISTS trigger_e40a6f1858e6\nON \"application_settings\";\n\nCREATE TRIGGER trigger_e40a6f1858e6\nBEFORE INSERT ON \"application_settings\"\nFOR EACH ROW EXECUTE FUNCTION function_for_trigger_e40a6f1858e6();\n")
                   -> 0.0010s
                -- execute("CREATE OR REPLACE FUNCTION function_for_trigger_0d588df444c8()\nRETURNS trigger\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  NEW.\"asset_proxy_allowlist\" := NEW.\"asset_proxy_whitelist\";\n  RETURN NEW;\nEND\n$$;\n\nDROP TRIGGER IF EXISTS trigger_0d588df444c8\nON \"application_settings\";\n\nCREATE TRIGGER trigger_0d588df444c8\nBEFORE UPDATE OF \"asset_proxy_whitelist\" ON \"application_settings\"\nFOR EACH ROW EXECUTE FUNCTION function_for_trigger_0d588df444c8();\n")
                   -> 0.0010s
                -- execute("CREATE OR REPLACE FUNCTION function_for_trigger_b01442420ce6()\nRETURNS trigger\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  NEW.\"asset_proxy_whitelist\" := NEW.\"asset_proxy_allowlist\";\n  RETURN NEW;\nEND\n$$;\n\nDROP TRIGGER IF EXISTS trigger_b01442420ce6\nON \"application_settings\";\n\nCREATE TRIGGER trigger_b01442420ce6\nBEFORE UPDATE OF \"asset_proxy_allowlist\" ON \"application_settings\"\nFOR EACH ROW EXECUTE FUNCTION function_for_trigger_b01442420ce6();\n")
                   -> 0.0009s
                == 20210301200601 RenameAssetProxyAllowlistOnApplicationSettings: migrated (0.4755s)

                == 20210301200959 CleanUpAssetProxyAllowlistRenameOnApplicationSettings: migrating
                -- column_exists?(:application_settings, :asset_proxy_allowlist)
                   -> 0.0619s
                -- quote_table_name(:application_settings)
                   -> 0.0000s
                -- execute("DROP TRIGGER IF EXISTS trigger_e40a6f1858e6\nON \"application_settings\";\n\nDROP FUNCTION IF EXISTS function_for_trigger_e40a6f1858e6;\n")
                   -> 0.0004s
                -- execute("DROP TRIGGER IF EXISTS trigger_0d588df444c8\nON \"application_settings\";\n\nDROP FUNCTION IF EXISTS function_for_trigger_0d588df444c8;\n")
                   -> 0.0005s
                -- execute("DROP TRIGGER IF EXISTS trigger_b01442420ce6\nON \"application_settings\";\n\nDROP FUNCTION IF EXISTS function_for_trigger_b01442420ce6;\n")
                   -> 0.0005s
                -- remove_column(:application_settings, :asset_proxy_allowlist)
                   -> 0.0008s
                == 20210301200959 CleanUpAssetProxyAllowlistRenameOnApplicationSettings: migrated (0.0662s)

                == 20210302025305 AddExcludedUrlsAndRequestHeadersToDastSiteProfiles: migrating
                -- add_column(:dast_site_profiles, :excluded_urls, :text, {:array=>true, :default=>[], :null=>false})
                   -> 0.0010s
                -- add_column(:dast_site_profiles, :auth_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0007s
                -- add_column(:dast_site_profiles, :auth_url, :text)
                   -> 0.0003s
                -- add_column(:dast_site_profiles, :auth_username_field, :text)
                   -> 0.0004s
                -- add_column(:dast_site_profiles, :auth_password_field, :text)
                   -> 0.0004s
                -- add_column(:dast_site_profiles, :auth_username, :text)
                   -> 0.0003s
                == 20210302025305 AddExcludedUrlsAndRequestHeadersToDastSiteProfiles: migrated (0.0033s)

                == 20210302074524 BackfillNamespaceStatisticsWithWikiSize: migrating ==========
                == 20210302074524 BackfillNamespaceStatisticsWithWikiSize: migrated (0.0001s) =

                == 20210302103851 AddDeployedDeploymentIdIndexToProjectPagesMetadata: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_pages_metadata, :project_id, {:where=>"deployed = TRUE AND pages_deployment_id is NULL", :name=>"index_on_pages_metadata_not_migrated", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_pages_metadata, :project_id, {:where=>"deployed = TRUE AND pages_deployment_id is NULL", :name=>"index_on_pages_metadata_not_migrated", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210302103851 AddDeployedDeploymentIdIndexToProjectPagesMetadata: migrated (0.0067s)

                == 20210302150310 ScheduleMigratePagesToZipStorage: migrating =================
                -- Scheduled 0 MigratePagesToZipStorage jobs with a maximum of 10 records per batch and an interval of 300 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:10 +0800."
                == 20210302150310 ScheduleMigratePagesToZipStorage: migrated (0.0033s) ========

                == 20210302155904 RemoveIndexForSecurityOrchestrationPolicy: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:security_orchestration_policy_configurations)
                   -> 0.0018s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:security_orchestration_policy_configurations, {:algorithm=>:concurrently, :name=>"index_sop_configs_on_security_policy_management_project_id"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210302155904 RemoveIndexForSecurityOrchestrationPolicy: migrated (0.0051s)

                == 20210302160544 AddIndexToSecurityOrchestrationPolicy: migrating ============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:security_orchestration_policy_configurations, [:security_policy_management_project_id, :project_id], {:name=>"index_sop_configurations_project_id_policy_project_id", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:security_orchestration_policy_configurations, [:security_policy_management_project_id, :project_id], {:name=>"index_sop_configurations_project_id_policy_project_id", :algorithm=>:concurrently})
                   -> 0.0064s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210302160544 AddIndexToSecurityOrchestrationPolicy: migrated (0.0088s) ===

                == 20210302212623 RenameVulnFingerprintsIndexes: migrating ====================
                -- indexes(:vulnerability_finding_fingerprints)
                   -> 0.0023s
                -- current_schema()
                   -> 0.0002s
                -- rename_index(:vulnerability_finding_fingerprints, :idx_vuln_fingerprints_on_occurrences_id_and_fingerprint, :idx_vuln_fingerprints_on_occurrences_id_and_fingerprint_sha256)
                   -> 0.0006s
                -- indexes(:vulnerability_finding_fingerprints)
                   -> 0.0022s
                -- current_schema()
                   -> 0.0002s
                -- rename_index(:vulnerability_finding_fingerprints, :idx_vuln_fingerprints_uniqueness, :idx_vuln_fingerprints_uniqueness_fingerprint_sha256)
                   -> 0.0007s
                == 20210302212623 RenameVulnFingerprintsIndexes: migrated (0.0084s) ===========

                == 20210303053341 AddLastEditedAtAndLastEditedByIdToNotes: migrating ==========
                -- add_column(:notes, :last_edited_at, :datetime_with_timezone)
                   -> 0.0005s
                == 20210303053341 AddLastEditedAtAndLastEditedByIdToNotes: migrated (0.0019s) =

                == 20210303064112 AddNotNullConstraintsToGitlabSubscriptionsNamespaceId: migrating
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE gitlab_subscriptions\nADD CONSTRAINT check_77fea3f0e7\nCHECK ( namespace_id IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20210303064112 AddNotNullConstraintsToGitlabSubscriptionsNamespaceId: migrated (0.0060s)

                == 20210303064142 CleanupGitlabSubscriptionsWithNullNamespaceId: migrating ====
                == 20210303064142 CleanupGitlabSubscriptionsWithNullNamespaceId: migrated (0.0133s)

                == 20210303091651 AddIndexToEnvironmentsTier: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:environments, [:project_id, :tier], {:where=>"tier IS NOT NULL", :name=>"index_environments_on_project_id_and_tier", :algorithm=>:concurrently})
                   -> 0.0047s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:environments, [:project_id, :tier], {:where=>"tier IS NOT NULL", :name=>"index_environments_on_project_id_and_tier", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210303091651 AddIndexToEnvironmentsTier: migrated (0.0098s) ==============

                == 20210303121224 UpdateGitlabSubscriptionsStartAtPostEoa: migrating ==========
                == 20210303121224 UpdateGitlabSubscriptionsStartAtPostEoa: migrated (0.0000s) =

                == 20210303165201 AddIndexForSucceededDeployments: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:environment_id, :status, :finished_at], {:name=>"index_deployments_on_environment_id_status_and_finished_at", :algorithm=>:concurrently})
                   -> 0.0080s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:environment_id, :status, :finished_at], {:name=>"index_deployments_on_environment_id_status_and_finished_at", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210303165201 AddIndexForSucceededDeployments: migrated (0.0122s) =========

                == 20210303165301 AddNotNullConstraintToClusterTokenName: migrating ===========
                -- current_schema()
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens\nADD CONSTRAINT check_0fb634d04d\nCHECK ( name IS NOT NULL )\nNOT VALID;\n")
                   -> 0.0004s
                == 20210303165301 AddNotNullConstraintToClusterTokenName: migrated (0.0059s) ==

                == 20210303165302 CleanupClusterTokensWithNullName: migrating =================
                == 20210303165302 CleanupClusterTokensWithNullName: migrated (0.0127s) ========

                == 20210303193544 AddConcurrentFieldsToBulkImportsTrackers: migrating =========
                -- add_column(:bulk_import_trackers, :jid, :text)
                   -> 0.0006s
                -- add_column(:bulk_import_trackers, :stage, :smallint, {:default=>0, :null=>false})
                   -> 0.0008s
                -- add_column(:bulk_import_trackers, :status, :smallint, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20210303193544 AddConcurrentFieldsToBulkImportsTrackers: migrated (0.0022s)

                == 20210303193605 AddTextLimitsToBulkImportsTrackersJidAndPipelineName: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers\nADD CONSTRAINT check_603f91cb06\nCHECK ( char_length(jid) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_trackers VALIDATE CONSTRAINT check_603f91cb06;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210303193605 AddTextLimitsToBulkImportsTrackersJidAndPipelineName: migrated (0.0051s)

                == 20210304133508 ScheduleRemoveDuplicateVulnerabilitiesFindings2: migrating ==
                -- Scheduling RemoveDuplicateVulnerabilitiesFindings jobs
                -- Scheduled 0 RemoveDuplicateVulnerabilitiesFindings jobs with a maximum of 5000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:10 +0800."
                == 20210304133508 ScheduleRemoveDuplicateVulnerabilitiesFindings2: migrated (0.0015s)

                == 20210305002016 UpdateTerraformStatesLockedByUserIdForeignKey: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:terraform_states)
                   -> 0.0040s
                -- execute("ALTER TABLE terraform_states\nADD CONSTRAINT fk_558901b030\nFOREIGN KEY (locked_by_user_id)\nREFERENCES users (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE terraform_states VALIDATE CONSTRAINT fk_558901b030;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- remove_foreign_key(:terraform_states, :users, {:name=>"fk_rails_558901b030"})
                   -> 0.0043s
                == 20210305002016 UpdateTerraformStatesLockedByUserIdForeignKey: migrated (0.0142s)

                == 20210305013509 AddTextLimitToGroupCiVariablesEnvironmentScope: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_group_variables\nADD CONSTRAINT check_dfe009485a\nCHECK ( char_length(environment_scope) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_group_variables VALIDATE CONSTRAINT check_dfe009485a;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210305013509 AddTextLimitToGroupCiVariablesEnvironmentScope: migrated (0.0050s)

                == 20210305031822 CreateDastSiteProfileVariables: migrating ===================
                -- create_table(:dast_site_profile_secret_variables, {:comment=>"{\"owner\":\"group::dynamic analysis\",\"description\":\"Secret variables used in DAST on-demand scans\"}"})
                -- quote_column_name(:key)
                   -> 0.0000s
                   -> 0.0083s
                -- quote_table_name("check_8cbef204b2")
                   -> 0.0000s
                -- quote_table_name("check_236213f179")
                   -> 0.0000s
                -- quote_table_name("check_b49080abbf")
                   -> 0.0000s
                -- quote_table_name(:dast_site_profile_secret_variables)
                   -> 0.0000s
                -- execute("ALTER TABLE \"dast_site_profile_secret_variables\"\nADD CONSTRAINT \"check_8cbef204b2\" CHECK (char_length(\"key\") <= 255),\nADD CONSTRAINT \"check_236213f179\" CHECK (length(encrypted_value) <= 13352),\nADD CONSTRAINT \"check_b49080abbf\" CHECK (length(encrypted_value_iv) <= 17)\n")
                   -> 0.0006s
                == 20210305031822 CreateDastSiteProfileVariables: migrated (0.0112s) ==========

                == 20210305145622 AddTerraformModuleMaxFileSizeToPlanLimits: migrating ========
                -- add_column(:plan_limits, :terraform_module_max_file_size, :bigint, {:default=>1073741824, :null=>false})
                   -> 0.0011s
                == 20210305145622 AddTerraformModuleMaxFileSizeToPlanLimits: migrated (0.0012s)

                == 20210305180331 CreateCiUnitTests: migrating ================================
                -- table_exists?(:ci_unit_tests)
                   -> 0.0005s
                -- create_table(:ci_unit_tests)
                   -> 0.0073s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_tests\nADD CONSTRAINT check_b288215ffe\nCHECK ( char_length(key_hash) <= 64 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_tests VALIDATE CONSTRAINT check_b288215ffe;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_tests\nADD CONSTRAINT check_248fae1a3b\nCHECK ( char_length(name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_tests VALIDATE CONSTRAINT check_248fae1a3b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_tests\nADD CONSTRAINT check_c2d57b3c49\nCHECK ( char_length(suite_name) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_tests VALIDATE CONSTRAINT check_c2d57b3c49;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210305180331 CreateCiUnitTests: migrated (0.0226s) =======================

                == 20210305182740 AddProjectsFkToCiUnitTests: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:ci_unit_tests)
                   -> 0.0035s
                -- execute("ALTER TABLE ci_unit_tests\nADD CONSTRAINT fk_7a8fabf0a8\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_tests VALIDATE CONSTRAINT fk_7a8fabf0a8;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210305182740 AddProjectsFkToCiUnitTests: migrated (0.0083s) ==============

                == 20210305182855 CreateCiUnitTestFailures: migrating =========================
                -- create_table(:ci_unit_test_failures)
                   -> 0.0118s
                == 20210305182855 CreateCiUnitTestFailures: migrated (0.0119s) ================

                == 20210305183904 AddCiBuildsFkToCiUnitTestFailures: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:ci_unit_test_failures)
                   -> 0.0035s
                -- execute("ALTER TABLE ci_unit_test_failures\nADD CONSTRAINT fk_0f09856e1f\nFOREIGN KEY (build_id)\nREFERENCES ci_builds (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_unit_test_failures VALIDATE CONSTRAINT fk_0f09856e1f;")
                   -> 0.0013s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210305183904 AddCiBuildsFkToCiUnitTestFailures: migrated (0.0078s) =======

                == 20210306121300 PartitionWebHookLogs: migrating =============================
                -- transaction_open?()
                   -> 0.0000s
                -- transaction()
                -- table_exists?("web_hook_logs_part_0c5294f417")
                   -> 0.0006s
                -- transaction()
                -- execute("CREATE TABLE web_hook_logs_part_0c5294f417 (\n  LIKE web_hook_logs INCLUDING ALL EXCLUDING INDEXES,\n  partition_key_bfab5f7bb7 timestamp without time zone NOT NULL,\n  PRIMARY KEY (id, partition_key_bfab5f7bb7)\n) PARTITION BY RANGE (partition_key_bfab5f7bb7)\n")
                   -> 0.0042s
                -- remove_column("web_hook_logs_part_0c5294f417", "created_at")
                   -> 0.0034s
                -- rename_column("web_hook_logs_part_0c5294f417", "partition_key_bfab5f7bb7", "created_at")
                   -> 0.0012s
                -- change_column_default("web_hook_logs_part_0c5294f417", "id", nil)
                   -> 0.0015s
                -- change_column("web_hook_logs_part_0c5294f417", "id", :bigint)
                   -> 0.0038s
                   -> 0.0153s
                -- table_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000 PARTITION OF web_hook_logs_part_0c5294f417\nFOR VALUES FROM (MINVALUE) TO ('2022-03-01')\n")
                   -> 0.0045s
                -- table_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203 PARTITION OF web_hook_logs_part_0c5294f417\nFOR VALUES FROM ('2022-03-01') TO ('2022-04-01')\n")
                   -> 0.0049s
                -- table_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204")
                   -> 0.0004s
                -- execute("CREATE TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204 PARTITION OF web_hook_logs_part_0c5294f417\nFOR VALUES FROM ('2022-04-01') TO ('2022-05-01')\n")
                   -> 0.0041s
                   -> 0.0318s
                -- execute("CREATE  FUNCTION table_sync_function_29bc99d6db()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM web_hook_logs_part_0c5294f417 where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE web_hook_logs_part_0c5294f417\n  SET web_hook_id = NEW.web_hook_id,\n    trigger = NEW.trigger,\n    url = NEW.url,\n    request_headers = NEW.request_headers,\n    request_data = NEW.request_data,\n    response_headers = NEW.response_headers,\n    response_body = NEW.response_body,\n    response_status = NEW.response_status,\n    execution_duration = NEW.execution_duration,\n    internal_error_message = NEW.internal_error_message,\n    updated_at = NEW.updated_at,\n    created_at = NEW.created_at\n  WHERE web_hook_logs_part_0c5294f417.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO web_hook_logs_part_0c5294f417 (id,\n    web_hook_id,\n    trigger,\n    url,\n    request_headers,\n    request_data,\n    response_headers,\n    response_body,\n    response_status,\n    execution_duration,\n    internal_error_message,\n    updated_at,\n    created_at)\n  VALUES (NEW.id,\n    NEW.web_hook_id,\n    NEW.trigger,\n    NEW.url,\n    NEW.request_headers,\n    NEW.request_data,\n    NEW.response_headers,\n    NEW.response_body,\n    NEW.response_status,\n    NEW.execution_duration,\n    NEW.internal_error_message,\n    NEW.updated_at,\n    NEW.created_at);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0005s
                -- execute("COMMENT ON FUNCTION table_sync_function_29bc99d6db IS 'Partitioning migration: table sync for web_hook_logs table'")
                   -> 0.0002s
                -- current_schema()
                   -> 0.0002s
                -- execute("CREATE TRIGGER table_sync_trigger_b99eb6998c\nAFTER INSERT OR UPDATE OR DELETE ON web_hook_logs\nFOR EACH ROW\nEXECUTE FUNCTION table_sync_function_29bc99d6db()\n")
                   -> 0.0004s
                == 20210306121300 PartitionWebHookLogs: migrated (0.0497s) ====================

                == 20210306121310 BackfillPartitionedWebHookLogs: migrating ===================
                -- transaction_open?()
                   -> 0.0000s
                -- Scheduled 0 ::Gitlab::Database::PartitioningMigrationHelpers::BackfillPartitionedTable jobs with a maximum of 50000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:10 +0800."
                == 20210306121310 BackfillPartitionedWebHookLogs: migrated (0.0234s) ==========

                == 20210308125742 AddInfoColumnIntoSecurityScansTable: migrating ==============
                -- add_column(:security_scans, :info, :jsonb, {:null=>false, :default=>{}})
                   -> 0.0027s
                == 20210308125742 AddInfoColumnIntoSecurityScansTable: migrated (0.0027s) =====

                == 20210308175224 ChangeNamespaceSettingsDelayedProjectRemovalNull: migrating =
                -- change_column(:namespace_settings, :delayed_project_removal, :boolean, {:null=>true, :default=>nil})
                   -> 0.0008s
                == 20210308175224 ChangeNamespaceSettingsDelayedProjectRemovalNull: migrated (0.0009s)

                == 20210308175225 AddLockDelayedProjectRemovalToNamespaceSettings: migrating ==
                -- add_column(:namespace_settings, :lock_delayed_project_removal, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20210308175225 AddLockDelayedProjectRemovalToNamespaceSettings: migrated (0.0009s)

                == 20210308175226 AddDelayedProjectRemovalToApplicationSettings: migrating ====
                -- add_column(:application_settings, :delayed_project_removal, :boolean, {:default=>false, :null=>false})
                   -> 0.0016s
                == 20210308175226 AddDelayedProjectRemovalToApplicationSettings: migrated (0.0016s)

                == 20210308175227 AddLockDelayedProjectRemovalToApplicationSettings: migrating
                -- add_column(:application_settings, :lock_delayed_project_removal, :boolean, {:default=>false, :null=>false})
                   -> 0.0015s
                == 20210308175227 AddLockDelayedProjectRemovalToApplicationSettings: migrated (0.0016s)

                == 20210308190413 ChangeBatchedBackgroundMigrationsBatchClassNameDefault: migrating
                -- change_column_default(:batched_background_migrations, :batch_class_name, {:from=>"Gitlab::Database::BackgroundMigration::PrimaryKeyBatchingStrategy", :to=>"PrimaryKeyBatchingStrategy"})
                   -> 0.0020s
                == 20210308190413 ChangeBatchedBackgroundMigrationsBatchClassNameDefault: migrated (0.0020s)

                == 20210309160106 AddAdminModeToApplicationSetting: migrating =================
                -- add_column(:application_settings, :admin_mode, :boolean, {:default=>false, :null=>false})
                   -> 0.0015s
                == 20210309160106 AddAdminModeToApplicationSetting: migrated (0.0015s) ========

                == 20210309181019 AddLastUsedAtToClusterAgentToken: migrating =================
                -- add_column(:cluster_agent_tokens, :last_used_at, :datetime_with_timezone)
                   -> 0.0006s
                == 20210309181019 AddLastUsedAtToClusterAgentToken: migrated (0.0006s) ========

                == 20210310000627 AddIdxVulnerabilityOccurrencesDedup: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:vulnerability_occurrences, [:project_id, :report_type, :project_fingerprint], {:name=>"index_vulnerability_occurrences_deduplication", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:vulnerability_occurrences, [:project_id, :report_type, :project_fingerprint], {:name=>"index_vulnerability_occurrences_deduplication", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210310000627 AddIdxVulnerabilityOccurrencesDedup: migrated (0.0084s) =====

                == 20210310111009 AddSettingsToGroupMergeRequestApprovalSettings: migrating ===
                -- change_table(:group_merge_request_approval_settings, {:bulk=>true})
                   -> 0.0071s
                == 20210310111009 AddSettingsToGroupMergeRequestApprovalSettings: migrated (0.0072s)

                == 20210311022012 AddTextLimitsToDastSiteProfiles: migrating ==================NOTICE:  trigger "trigger_69523443cc10" for relation "events" does not exist, skipping
                NOTICE:  trigger "trigger_07c94931164e" for relation "push_event_payloads" does not exist, skipping

                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles\nADD CONSTRAINT check_d446f7047b\nCHECK ( char_length(auth_url) <= 1024 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles VALIDATE CONSTRAINT check_d446f7047b;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles\nADD CONSTRAINT check_5203110fee\nCHECK ( char_length(auth_username_field) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles VALIDATE CONSTRAINT check_5203110fee;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles\nADD CONSTRAINT check_c329dffdba\nCHECK ( char_length(auth_password_field) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles VALIDATE CONSTRAINT check_c329dffdba;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles\nADD CONSTRAINT check_f22f18002a\nCHECK ( char_length(auth_username) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles VALIDATE CONSTRAINT check_f22f18002a;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210311022012 AddTextLimitsToDastSiteProfiles: migrated (0.0200s) =========

                == 20210311045138 SetTraversalIdsForGitlabOrgGroupStaging: migrating ==========
                == 20210311045138 SetTraversalIdsForGitlabOrgGroupStaging: migrated (0.0000s) =

                == 20210311045139 SetTraversalIdsForGitlabOrgGroupCom: migrating ==============
                == 20210311045139 SetTraversalIdsForGitlabOrgGroupCom: migrated (0.0000s) =====

                == 20210311093723 AddPartialIndexOnCiPipelinesByCancelableStatusAndUsers: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipelines, [:user_id, :id], {:where=>"((status)::text = ANY (\n  ARRAY[\n    ('running'::character varying)::text,\n    ('waiting_for_resource'::character varying)::text,\n    ('preparing'::character varying)::text,\n    ('pending'::character varying)::text,\n    ('created'::character varying)::text,\n    ('scheduled'::character varying)::text\n  ]\n))\n", :name=>"index_ci_pipelines_on_user_id_and_id_and_cancelable_status", :algorithm=>:concurrently})
                   -> 0.0085s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipelines, [:user_id, :id], {:where=>"((status)::text = ANY (\n  ARRAY[\n    ('running'::character varying)::text,\n    ('waiting_for_resource'::character varying)::text,\n    ('preparing'::character varying)::text,\n    ('pending'::character varying)::text,\n    ('created'::character varying)::text,\n    ('scheduled'::character varying)::text\n  ]\n))\n", :name=>"index_ci_pipelines_on_user_id_and_id_and_cancelable_status", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210311093723 AddPartialIndexOnCiPipelinesByCancelableStatusAndUsers: migrated (0.0134s)

                == 20210311120152 AddMetricsToBatchedBackgroundMigrationJobs: migrating =======
                -- add_column(:batched_background_migration_jobs, :metrics, :jsonb, {:null=>false, :default=>{}})
                   -> 0.0024s
                == 20210311120152 AddMetricsToBatchedBackgroundMigrationJobs: migrated (0.0025s)

                == 20210311120153 InitializeConversionOfEventsIdToBigint: migrating ===========
                -- table_exists?(:events)
                   -> 0.0007s
                -- column_exists?(:events, :id)
                   -> 0.0012s
                -- column_exists?(:events, :id)
                   -> 0.0010s
                -- columns(:events)
                   -> 0.0010s
                -- add_column(:events, "id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0008s
                == 20210311120153 InitializeConversionOfEventsIdToBigint: migrated (0.0075s) ==

                == 20210311120154 InitializeConversionOfPushEventPayloadsEventIdToBigint: migrating
                -- table_exists?(:push_event_payloads)
                   -> 0.0006s
                -- column_exists?(:push_event_payloads, :event_id)
                   -> 0.0011s
                -- column_exists?(:push_event_payloads, :event_id)
                   -> 0.0010s
                -- columns(:push_event_payloads)
                   -> 0.0011s
                -- add_column(:push_event_payloads, "event_id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20210311120154 InitializeConversionOfPushEventPayloadsEventIdToBigint: migrated (0.0072s)

                == 20210311120155 BackfillEventsIdForBigintConversion: migrating ==============
                == 20210311120155 BackfillEventsIdForBigintConversion: migrated (0.0000s) =====

                == 20210311120156 BackfillPushEventPayloadEventIdForBigintConversion: migrating
                == 20210311120156 BackfillPushEventPayloadEventIdForBigintConversion: migrated (0.0000s)

                == 20210312140029 AddOwnerAndIdIndexOnActiveCiPipelineSchedules: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipeline_schedules, [:owner_id, :id], {:where=>"active = TRUE", :name=>"index_ci_pipeline_schedules_on_owner_id_and_id_and_active", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipeline_schedules, [:owner_id, :id], {:where=>"active = TRUE", :name=>"index_ci_pipeline_schedules_on_owner_id_and_id_and_active", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210312140029 AddOwnerAndIdIndexOnActiveCiPipelineSchedules: migrated (0.0068s)

                == 20210312174321 AddEnforcedGitCheckToSamlProvider: migrating ================
                -- add_column(:saml_providers, :git_check_enforced, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20210312174321 AddEnforcedGitCheckToSamlProvider: migrated (0.0009s) =======

                == 20210312193532 AddResourceAccessTokenCreationAllowedToNamespaceSettings: migrating
                -- add_column(:namespace_settings, :resource_access_token_creation_allowed, :boolean, {:default=>true, :null=>false})
                   -> 0.0009s
                == 20210312193532 AddResourceAccessTokenCreationAllowedToNamespaceSettings: migrated (0.0024s)

                == 20210313045617 AddVerificationStateAndStartedAtToSnippetRepositories: migrating
                -- change_table(:snippet_repositories)
                   -> 0.0013s
                == 20210313045617 AddVerificationStateAndStartedAtToSnippetRepositories: migrated (0.0013s)

                == 20210313045845 AddVerificationIndexesToSnippetRepositories: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippet_repositories, :verification_state, {:name=>"index_snippet_repositories_verification_state", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippet_repositories, :verification_state, {:name=>"index_snippet_repositories_verification_state", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippet_repositories, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"index_snippet_repositories_pending_verification", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippet_repositories, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"index_snippet_repositories_pending_verification", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippet_repositories, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"index_snippet_repositories_failed_verification", :algorithm=>:concurrently})
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippet_repositories, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"index_snippet_repositories_failed_verification", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:snippet_repositories, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"index_snippet_repositories_needs_verification", :algorithm=>:concurrently})
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:snippet_repositories, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"index_snippet_repositories_needs_verification", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210313045845 AddVerificationIndexesToSnippetRepositories: migrated (0.0279s)

                == 20210316094047 AddTrialExtensionTypeToGitlabSubscriptionHistories: migrating
                -- add_column(:gitlab_subscription_histories, :trial_extension_type, :smallint)
                   -> 0.0006s
                == 20210316094047 AddTrialExtensionTypeToGitlabSubscriptionHistories: migrated (0.0007s)

                == 20210316094323 AddTrialExtensionTypeToGitlabSubscriptions: migrating =======
                -- add_column(:gitlab_subscriptions, :trial_extension_type, :smallint)
                   -> 0.0004s
                == 20210316094323 AddTrialExtensionTypeToGitlabSubscriptions: migrated (0.0019s)

                == 20210316152500 AddIndexCiStagesOnPipelineIdAndId: migrating ================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_stages, [:pipeline_id, :id], {:where=>"status IN (0, 1, 2, 8, 9, 10)", :name=>"index_ci_stages_on_pipeline_id_and_id", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_stages, [:pipeline_id, :id], {:where=>"status IN (0, 1, 2, 8, 9, 10)", :name=>"index_ci_stages_on_pipeline_id_and_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210316152500 AddIndexCiStagesOnPipelineIdAndId: migrated (0.0074s) =======

                == 20210316171009 CreatePackagesHelmFileMetadata: migrating ===================
                -- create_table(:packages_helm_file_metadata, {:id=>false})
                -- quote_column_name(:channel)
                   -> 0.0000s
                   -> 0.0069s
                -- quote_table_name("check_c34067922d")
                   -> 0.0000s
                -- quote_table_name(:packages_helm_file_metadata)
                   -> 0.0000s
                -- execute("ALTER TABLE \"packages_helm_file_metadata\"\nADD CONSTRAINT \"check_c34067922d\" CHECK (char_length(\"channel\") <= 63)\n")
                   -> 0.0004s
                == 20210316171009 CreatePackagesHelmFileMetadata: migrated (0.0086s) ==========

                == 20210317035357 CreateDastProfilesPipelines: migrating ======================
                -- create_table(:dast_profiles_pipelines, {:primary_key=>[:dast_profile_id, :ci_pipeline_id], :comment=>"{\"owner\":\"group::dynamic analysis\",\"description\":\"Join table between DAST Profiles and CI Pipelines\"}"})
                   -> 0.0053s
                == 20210317035357 CreateDastProfilesPipelines: migrated (0.0054s) =============

                == 20210317100520 CreateElasticIndexSettings: migrating =======================
                -- create_table(:elastic_index_settings, {})
                -- quote_column_name(:alias_name)
                   -> 0.0000s
                   -> 0.0075s
                -- quote_table_name("check_c30005c325")
                   -> 0.0000s
                -- quote_table_name(:elastic_index_settings)
                   -> 0.0000s
                -- execute("ALTER TABLE \"elastic_index_settings\"\nADD CONSTRAINT \"check_c30005c325\" CHECK (char_length(\"alias_name\") <= 255)\n")
                   -> 0.0003s
                == 20210317100520 CreateElasticIndexSettings: migrated (0.0093s) ==============

                == 20210317104032 SetIterationCadenceAutomaticToFalse: migrating ==============
                == 20210317104032 SetIterationCadenceAutomaticToFalse: migrated (0.0005s) =====

                == 20210317104301 CreateInProductMarketingEmails: migrating ===================
                -- create_table(:in_product_marketing_emails)
                   -> 0.0030s
                -- add_index(:in_product_marketing_emails, :user_id)
                   -> 0.0031s
                -- add_index(:in_product_marketing_emails, [:user_id, :track, :series], {:unique=>true, :name=>"index_in_product_marketing_emails_on_user_track_series"})
                   -> 0.0030s
                == 20210317104301 CreateInProductMarketingEmails: migrated (0.0108s) ==========

                == 20210317105904 AddUserForeignKeyToInProductMarketingEmails: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:in_product_marketing_emails)
                   -> 0.0036s
                -- execute("ALTER TABLE in_product_marketing_emails\nADD CONSTRAINT fk_35c9101b63\nFOREIGN KEY (user_id)\nREFERENCES users (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE in_product_marketing_emails VALIDATE CONSTRAINT fk_35c9101b63;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210317105904 AddUserForeignKeyToInProductMarketingEmails: migrated (0.0081s)

                == 20210317123054 AddThrottlePackageRegistryColumns: migrating ================
                -- add_column(:application_settings, :throttle_unauthenticated_packages_api_requests_per_period, :integer, {:default=>800, :null=>false})
                   -> 0.0018s
                -- add_column(:application_settings, :throttle_unauthenticated_packages_api_period_in_seconds, :integer, {:default=>15, :null=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :throttle_authenticated_packages_api_requests_per_period, :integer, {:default=>1000, :null=>false})
                   -> 0.0011s
                -- add_column(:application_settings, :throttle_authenticated_packages_api_period_in_seconds, :integer, {:default=>15, :null=>false})
                   -> 0.0012s
                -- add_column(:application_settings, :throttle_unauthenticated_packages_api_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0012s
                -- add_column(:application_settings, :throttle_authenticated_packages_api_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0012s
                == 20210317123054 AddThrottlePackageRegistryColumns: migrated (0.0078s) =======

                == 20210317155207 ValidateNotNullConstraintOnClusterTokenName: migrating ======
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE cluster_agent_tokens VALIDATE CONSTRAINT check_0fb634d04d;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210317155207 ValidateNotNullConstraintOnClusterTokenName: migrated (0.0024s)

                == 20210317192943 AddExpiryNotificationDeliveredToKeys: migrating =============
                -- add_column(:keys, :expiry_notification_delivered_at, :datetime_with_timezone)
                   -> 0.0006s
                == 20210317192943 AddExpiryNotificationDeliveredToKeys: migrated (0.0006s) ====

                == 20210318134427 DeleteSecurityFindingsWithoutUuid: migrating ================
                == 20210318134427 DeleteSecurityFindingsWithoutUuid: migrated (0.0143s) =======

                == 20210319071214 AddHelmMaxFileSizeToPlanLimits: migrating ===================
                -- add_column(:plan_limits, :helm_max_file_size, :bigint, {:default=>5242880, :null=>false})
                   -> 0.0010s
                == 20210319071214 AddHelmMaxFileSizeToPlanLimits: migrated (0.0011s) ==========

                == 20210322063407 AddDastProfileIdFkToDastProfilesPipelines: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:dast_profiles_pipelines)
                   -> 0.0035s
                -- execute("ALTER TABLE dast_profiles_pipelines\nADD CONSTRAINT fk_cc206a8c13\nFOREIGN KEY (dast_profile_id)\nREFERENCES dast_profiles (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_profiles_pipelines VALIDATE CONSTRAINT fk_cc206a8c13;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210322063407 AddDastProfileIdFkToDastProfilesPipelines: migrated (0.0074s)

                == 20210322063450 AddCiPipelineIdFkToDastProfilesPipelines: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:dast_profiles_pipelines)
                   -> 0.0035s
                -- execute("ALTER TABLE dast_profiles_pipelines\nADD CONSTRAINT fk_a60cad829d\nFOREIGN KEY (ci_pipeline_id)\nREFERENCES ci_pipelines (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_profiles_pipelines VALIDATE CONSTRAINT fk_a60cad829d;")
                   -> 0.0013s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210322063450 AddCiPipelineIdFkToDastProfilesPipelines: migrated (0.0077s)

                == 20210322115438 ValidateNotNullConstraintOnGitlabSubscriptionsNamespaceId: migrating
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE gitlab_subscriptions VALIDATE CONSTRAINT check_77fea3f0e7;")
                   -> 0.0009s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210322115438 ValidateNotNullConstraintOnGitlabSubscriptionsNamespaceId: migrated (0.0042s)

                == 20210322182751 AddIndexToKeysOnExpiresAtAndExpiryNotificationUndelivered: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:keys, "date(timezone('UTC', expires_at)), expiry_notification_delivered_at", {:where=>"expiry_notification_delivered_at IS NULL", :name=>"index_keys_on_expires_at_and_expiry_notification_undelivered", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:keys, "date(timezone('UTC', expires_at)), expiry_notification_delivered_at", {:where=>"expiry_notification_delivered_at IS NULL", :name=>"index_keys_on_expires_at_and_expiry_notification_undelivered", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210322182751 AddIndexToKeysOnExpiresAtAndExpiryNotificationUndelivered: migrated (0.0083s)

                == 20210323064751 AddNamespaceTraversalIdsIndex: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:namespaces, :traversal_ids, {:using=>:gin, :name=>"index_namespaces_on_traversal_ids", :algorithm=>:concurrently})
                   -> 0.0073s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:namespaces, :traversal_ids, {:using=>:gin, :name=>"index_namespaces_on_traversal_ids", :algorithm=>:concurrently})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210323064751 AddNamespaceTraversalIdsIndex: migrated (0.0109s) ===========

                == 20210323125809 CreateStatusCheckResponsesTable: migrating ==================
                -- create_table(:status_check_responses)
                   -> 0.0029s
                -- add_index(:status_check_responses, :merge_request_id)
                   -> 0.0027s
                -- add_index(:status_check_responses, :external_approval_rule_id)
                   -> 0.0026s
                == 20210323125809 CreateStatusCheckResponsesTable: migrated (0.0083s) =========

                == 20210323130831 AddMergeRequestForeignKeyToStatusCheckResponses: migrating ==
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:status_check_responses)
                   -> 0.0036s
                -- execute("ALTER TABLE status_check_responses\nADD CONSTRAINT fk_f3953d86c6\nFOREIGN KEY (merge_request_id)\nREFERENCES merge_requests (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE status_check_responses VALIDATE CONSTRAINT fk_f3953d86c6;")
                   -> 0.0013s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210323130831 AddMergeRequestForeignKeyToStatusCheckResponses: migrated (0.0082s)

                == 20210323131543 AddExternalApprovalRuleForeignKeyToStatusCheckResponses: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:status_check_responses)
                   -> 0.0038s
                -- execute("ALTER TABLE status_check_responses\nADD CONSTRAINT fk_116e7e7369\nFOREIGN KEY (external_approval_rule_id)\nREFERENCES external_approval_rules (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE status_check_responses VALIDATE CONSTRAINT fk_116e7e7369;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210323131543 AddExternalApprovalRuleForeignKeyToStatusCheckResponses: migrated (0.0076s)

                == 20210323155010 PopulateDismissalInformationForVulnerabilities: migrating ===
                == 20210323155010 PopulateDismissalInformationForVulnerabilities: migrated (0.0024s)

                == 20210323182846 AddProjectStatusDateIndexToMergeRequests: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :state_id, :created_at, :id], {:name=>"idx_mrs_on_target_id_and_created_at_and_state_id", :algorithm=>:concurrently})
                   -> 0.0122s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, [:target_project_id, :state_id, :created_at, :id], {:name=>"idx_mrs_on_target_id_and_created_at_and_state_id", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210323182846 AddProjectStatusDateIndexToMergeRequests: migrated (0.0169s)

                == 20210324112439 AddIndexMirrorDataOnRetryNextExecutionWhereStatus: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_mirror_data, [:next_execution_timestamp, :retry_count], {:where=>"(status)::text <> ALL ('{scheduled,started}'::text[])", :name=>"index_mirror_data_non_scheduled_or_started", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:project_mirror_data, [:next_execution_timestamp, :retry_count], {:where=>"(status)::text <> ALL ('{scheduled,started}'::text[])", :name=>"index_mirror_data_non_scheduled_or_started", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210324112439 AddIndexMirrorDataOnRetryNextExecutionWhereStatus: migrated (0.0074s)

                == 20210324131727 MigrateElasticIndexSettings: migrating ======================
                == 20210324131727 MigrateElasticIndexSettings: migrated (0.3138s) =============

                == 20210325092215 AddNotValidForeignKeyToGroupHooks: migrating ================
                -- add_foreign_key(:web_hooks, :namespaces, {:column=>:group_id, :on_delete=>:cascade, :validate=>false})
                   -> 0.0012s
                == 20210325092215 AddNotValidForeignKeyToGroupHooks: migrated (0.0026s) =======

                == 20210325113129 ValidateForeignKeyOnServiceHooks: migrating =================
                -- foreign_keys(:web_hooks)
                   -> 0.0039s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE web_hooks VALIDATE CONSTRAINT fk_d47999a98a;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210325113129 ValidateForeignKeyOnServiceHooks: migrated (0.0053s) ========

                == 20210325150837 AddVerificationStateToCiPipelineArtifact: migrating =========
                -- change_table(:ci_pipeline_artifacts, {:bulk=>true})
                   -> 0.0015s
                == 20210325150837 AddVerificationStateToCiPipelineArtifact: migrated (0.0016s)

                == 20210325151758 AddVerificationFailureLimitToCiPipelineArtifact: migrating ==
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_artifacts\nADD CONSTRAINT ci_pipeline_artifacts_verification_failure_text_limit\nCHECK ( char_length(verification_failure) <= 255 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE ci_pipeline_artifacts VALIDATE CONSTRAINT ci_pipeline_artifacts_verification_failure_text_limit;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210325151758 AddVerificationFailureLimitToCiPipelineArtifact: migrated (0.0051s)

                == 20210325152011 AddVerificationIndexesToCiPipelineArtifacts: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipeline_artifacts, :verification_state, {:name=>"index_ci_pipeline_artifacts_verification_state", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipeline_artifacts, :verification_state, {:name=>"index_ci_pipeline_artifacts_verification_state", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipeline_artifacts, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"index_ci_pipeline_artifacts_pending_verification", :algorithm=>:concurrently})
                   -> 0.0028s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipeline_artifacts, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"index_ci_pipeline_artifacts_pending_verification", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipeline_artifacts, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"index_ci_pipeline_artifacts_failed_verification", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipeline_artifacts, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"index_ci_pipeline_artifacts_failed_verification", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_pipeline_artifacts, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"index_ci_pipeline_artifacts_needs_verification", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_pipeline_artifacts, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"index_ci_pipeline_artifacts_needs_verification", :algorithm=>:concurrently})
                   -> 0.0089s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210325152011 AddVerificationIndexesToCiPipelineArtifacts: migrated (0.0366s)

                == 20210326035553 AddIndexForProjectDeploymentsWithEnvironmentIdAndUpdatedAt: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:project_id, :environment_id, :updated_at], {:name=>"index_deployments_on_project_and_environment_and_updated_at", :algorithm=>:concurrently})
                   -> 0.0084s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:project_id, :environment_id, :updated_at], {:name=>"index_deployments_on_project_and_environment_and_updated_at", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210326035553 AddIndexForProjectDeploymentsWithEnvironmentIdAndUpdatedAt: migrated (0.0126s)

                == 20210326121537 BackfillCleanupForPartitionedWebHookLogs: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- table_exists?("web_hook_logs_part_0c5294f417")
                   -> 0.0005s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("VACUUM FREEZE ANALYZE web_hook_logs_part_0c5294f417")
                   -> 0.0148s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210326121537 BackfillCleanupForPartitionedWebHookLogs: migrated (0.0296s)

                == 20210326190903 CreateVulnerabilityFindingEvidences: migrating ==============
                -- create_table(:vulnerability_finding_evidences, {})
                -- quote_column_name(:summary)
                   -> 0.0000s
                   -> 0.0076s
                -- quote_table_name("check_5773b236fb")
                   -> 0.0000s
                -- quote_table_name(:vulnerability_finding_evidences)
                   -> 0.0000s
                -- execute("ALTER TABLE \"vulnerability_finding_evidences\"\nADD CONSTRAINT \"check_5773b236fb\" CHECK (char_length(\"summary\") <= 8000000)\n")
                   -> 0.0004s
                == 20210326190903 CreateVulnerabilityFindingEvidences: migrated (0.0101s) =====

                == 20210328214434 RemoveTemporaryIndexFromVulnerabilitiesTable: migrating =====
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:vulnerabilities)
                   -> 0.0055s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:vulnerabilities, {:algorithm=>:concurrently, :name=>"temporary_index_vulnerabilities_on_id"})
                   -> 0.0025s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210328214434 RemoveTemporaryIndexFromVulnerabilitiesTable: migrated (0.0088s)

                == 20210329095548 AddTargetProjectAndSourceBranchIndexToMergeRequest: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:merge_requests, [:target_project_id, :source_branch], {:name=>"index_merge_requests_on_target_project_id_and_source_branch", :algorithm=>:concurrently})
                   -> 0.0124s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:merge_requests, [:target_project_id, :source_branch], {:name=>"index_merge_requests_on_target_project_id_and_source_branch", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0003s
                == 20210329095548 AddTargetProjectAndSourceBranchIndexToMergeRequest: migrated (0.0172s)

                == 20210329102724 AddNewTrailPlans: migrating =================================
                == 20210329102724 AddNewTrailPlans: migrated (0.0000s) ========================

                == 20210329191850 AddFindingSignatureTable: migrating =========================
                -- create_table(:vulnerability_finding_signatures)
                   -> 0.0127s
                == 20210329191850 AddFindingSignatureTable: migrated (0.0140s) ================

                == 20210329192716 AddCompositeIndexToAwardEmoji: migrating ====================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:award_emoji, [:user_id, :name, :awardable_type, :awardable_id], {:name=>"idx_award_emoji_on_user_emoji_name_awardable_type_awardable_id", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:award_emoji, [:user_id, :name, :awardable_type, :awardable_id], {:name=>"idx_award_emoji_on_user_emoji_name_awardable_type_awardable_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210329192716 AddCompositeIndexToAwardEmoji: migrated (0.0063s) ===========

                == 20210330015805 AddCloudToLicenses: migrating ===============================
                -- add_column(:licenses, :cloud, :boolean, {:default=>false})
                   -> 0.0009s
                == 20210330015805 AddCloudToLicenses: migrated (0.0009s) ======================

                == 20210330091751 RemoveRecordsWithoutGroupFromWebhooksTable: migrating =======
                == 20210330091751 RemoveRecordsWithoutGroupFromWebhooksTable: migrated (0.0018s)

                == 20210330130420 DropFindingFingerprintTable: migrating ======================
                -- drop_table(:vulnerability_finding_fingerprints)
                   -> 0.0013s
                == 20210330130420 DropFindingFingerprintTable: migrated (0.0026s) =============

                == 20210331105335 DropNonPartitionedAuditEvents: migrating ====================
                -- execute("DROP TRIGGER IF EXISTS table_sync_trigger_ee39a25f9d ON audit_events")
                   -> 0.0031s
                -- execute("DROP FUNCTION IF EXISTS table_sync_function_2be879775d()")
                   -> 0.0003s
                -- drop_table("audit_events_archived")
                   -> 0.0012s
                == 20210331105335 DropNonPartitionedAuditEvents: migrated (0.0061s) ===========

                == 20210331125111 AddDefaultTargetProject: migrating ==========================
                -- add_column(:project_settings, :mr_default_target_self, :boolean, {:default=>false, :null=>false})
                   -> 0.0008s
                == 20210331125111 AddDefaultTargetProject: migrated (0.0022s) =================

                == 20210331145548 AddIndexForLastDeployment: migrating ========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:environment_id, :status, :id], {:name=>"index_deployments_on_environment_id_status_and_id", :algorithm=>:concurrently})
                   -> 0.0089s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:environment_id, :status, :id], {:name=>"index_deployments_on_environment_id_status_and_id", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210331145548 AddIndexForLastDeployment: migrated (0.0134s) ===============

                == 20210331180118 RemoveDeprecatedIndexFromAwardEmoji: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:award_emoji)
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:award_emoji, {:algorithm=>:concurrently, :name=>"index_award_emoji_on_user_id_and_name"})
                   -> 0.0022s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210331180118 RemoveDeprecatedIndexFromAwardEmoji: migrated (0.0053s) =====

                == 20210401131948 MoveContainerRegistryEnabledToProjectFeatures2: migrating ===
                == 20210401131948 MoveContainerRegistryEnabledToProjectFeatures2: migrated (0.0000s)

                == 20210401134157 AddIndexToPagesDeployments: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:pages_deployments, [:file_store, :id], {:name=>"index_pages_deployments_on_file_store_and_id", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:pages_deployments, [:file_store, :id], {:name=>"index_pages_deployments_on_file_store_and_id", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210401134157 AddIndexToPagesDeployments: migrated (0.0062s) ==============

                == 20210401134455 RemoveIndexMirrorDataOnNextExecutionAndRetryCount: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:project_mirror_data, [:next_execution_timestamp, :retry_count], {:name=>"index_mirror_data_on_next_execution_and_retry_count", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:project_mirror_data, {:name=>"index_mirror_data_on_next_execution_and_retry_count", :algorithm=>:concurrently, :column=>[:next_execution_timestamp, :retry_count]})
                   -> 0.0059s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210401134455 RemoveIndexMirrorDataOnNextExecutionAndRetryCount: migrated (0.0116s)

                == 20210401175134 AddBeforeExpiryNotificationDeliveredToKeys: migrating =======
                -- add_column(:keys, :before_expiry_notification_delivered_at, :datetime_with_timezone)
                   -> 0.0007s
                == 20210401175134 AddBeforeExpiryNotificationDeliveredToKeys: migrated (0.0007s)

                == 20210401192808 AddIndexToKeysOnExpiresAtAndBeforeExpiryNotificationUndelivered: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:keys, "date(timezone('UTC', expires_at)), before_expiry_notification_delivered_at", {:where=>"before_expiry_notification_delivered_at IS NULL", :name=>"idx_keys_expires_at_and_before_expiry_notification_undelivered", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:keys, "date(timezone('UTC', expires_at)), before_expiry_notification_delivered_at", {:where=>"before_expiry_notification_delivered_at IS NULL", :name=>"idx_keys_expires_at_and_before_expiry_notification_undelivered", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210401192808 AddIndexToKeysOnExpiresAtAndBeforeExpiryNotificationUndelivered: migrated (0.0078s)

                == 20210402005225 AddSourceAndLevelIndexOnNotificationSettings: migrating =====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:notification_settings, [:source_id, :source_type, :level, :user_id], {:name=>"index_notification_settings_on_source_and_level_and_user", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:notification_settings, [:source_id, :source_type, :level, :user_id], {:name=>"index_notification_settings_on_source_and_level_and_user", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:notification_settings)
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:notification_settings, {:algorithm=>:concurrently, :name=>"index_notification_settings_on_source_id_and_source_type"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:notification_settings)
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:notification_settings, {:algorithm=>:concurrently, :name=>"index_notification_settings_on_user_id"})
                   -> 0.0022s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210402005225 AddSourceAndLevelIndexOnNotificationSettings: migrated (0.0180s)

                == 20210403022952 RemoveNotesDeleteCascadeTimelogs: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:timelogs)
                   -> 0.0038s
                -- execute("ALTER TABLE timelogs\nADD CONSTRAINT fk_timelogs_note_id\nFOREIGN KEY (note_id)\nREFERENCES notes (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE timelogs VALIDATE CONSTRAINT fk_timelogs_note_id;")
                   -> 0.0013s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- foreign_keys(:timelogs)
                   -> 0.0037s
                -- remove_foreign_key(:timelogs, :notes, {:column=>:note_id, :on_delete=>:cascade})
                   -> 0.0041s
                == 20210403022952 RemoveNotesDeleteCascadeTimelogs: migrated (0.0174s) ========

                == 20210406063442 CreateNamespacesIdParentIdPartialIndex: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:namespaces, :id, {:where=>"parent_id IS NULL", :name=>"index_namespaces_id_parent_id_is_null", :algorithm=>:concurrently})
                   -> 0.0078s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:namespaces, :id, {:where=>"parent_id IS NULL", :name=>"index_namespaces_id_parent_id_is_null", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210406063442 CreateNamespacesIdParentIdPartialIndex: migrated (0.0124s) ==

                == 20210406140057 AddTotalTupleCountToBatchedMigrations: migrating ============
                -- add_column(:batched_background_migrations, :total_tuple_count, :bigint)
                   -> 0.0006s
                == 20210406140057 AddTotalTupleCountToBatchedMigrations: migrated (0.0006s) ===

                == 20210406144743 BackfillTotalTupleCountForBatchedMigrations: migrating ======
                == 20210406144743 BackfillTotalTupleCountForBatchedMigrations: migrated (0.0000s)

                == 20210407002511 AddTypeToDastSiteProfile: migrating =========================
                -- add_column(:dast_site_profiles, :target_type, :integer, {:limit=>2, :default=>0, :null=>false})
                   -> 0.0010s
                == 20210407002511 AddTypeToDastSiteProfile: migrated (0.0010s) ================

                == 20210407111027 AddWhatsNewApplicationSetting: migrating ====================
                -- add_column(:application_settings, :whats_new_variant, :integer, {:limit=>2, :default=>0})
                   -> 0.0014s
                == 20210407111027 AddWhatsNewApplicationSetting: migrated (0.0015s) ===========

                == 20210407140539 AddVerificationStateAndStartedAtToTerraformStateVersionTable: migrating
                -- change_table(:terraform_state_versions)
                   -> 0.0013s
                == 20210407140539 AddVerificationStateAndStartedAtToTerraformStateVersionTable: migrated (0.0013s)

                == 20210407150240 ConfirmSupportBotUser: migrating ============================
                == 20210407150240 ConfirmSupportBotUser: migrated (0.0011s) ===================

                == 20210409084242 CreateIndexOnNotesForCherryPickedMergeRequests: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:notes, [:project_id, :commit_id], {:where=>"((noteable_type)::text = 'MergeRequest'::text)", :name=>"index_notes_for_cherry_picked_merge_requests", :algorithm=>:concurrently})
                   -> 0.0048s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:notes, [:project_id, :commit_id], {:where=>"((noteable_type)::text = 'MergeRequest'::text)", :name=>"index_notes_for_cherry_picked_merge_requests", :algorithm=>:concurrently})
                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210409084242 CreateIndexOnNotesForCherryPickedMergeRequests: migrated (0.0094s)

                == 20210409185501 IndexMembersOnUserIdSourceIdSourceType: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:members, [:user_id, :source_id, :source_type], {:name=>"index_members_on_user_id_source_id_source_type", :algorithm=>:concurrently})
                   -> 0.0045s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:members, [:user_id, :source_id, :source_type], {:name=>"index_members_on_user_id_source_id_source_type", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210409185501 IndexMembersOnUserIdSourceIdSourceType: migrated (0.0088s) ==

                == 20210409185531 RemoveMembersIndexOnUserId: migrating =======================
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:members)
                   -> 0.0049s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:members, {:algorithm=>:concurrently, :name=>"index_members_on_user_id"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210409185531 RemoveMembersIndexOnUserId: migrated (0.0081s) ==============

                == 20210411212813 AddClustersIntegrationsPrometheus: migrating ================
                -- create_table(:clusters_integration_prometheus, {:id=>false})
                   -> 0.0034s
                == 20210411212813 AddClustersIntegrationsPrometheus: migrated (0.0048s) =======

                == 20210412111213 CreateSecurityOrchestrationPolicyRuleSchedule: migrating ====
                -- create_table(:security_orchestration_policy_rule_schedules, {:comment=>"{\"owner\":\"group::container security\",\"description\":\"Schedules used to store relationship between project and security policy repository\"}"})
                -- quote_column_name(:cron)
                   -> 0.0000s
                   -> 0.0111s
                -- quote_table_name("check_915825a76e")
                   -> 0.0000s
                -- quote_table_name(:security_orchestration_policy_rule_schedules)
                   -> 0.0000s
                -- execute("ALTER TABLE \"security_orchestration_policy_rule_schedules\"\nADD CONSTRAINT \"check_915825a76e\" CHECK (char_length(\"cron\") <= 255)\n")
                   -> 0.0004s
                == 20210412111213 CreateSecurityOrchestrationPolicyRuleSchedule: migrated (0.0134s)

                == 20210412132736 AddInstanceUrlToJiraConnectInstallations: migrating =========
                -- add_column(:jira_connect_installations, :instance_url, :text)
                   -> 0.0006s
                == 20210412132736 AddInstanceUrlToJiraConnectInstallations: migrated (0.0023s)

                == 20210412132824 AddTextLimitToJiraConnectInstallationsInstanceUrl: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE jira_connect_installations\nADD CONSTRAINT check_4c6abed669\nCHECK ( char_length(instance_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE jira_connect_installations VALIDATE CONSTRAINT check_4c6abed669;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210412132824 AddTextLimitToJiraConnectInstallationsInstanceUrl: migrated (0.0051s)

                == 20210412142223 AddUserIndexOnSpamLogs: migrating ===========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:spam_logs, :user_id, {:name=>"index_spam_logs_on_user_id", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:spam_logs, :user_id, {:name=>"index_spam_logs_on_user_id", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210412142223 AddUserIndexOnSpamLogs: migrated (0.0053s) ==================

                == 20210412172030 AddConfiguredAtToSecurityOrchestrationPolicy: migrating =====
                -- add_column(:security_orchestration_policy_configurations, :configured_at, :datetime_with_timezone, {:null=>true})
                   -> 0.0008s
                == 20210412172030 AddConfiguredAtToSecurityOrchestrationPolicy: migrated (0.0008s)

                == 20210413092922 AddIndexToPackagesMavenMetadataPath: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_maven_metadata, :path, {:name=>"index_packages_maven_metadata_on_path", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_maven_metadata, :path, {:name=>"index_packages_maven_metadata_on_path", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210413092922 AddIndexToPackagesMavenMetadataPath: migrated (0.0057s) =====

                == 20210413121101 AddCreatedAtWebHookIdIndexToPartitionedWebHookLog: migrating
                -- index_name_exists?(:web_hook_logs_part_0c5294f417, "index_web_hook_logs_part_on_created_at_and_web_hook_id")
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000", [:created_at, :web_hook_id], {:name=>"index_eecfac613f", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000", [:created_at, :web_hook_id], {:name=>"index_eecfac613f", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203", [:created_at, :web_hook_id], {:name=>"index_890764e73e", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203", [:created_at, :web_hook_id], {:name=>"index_890764e73e", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204", [:created_at, :web_hook_id], {:name=>"index_381e18f1ed", :algorithm=>:concurrently})
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204", [:created_at, :web_hook_id], {:name=>"index_381e18f1ed", :algorithm=>:concurrently})
                   -> 0.0031s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- add_index(:web_hook_logs_part_0c5294f417, [:created_at, :web_hook_id], {:name=>"index_web_hook_logs_part_on_created_at_and_web_hook_id"})
                   -> 0.0021s
                == 20210413121101 AddCreatedAtWebHookIdIndexToPartitionedWebHookLog: migrated (0.0296s)

                == 20210413123832 AddIndexOnWebHookIdToPartitionedWebHookLog: migrating =======
                -- index_name_exists?(:web_hook_logs_part_0c5294f417, "index_web_hook_logs_part_on_web_hook_id")
                   -> 0.0009s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000", :web_hook_id, {:name=>"index_80bf138a51", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000", :web_hook_id, {:name=>"index_80bf138a51", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203", :web_hook_id, {:name=>"index_ed282a4da3", :algorithm=>:concurrently})
                   -> 0.0014s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203", :web_hook_id, {:name=>"index_ed282a4da3", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204", :web_hook_id, {:name=>"index_e16c52af89", :algorithm=>:concurrently})
                   -> 0.0014s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204", :web_hook_id, {:name=>"index_e16c52af89", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- add_index(:web_hook_logs_part_0c5294f417, :web_hook_id, {:name=>"index_web_hook_logs_part_on_web_hook_id"})
                   -> 0.0020s
                == 20210413123832 AddIndexOnWebHookIdToPartitionedWebHookLog: migrated (0.0302s)

                == 20210413130011 AddPartitionedWebHookLogFk: migrating =======================
                -- foreign_keys(:web_hook_logs_part_0c5294f417)
                   -> 0.0035s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000")
                   -> 0.0035s
                -- execute("ALTER TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000\nADD CONSTRAINT fk_rails_bb3355782d\nFOREIGN KEY (web_hook_id)\nREFERENCES web_hooks (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_000000 VALIDATE CONSTRAINT fk_rails_bb3355782d;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203")
                   -> 0.0034s
                -- execute("ALTER TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203\nADD CONSTRAINT fk_rails_bb3355782d\nFOREIGN KEY (web_hook_id)\nREFERENCES web_hooks (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202203 VALIDATE CONSTRAINT fk_rails_bb3355782d;")
                   -> 0.0009s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys("gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204")
                   -> 0.0034s
                -- execute("ALTER TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204\nADD CONSTRAINT fk_rails_bb3355782d\nFOREIGN KEY (web_hook_id)\nREFERENCES web_hooks (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE gitlab_partitions_dynamic.web_hook_logs_part_0c5294f417_202204 VALIDATE CONSTRAINT fk_rails_bb3355782d;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- add_foreign_key(:web_hook_logs_part_0c5294f417, :web_hooks, {:column=>:web_hook_id, :on_delete=>:cascade, :name=>"fk_rails_bb3355782d", :validate=>true})
                   -> 0.0013s
                == 20210413130011 AddPartitionedWebHookLogFk: migrated (0.0375s) ==============

                == 20210413132500 RescheduleArtifactExpiryBackfillAgain: migrating ============
                -- Scheduled 0 BackfillArtifactExpiryDate jobs with a maximum of 200000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:11 +0800."
                NOTICE:  trigger "trigger_21e7a2602957" for relation "ci_build_needs" does not exist, skipping
                == 20210413132500 RescheduleArtifactExpiryBackfillAgain: migrated (0.0049s) ===

                == 20210413155324 AddPauseSecondsToBatchedBackgroundMigrations: migrating =====
                -- add_column(:batched_background_migrations, :pause_ms, :integer, {:null=>false, :default=>100})
                   -> 0.0010s
                == 20210413155324 AddPauseSecondsToBatchedBackgroundMigrations: migrated (0.0010s)

                == 20210414045322 AddPauseSecondsToBatchedBackgroundMigrationJobs: migrating ==
                -- add_column(:batched_background_migration_jobs, :pause_ms, :integer, {:null=>false, :default=>100})
                   -> 0.0009s
                == 20210414045322 AddPauseSecondsToBatchedBackgroundMigrationJobs: migrated (0.0009s)

                == 20210414095944 AddIndexServicesOnProjectAndTypeWhereInheritNull: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:services, [:project_id, :type], {:where=>"inherit_from_id IS NULL", :name=>"index_services_on_project_and_type_where_inherit_null", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:services, [:project_id, :type], {:where=>"inherit_from_id IS NULL", :name=>"index_services_on_project_and_type_where_inherit_null", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210414095944 AddIndexServicesOnProjectAndTypeWhereInheritNull: migrated (0.0089s)

                == 20210414100914 AddBulkImportExportsTable: migrating ========================
                -- create_table(:bulk_import_exports, {})
                -- quote_column_name(:relation)
                   -> 0.0000s
                -- quote_column_name(:jid)
                   -> 0.0000s
                -- quote_column_name(:error)
                   -> 0.0000s
                   -> 0.0047s
                -- quote_table_name("check_24cb010672")
                   -> 0.0000s
                -- quote_table_name("check_9ee6d14d33")
                   -> 0.0000s
                -- quote_table_name("check_8f0f357334")
                   -> 0.0000s
                -- quote_table_name(:bulk_import_exports)
                   -> 0.0000s
                -- execute("ALTER TABLE \"bulk_import_exports\"\nADD CONSTRAINT \"check_24cb010672\" CHECK (char_length(\"relation\") <= 255),\nADD CONSTRAINT \"check_9ee6d14d33\" CHECK (char_length(\"jid\") <= 255),\nADD CONSTRAINT \"check_8f0f357334\" CHECK (char_length(\"error\") <= 255)\n")
                   -> 0.0006s
                == 20210414100914 AddBulkImportExportsTable: migrated (0.0068s) ===============

                == 20210414130017 AddForeignKeyToBulkImportExportsOnProject: migrating ========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:bulk_import_exports)
                   -> 0.0037s
                -- execute("ALTER TABLE bulk_import_exports\nADD CONSTRAINT fk_39c726d3b5\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_exports VALIDATE CONSTRAINT fk_39c726d3b5;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210414130017 AddForeignKeyToBulkImportExportsOnProject: migrated (0.0084s)

                == 20210414130526 AddForeignKeyToBulkImportExportsOnGroup: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:bulk_import_exports)
                   -> 0.0035s
                -- execute("ALTER TABLE bulk_import_exports\nADD CONSTRAINT fk_8c6f33cebe\nFOREIGN KEY (group_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE bulk_import_exports VALIDATE CONSTRAINT fk_8c6f33cebe;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210414130526 AddForeignKeyToBulkImportExportsOnGroup: migrated (0.0077s) =

                == 20210414131600 AddExternalPipelineValidationToApplicationSetting: migrating
                -- add_column(:application_settings, :external_pipeline_validation_service_timeout, :integer)
                   -> 0.0011s
                -- add_column(:application_settings, :encrypted_external_pipeline_validation_service_token, :text)
                   -> 0.0006s
                -- add_column(:application_settings, :encrypted_external_pipeline_validation_service_token_iv, :text)
                   -> 0.0006s
                -- add_column(:application_settings, :external_pipeline_validation_service_url, :text)
                   -> 0.0006s
                == 20210414131600 AddExternalPipelineValidationToApplicationSetting: migrated (0.0030s)

                == 20210414131807 AddBulkImportExportsTableIndexes: migrating =================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:bulk_import_exports, [:group_id, :relation], {:unique=>true, :where=>"group_id IS NOT NULL", :name=>"partial_index_bulk_import_exports_on_group_id_and_relation", :algorithm=>:concurrently})
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:bulk_import_exports, [:group_id, :relation], {:unique=>true, :where=>"group_id IS NOT NULL", :name=>"partial_index_bulk_import_exports_on_group_id_and_relation", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:bulk_import_exports, [:project_id, :relation], {:unique=>true, :where=>"project_id IS NOT NULL", :name=>"partial_index_bulk_import_exports_on_project_id_and_relation", :algorithm=>:concurrently})
                   -> 0.0015s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:bulk_import_exports, [:project_id, :relation], {:unique=>true, :where=>"project_id IS NOT NULL", :name=>"partial_index_bulk_import_exports_on_project_id_and_relation", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210414131807 AddBulkImportExportsTableIndexes: migrated (0.0110s) ========

                == 20210414133310 AddBulkImportExportUploadsTable: migrating ==================
                -- create_table(:bulk_import_export_uploads, {})
                -- quote_column_name(:export_file)
                   -> 0.0000s
                   -> 0.0072s
                -- quote_table_name("check_5add76239d")
                   -> 0.0000s
                -- quote_table_name(:bulk_import_export_uploads)
                   -> 0.0000s
                -- execute("ALTER TABLE \"bulk_import_export_uploads\"\nADD CONSTRAINT \"check_5add76239d\" CHECK (char_length(\"export_file\") <= 255)\n")
                   -> 0.0003s
                == 20210414133310 AddBulkImportExportUploadsTable: migrated (0.0089s) =========

                == 20210415074645 IndexMembersOnUserIdAccessLevelRequestedAtIsNull: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:members, [:user_id, :access_level], {:where=>"requested_at IS NULL", :name=>"index_members_on_user_id_and_access_level_requested_at_is_null", :algorithm=>:concurrently})
                   -> 0.0049s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:members, [:user_id, :access_level], {:where=>"requested_at IS NULL", :name=>"index_members_on_user_id_and_access_level_requested_at_is_null", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210415074645 IndexMembersOnUserIdAccessLevelRequestedAtIsNull: migrated (0.0094s)

                == 20210415100159 InitializeConversionOfCiBuildNeedsToBigint: migrating =======
                -- table_exists?(:ci_build_needs)
                   -> 0.0006s
                -- column_exists?(:ci_build_needs, :id)
                   -> 0.0011s
                -- column_exists?(:ci_build_needs, :build_id)
                   -> 0.0010s
                -- columns(:ci_build_needs)
                   -> 0.0010s
                -- add_column(:ci_build_needs, "build_id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20210415100159 InitializeConversionOfCiBuildNeedsToBigint: migrated (0.0072s)

                == 20210415101228 BackfillCiBuildNeedsForBigintConversion: migrating ==========
                == 20210415101228 BackfillCiBuildNeedsForBigintConversion: migrated (0.0000s) =

                == 20210415142700 AddUrlLimitToPipelineValidation: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT app_settings_ext_pipeline_validation_service_url_text_limit\nCHECK ( char_length(external_pipeline_validation_service_url) <= 255 )\nNOT VALID;\n")
                   -> 0.0009s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT app_settings_ext_pipeline_validation_service_url_text_limit;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210415142700 AddUrlLimitToPipelineValidation: migrated (0.0061s) =========

                == 20210415144538 RemoveIndexEpicsOnGroupIdFromEpics: migrating ===============
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:epics)
                   -> 0.0066s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:epics, {:algorithm=>:concurrently, :name=>"index_epics_on_group_id"})NOTICE:  trigger "trigger_be1804f21693" for relation "ci_job_artifacts" does not exist, skipping

                   -> 0.0027s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210415144538 RemoveIndexEpicsOnGroupIdFromEpics: migrated (0.0120s) ======

                == 20210415155043 MoveContainerRegistryEnabledToProjectFeatures3: migrating ===
                -- Scheduled 1 MoveContainerRegistryEnabledToProjectFeature jobs with a maximum of 21000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:26:12 +0800."
                == 20210415155043 MoveContainerRegistryEnabledToProjectFeatures3: migrated (0.0871s)

                == 20210415172516 CreateVulnerabilityFindingEvidenceRequests: migrating =======
                -- create_table(:vulnerability_finding_evidence_requests, {})
                -- quote_column_name(:method)
                   -> 0.0001s
                -- quote_column_name(:url)
                   -> 0.0000s
                   -> 0.0082s
                -- quote_table_name("check_d9d11300f4")
                   -> 0.0000s
                -- quote_table_name("check_8152fbb236")
                   -> 0.0000s
                -- quote_table_name(:vulnerability_finding_evidence_requests)
                   -> 0.0000s
                -- execute("ALTER TABLE \"vulnerability_finding_evidence_requests\"\nADD CONSTRAINT \"check_d9d11300f4\" CHECK (char_length(\"method\") <= 32),\nADD CONSTRAINT \"check_8152fbb236\" CHECK (char_length(\"url\") <= 2048)\n")
                   -> 0.0005s
                == 20210415172516 CreateVulnerabilityFindingEvidenceRequests: migrated (0.0110s)

                == 20210416172516 CreateVulnerabilityFindingEvidenceResponses: migrating ======
                -- create_table(:vulnerability_finding_evidence_responses, {})
                -- quote_column_name(:reason_phrase)
                   -> 0.0000s
                   -> 0.0074s
                -- quote_table_name("check_58b124ab48")
                   -> 0.0000s
                -- quote_table_name(:vulnerability_finding_evidence_responses)
                   -> 0.0000s
                -- execute("ALTER TABLE \"vulnerability_finding_evidence_responses\"\nADD CONSTRAINT \"check_58b124ab48\" CHECK (char_length(\"reason_phrase\") <= 2048)\n")
                   -> 0.0004s
                == 20210416172516 CreateVulnerabilityFindingEvidenceResponses: migrated (0.0095s)

                == 20210419090412 RemoveDebianGroupArchitecturesDistributionIdIndex: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_debian_group_architectures, :distribution_id, {:name=>"idx_pkgs_deb_grp_architectures_on_distribution_id", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:packages_debian_group_architectures, {:name=>"idx_pkgs_deb_grp_architectures_on_distribution_id", :algorithm=>:concurrently, :column=>:distribution_id})
                   -> 0.0044s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210419090412 RemoveDebianGroupArchitecturesDistributionIdIndex: migrated (0.0072s)

                == 20210419090542 RemoveDebianProjectArchitecturesDistributionIdIndex: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_debian_project_architectures, :distribution_id, {:name=>"idx_pkgs_deb_proj_architectures_on_distribution_id", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:packages_debian_project_architectures, {:name=>"idx_pkgs_deb_proj_architectures_on_distribution_id", :algorithm=>:concurrently, :column=>:distribution_id})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210419090542 RemoveDebianProjectArchitecturesDistributionIdIndex: migrated (0.0069s)

                == 20210419203017 AddRemoteImportUrlToImportExportUpload: migrating ===========
                -- add_column(:import_export_uploads, :remote_import_url, :text)
                   -> 0.0006s
                == 20210419203017 AddRemoteImportUrlToImportExportUpload: migrated (0.0007s) ==

                == 20210419203018 AddRemoteTextLimitToImportUrlInImportExportUpload: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE import_export_uploads\nADD CONSTRAINT check_58f0d37481\nCHECK ( char_length(remote_import_url) <= 512 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE import_export_uploads VALIDATE CONSTRAINT check_58f0d37481;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210419203018 AddRemoteTextLimitToImportUrlInImportExportUpload: migrated (0.0053s)

                == 20210419224834 UpdateIssuesIterationForeignKey: migrating ==================
                -- foreign_keys(:issues)
                   -> 0.0040s
                -- remove_foreign_key(:issues, {:column=>:sprint_id})
                   -> 0.0046s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:issues)
                   -> 0.0036s
                -- execute("ALTER TABLE issues\nADD CONSTRAINT fk_3b8c72ea56\nFOREIGN KEY (sprint_id)\nREFERENCES sprints (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0009s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE issues VALIDATE CONSTRAINT fk_3b8c72ea56;")
                   -> 0.0012s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210419224834 UpdateIssuesIterationForeignKey: migrated (0.0181s) =========

                == 20210420012444 ChangeWebHookEventsDefault: migrating =======================
                -- change_column_default(:web_hooks, :push_events, true)
                   -> 0.0024s
                -- change_column_default(:web_hooks, :issues_events, false)
                   -> 0.0020s
                -- change_column_default(:web_hooks, :merge_requests_events, false)
                   -> 0.0020s
                -- change_column_default(:web_hooks, :tag_push_events, false)
                   -> 0.0020s
                == 20210420012444 ChangeWebHookEventsDefault: migrated (0.0085s) ==============

                == 20210420012909 IndexClusterAgentTokensOnLastUsedAt: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:cluster_agent_tokens, "agent_id, last_used_at DESC NULLS LAST", {:name=>"index_cluster_agent_tokens_on_agent_id_and_last_used_at", :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:cluster_agent_tokens, "agent_id, last_used_at DESC NULLS LAST", {:name=>"index_cluster_agent_tokens_on_agent_id_and_last_used_at", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:cluster_agent_tokens)
                   -> 0.0025s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:cluster_agent_tokens, {:algorithm=>:concurrently, :name=>"index_cluster_agent_tokens_on_agent_id"})
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210420012909 IndexClusterAgentTokensOnLastUsedAt: migrated (0.0122s) =====

                == 20210420103955 RemoveHipchatServiceRecords: migrating ======================
                == 20210420103955 RemoveHipchatServiceRecords: migrated (0.0318s) =============

                == 20210420120734 InitializeConversionOfCiJobArtifactsToBigint: migrating =====
                -- table_exists?(:ci_job_artifacts)
                   -> 0.0007s
                -- column_exists?(:ci_job_artifacts, :id)
                   -> 0.0013s
                -- column_exists?(:ci_job_artifacts, :id)
                   -> 0.0012s
                -- column_exists?(:ci_job_artifacts, :job_id)
                   -> 0.0011s
                -- columns(:ci_job_artifacts)
                   -> 0.0011s
                -- add_column(:ci_job_artifacts, "id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0009s
                -- columns(:ci_job_artifacts)
                   -> 0.0012s
                -- add_column(:ci_job_artifacts, "job_id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20210420120734 InitializeConversionOfCiJobArtifactsToBigint: migrated (0.0111s)

                == 20210420121149 BackfillConversionOfCiJobArtifacts: migrating ===============
                == 20210420121149 BackfillConversionOfCiJobArtifacts: migrated (0.0000s) ======

                == 20210420173030 AddVerificationIndexesToTerraformStateVersions: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_state_versions, :verification_state, {:name=>"index_terraform_state_versions_on_verification_state", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_state_versions, :verification_state, {:name=>"index_terraform_state_versions_on_verification_state", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_state_versions, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"index_terraform_state_versions_pending_verification", :algorithm=>:concurrently})
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_state_versions, :verified_at, {:where=>"(verification_state = 0)", :order=>{:verified_at=>"ASC NULLS FIRST"}, :name=>"index_terraform_state_versions_pending_verification", :algorithm=>:concurrently})NOTICE:  constraint "check_aaf4e1bc37" of relation "elastic_reindexing_subtasks" does not exist, skipping
                NOTICE:  trigger "trigger_8485e97c00e3" for relation "ci_sources_pipelines" does not exist, skipping

                   -> 0.0038s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_state_versions, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"index_terraform_state_versions_failed_verification", :algorithm=>:concurrently})
                   -> 0.0029s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_state_versions, :verification_retry_at, {:where=>"(verification_state = 3)", :order=>{:verification_retry_at=>"ASC NULLS FIRST"}, :name=>"index_terraform_state_versions_failed_verification", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:terraform_state_versions, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"index_terraform_state_versions_needs_verification", :algorithm=>:concurrently})
                   -> 0.0032s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:terraform_state_versions, :verification_state, {:where=>"(verification_state = 0 OR verification_state = 3)", :name=>"index_terraform_state_versions_needs_verification", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210420173030 AddVerificationIndexesToTerraformStateVersions: migrated (0.0304s)

                == 20210420210642 RecreateIndexForProjectDeploymentsWithEnvironmentIdAndDateAt: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:deployments, [:project_id, :environment_id, :updated_at, :id], {:name=>"index_deployments_on_project_and_environment_and_updated_at_id", :algorithm=>:concurrently})
                   -> 0.0091s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:deployments, [:project_id, :environment_id, :updated_at, :id], {:name=>"index_deployments_on_project_and_environment_and_updated_at_id", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:deployments)
                   -> 0.0092s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:deployments, {:algorithm=>:concurrently, :name=>"index_deployments_on_project_and_environment_and_updated_at"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210420210642 RecreateIndexForProjectDeploymentsWithEnvironmentIdAndDateAt: migrated (0.0262s)

                == 20210420221106 UpdateMergeRequestsIterationForeignKey: migrating ===========
                -- foreign_keys(:merge_requests)
                   -> 0.0040s
                -- remove_foreign_key(:merge_requests, {:column=>:sprint_id})
                   -> 0.0045s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:merge_requests)
                   -> 0.0037s
                -- execute("ALTER TABLE merge_requests\nADD CONSTRAINT fk_7e85395a64\nFOREIGN KEY (sprint_id)\nREFERENCES sprints (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE merge_requests VALIDATE CONSTRAINT fk_7e85395a64;")
                   -> 0.0013s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210420221106 UpdateMergeRequestsIterationForeignKey: migrated (0.0184s) ==

                == 20210421021510 AddDeactivateDormantUsersToApplicationSettings: migrating ===
                -- add_column(:application_settings, :deactivate_dormant_users, :boolean, {:default=>false, :null=>false})
                   -> 0.0018s
                == 20210421021510 AddDeactivateDormantUsersToApplicationSettings: migrated (0.0018s)

                == 20210421022010 AddIndexForDormantUsers: migrating ==========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:users, [:id, :last_activity_on], {:where=>"state = 'active' AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4))", :name=>"index_users_on_id_and_last_activity_on_for_non_internal_active", :algorithm=>:concurrently})
                   -> 0.0094s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:users, [:id, :last_activity_on], {:where=>"state = 'active' AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4))", :name=>"index_users_on_id_and_last_activity_on_for_non_internal_active", :algorithm=>:concurrently})
                   -> 0.0042s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210421022010 AddIndexForDormantUsers: migrated (0.0145s) =================

                == 20210421081724 AddCodeownersDevopsAdoptionSnapshot: migrating ==============
                -- add_column(:analytics_devops_adoption_snapshots, :total_projects_count, :integer)
                   -> 0.0005s
                -- add_column(:analytics_devops_adoption_snapshots, :code_owners_used_count, :integer)
                   -> 0.0003s
                == 20210421081724 AddCodeownersDevopsAdoptionSnapshot: migrated (0.0009s) =====

                == 20210421190157 RemoveElasticTaskNullConstraintFromElasticReindexingSubtasks: migrating
                -- execute("ALTER TABLE elastic_reindexing_subtasks\nDROP CONSTRAINT IF EXISTS check_aaf4e1bc37\n")
                   -> 0.0006s
                -- change_column_null(:elastic_reindexing_subtasks, :elastic_task, true)
                   -> 0.0006s
                == 20210421190157 RemoveElasticTaskNullConstraintFromElasticReindexingSubtasks: migrated (0.0024s)

                == 20210422022825 InitializeConversionOfCiSourcesPipelinesSourceJobIdToBigint: migrating
                -- table_exists?(:ci_sources_pipelines)
                   -> 0.0006s
                -- column_exists?(:ci_sources_pipelines, :id)
                   -> 0.0011s
                -- column_exists?(:ci_sources_pipelines, :source_job_id)
                   -> 0.0011s
                -- columns(:ci_sources_pipelines)
                   -> 0.0010s
                -- add_column(:ci_sources_pipelines, "source_job_id_convert_to_bigint", :bigint, {:default=>nil})
                   -> 0.0006s
                == 20210422022825 InitializeConversionOfCiSourcesPipelinesSourceJobIdToBigint: migrated (0.0072s)

                == 20210422023046 BackfillCiSourcesPipelinesSourceJobIdForBigintConversion: migrating
                == 20210422023046 BackfillCiSourcesPipelinesSourceJobIdForBigintConversion: migrated (0.0000s)

                == 20210422142647 AddProjectIdNextRunAtIndexToContainerExpirationPolicies: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:container_expiration_policies, [:project_id, :next_run_at], {:name=>"idx_container_exp_policies_on_project_id_next_run_at", :where=>"enabled = true", :algorithm=>:concurrently})
                   -> 0.0020s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:container_expiration_policies, [:project_id, :next_run_at], {:name=>"idx_container_exp_policies_on_project_id_next_run_at", :where=>"enabled = true", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210422142647 AddProjectIdNextRunAtIndexToContainerExpirationPolicies: migrated (0.0064s)

                == 20210422181809 AddProjectToTimelogs: migrating =============================
                -- add_column(:timelogs, :project_id, :integer)
                   -> 0.0004s
                == 20210422181809 AddProjectToTimelogs: migrated (0.0016s) ====================

                == 20210422195929 CreateElasticReindexingSlices: migrating ====================
                -- table_exists?(:elastic_reindexing_slices)
                   -> 0.0004s
                -- create_table(:elastic_reindexing_slices, {})
                -- quote_column_name(:elastic_task)
                   -> 0.0000s
                   -> 0.0084s
                -- quote_table_name("check_ca30e1396e")
                   -> 0.0000s
                -- quote_table_name(:elastic_reindexing_slices)
                   -> 0.0000s
                -- execute("ALTER TABLE \"elastic_reindexing_slices\"\nADD CONSTRAINT \"check_ca30e1396e\" CHECK (char_length(\"elastic_task\") <= 255)\n")
                   -> 0.0004s
                == 20210422195929 CreateElasticReindexingSlices: migrated (0.0256s) ===========

                == 20210423054022 CreateDastSiteProfilesPipelines: migrating ==================
                -- create_table(:dast_site_profiles_pipelines, {:primary_key=>[:dast_site_profile_id, :ci_pipeline_id], :comment=>"{\"owner\":\"group::dynamic analysis\",\"description\":\"Join table between DAST Site Profiles and CI Pipelines\"}"})
                   -> 0.0052s
                == 20210423054022 CreateDastSiteProfilesPipelines: migrated (0.0053s) =========

                == 20210423054537 AddDastSiteProfileIdFkToDastSiteProfilesPipelines: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:dast_site_profiles_pipelines)
                   -> 0.0036s
                -- execute("ALTER TABLE dast_site_profiles_pipelines\nADD CONSTRAINT fk_cf05cf8fe1\nFOREIGN KEY (dast_site_profile_id)\nREFERENCES dast_site_profiles (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0007s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles_pipelines VALIDATE CONSTRAINT fk_cf05cf8fe1;")
                   -> 0.0010s
                -- execute("RESET ALL")
                   -> 0.0019s
                == 20210423054537 AddDastSiteProfileIdFkToDastSiteProfilesPipelines: migrated (0.0093s)

                == 20210423054846 AddCiPipelineIdFkToDastSiteProfilesPipelines: migrating =====
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:dast_site_profiles_pipelines)
                   -> 0.0035s
                -- execute("ALTER TABLE dast_site_profiles_pipelines\nADD CONSTRAINT fk_53849b0ad5\nFOREIGN KEY (ci_pipeline_id)\nREFERENCES ci_pipelines (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0006s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE dast_site_profiles_pipelines VALIDATE CONSTRAINT fk_53849b0ad5;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210423054846 AddCiPipelineIdFkToDastSiteProfilesPipelines: migrated (0.0076s)

                == 20210423124223 RemoveProxySettingsToJiraTrackerData: migrating =============
                -- remove_column(:jira_tracker_data, :encrypted_proxy_address, :text)
                   -> 0.0005s
                -- remove_column(:jira_tracker_data, :encrypted_proxy_address_iv, :text)
                   -> 0.0003s
                -- remove_column(:jira_tracker_data, :encrypted_proxy_port, :text)
                   -> 0.0003s
                -- remove_column(:jira_tracker_data, :encrypted_proxy_port_iv, :text)
                   -> 0.0003s
                -- remove_column(:jira_tracker_data, :encrypted_proxy_username, :text)
                   -> 0.0003s
                -- remove_column(:jira_tracker_data, :encrypted_proxy_username_iv, :text)
                   -> 0.0003s
                -- remove_column(:jira_tracker_data, :encrypted_proxy_password, :text)
                   -> 0.0004s
                -- remove_column(:jira_tracker_data, :encrypted_proxy_password_iv, :text)
                   -> 0.0003s
                == 20210423124223 RemoveProxySettingsToJiraTrackerData: migrated (0.0031s) ====

                == 20210423155059 AddRunnerRegistrationToPlanLimits: migrating ================
                -- add_column(:plan_limits, :ci_registered_group_runners, :integer, {:default=>1000, :null=>false})
                   -> 0.0012s
                -- add_column(:plan_limits, :ci_registered_project_runners, :integer, {:default=>1000, :null=>false})
                   -> 0.0008s
                == 20210423155059 AddRunnerRegistrationToPlanLimits: migrated (0.0020s) =======

                == 20210423160427 ScheduleDropInvalidVulnerabilities: migrating ===============
                -- Scheduling DropInvalidVulnerabilities jobs
                -- Scheduled 0 DropInvalidVulnerabilities jobs with a maximum of 10000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:12 +0800."
                == 20210423160427 ScheduleDropInvalidVulnerabilities: migrated (0.0025s) ======

                == 20210423164702 InsertRunnerRegistrationPlanLimits: migrating ===============
                -- quote_column_name("ci_registered_group_runners")
                   -> 0.0000s
                -- quote("free")
                   -> 0.0000s
                -- quote(50)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_group_runners\")\nSELECT id, '50' FROM plans WHERE name = 'free' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_group_runners\" = EXCLUDED.\"ci_registered_group_runners\";\n")
                   -> 0.0007s
                -- quote_column_name("ci_registered_group_runners")
                   -> 0.0000s
                -- quote("bronze")
                   -> 0.0000s
                -- quote(1000)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_group_runners\")\nSELECT id, '1000' FROM plans WHERE name = 'bronze' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_group_runners\" = EXCLUDED.\"ci_registered_group_runners\";\n")
                   -> 0.0004s
                -- quote_column_name("ci_registered_group_runners")
                   -> 0.0000s
                -- quote("silver")
                   -> 0.0000s
                -- quote(1000)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_group_runners\")\nSELECT id, '1000' FROM plans WHERE name = 'silver' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_group_runners\" = EXCLUDED.\"ci_registered_group_runners\";\n")
                   -> 0.0004s
                -- quote_column_name("ci_registered_group_runners")
                   -> 0.0000s
                -- quote("gold")
                   -> 0.0000s
                -- quote(1000)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_group_runners\")\nSELECT id, '1000' FROM plans WHERE name = 'gold' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_group_runners\" = EXCLUDED.\"ci_registered_group_runners\";\n")
                   -> 0.0004s
                -- quote_column_name("ci_registered_project_runners")
                   -> 0.0000s
                -- quote("free")
                   -> 0.0000s
                -- quote(50)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_project_runners\")\nSELECT id, '50' FROM plans WHERE name = 'free' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_project_runners\" = EXCLUDED.\"ci_registered_project_runners\";\n")
                   -> 0.0004s
                -- quote_column_name("ci_registered_project_runners")
                   -> 0.0000s
                -- quote("bronze")
                   -> 0.0000s
                -- quote(1000)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_project_runners\")\nSELECT id, '1000' FROM plans WHERE name = 'bronze' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_project_runners\" = EXCLUDED.\"ci_registered_project_runners\";\n")
                   -> 0.0004s
                -- quote_column_name("ci_registered_project_runners")
                   -> 0.0000s
                -- quote("silver")
                   -> 0.0000s
                -- quote(1000)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_project_runners\")\nSELECT id, '1000' FROM plans WHERE name = 'silver' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_project_runners\" = EXCLUDED.\"ci_registered_project_runners\";\n")
                   -> 0.0004s
                -- quote_column_name("ci_registered_project_runners")
                   -> 0.0000s
                -- quote("gold")
                   -> 0.0000s
                -- quote(1000)
                   -> 0.0000s
                -- execute("INSERT INTO plan_limits (plan_id, \"ci_registered_project_runners\")\nSELECT id, '1000' FROM plans WHERE name = 'gold' LIMIT 1\nON CONFLICT (plan_id) DO UPDATE SET \"ci_registered_project_runners\" = EXCLUDED.\"ci_registered_project_runners\";\n")
                   -> 0.0004s
                == 20210423164702 InsertRunnerRegistrationPlanLimits: migrated (0.0044s) ======

                == 20210423171304 ReOrderFkSourceProjectIdInMergeRequests: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:merge_requests)
                   -> 0.0037s
                -- execute("ALTER TABLE merge_requests\nADD CONSTRAINT fk_source_project\nFOREIGN KEY (source_project_id)\nREFERENCES projects (id)\nON DELETE SET NULL\nNOT VALID;\n")
                   -> 0.0011s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE merge_requests VALIDATE CONSTRAINT fk_source_project;")
                   -> 0.0018s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- foreign_keys(:merge_requests)
                   -> 0.0036s
                -- remove_foreign_key(:merge_requests, {:column=>:source_project_id, :name=>"fk_3308fe130c"})
                   -> 0.0049s
                == 20210423171304 ReOrderFkSourceProjectIdInMergeRequests: migrated (0.0175s) =

                == 20210424115725 SwapPartitionedWebHookLogs: migrating =======================
                -- execute("DROP TRIGGER IF EXISTS table_sync_trigger_b99eb6998c ON web_hook_logs")
                   -> 0.0003s
                -- execute("DROP FUNCTION IF EXISTS table_sync_function_29bc99d6db()")
                   -> 0.0003s
                -- replace_table("ALTER TABLE "web_hook_logs"
                ALTER COLUMN "id" DROP DEFAULT;

                ALTER TABLE "web_hook_logs_part_0c5294f417"
                ALTER COLUMN "id" SET DEFAULT nextval('"web_hook_logs_id_seq"'::regclass);

                ALTER SEQUENCE "web_hook_logs_id_seq"
                OWNED BY "web_hook_logs_part_0c5294f417"."id";

                ALTER TABLE "web_hook_logs"
                RENAME TO "web_hook_logs_archived";

                ALTER TABLE "web_hook_logs_archived"
                RENAME CONSTRAINT "web_hook_logs_pkey" TO "web_hook_logs_archived_pkey";

                ALTER TABLE "web_hook_logs_part_0c5294f417"
                RENAME TO "web_hook_logs";

                ALTER TABLE "web_hook_logs"
                RENAME CONSTRAINT "web_hook_logs_part_0c5294f417_pkey" TO "web_hook_logs_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."web_hook_logs_part_0c5294f417_000000"
                RENAME CONSTRAINT "web_hook_logs_part_0c5294f417_000000_pkey" TO "web_hook_logs_000000_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."web_hook_logs_part_0c5294f417_000000"
                RENAME TO "web_hook_logs_000000";

                ALTER TABLE "gitlab_partitions_dynamic"."web_hook_logs_part_0c5294f417_202203"
                RENAME CONSTRAINT "web_hook_logs_part_0c5294f417_202203_pkey" TO "web_hook_logs_202203_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."web_hook_logs_part_0c5294f417_202203"
                RENAME TO "web_hook_logs_202203";

                ALTER TABLE "gitlab_partitions_dynamic"."web_hook_logs_part_0c5294f417_202204"
                RENAME CONSTRAINT "web_hook_logs_part_0c5294f417_202204_pkey" TO "web_hook_logs_202204_pkey";

                ALTER TABLE "gitlab_partitions_dynamic"."web_hook_logs_part_0c5294f417_202204"
                RENAME TO "web_hook_logs_202204"")NOTICE:  trigger "trigger_3f6129be01d2" for relation "ci_builds" does not exist, skipping
                NOTICE:  trigger "trigger_cf2f9e35f002" for relation "ci_build_trace_chunks" does not exist, skipping
                NOTICE:  trigger "trigger_51ab7cef8934" for relation "ci_builds_runner_session" does not exist, skipping

                -- execute("CREATE  FUNCTION table_sync_function_29bc99d6db()\nRETURNS TRIGGER AS\n$$\nBEGIN\nIF (TG_OP = 'DELETE') THEN\n  DELETE FROM web_hook_logs_archived where id = OLD.id;\nELSIF (TG_OP = 'UPDATE') THEN\n  UPDATE web_hook_logs_archived\n  SET web_hook_id = NEW.web_hook_id,\n    trigger = NEW.trigger,\n    url = NEW.url,\n    request_headers = NEW.request_headers,\n    request_data = NEW.request_data,\n    response_headers = NEW.response_headers,\n    response_body = NEW.response_body,\n    response_status = NEW.response_status,\n    execution_duration = NEW.execution_duration,\n    internal_error_message = NEW.internal_error_message,\n    created_at = NEW.created_at,\n    updated_at = NEW.updated_at\n  WHERE web_hook_logs_archived.id = NEW.id;\nELSIF (TG_OP = 'INSERT') THEN\n  INSERT INTO web_hook_logs_archived (id,\n    web_hook_id,\n    trigger,\n    url,\n    request_headers,\n    request_data,\n    response_headers,\n    response_body,\n    response_status,\n    execution_duration,\n    internal_error_message,\n    created_at,\n    updated_at)\n  VALUES (NEW.id,\n    NEW.web_hook_id,\n    NEW.trigger,\n    NEW.url,\n    NEW.request_headers,\n    NEW.request_data,\n    NEW.response_headers,\n    NEW.response_body,\n    NEW.response_status,\n    NEW.execution_duration,\n    NEW.internal_error_message,\n    NEW.created_at,\n    NEW.updated_at);\nEND IF;\nRETURN NULL;\n\nEND\n$$ LANGUAGE PLPGSQL\n")
                   -> 0.0005s
                -- execute("COMMENT ON FUNCTION table_sync_function_29bc99d6db IS 'Partitioning migration: table sync for web_hook_logs table'")
                   -> 0.0002s
                -- current_schema()
                   -> 0.0002s
                -- execute("CREATE TRIGGER table_sync_trigger_b99eb6998c\nAFTER INSERT OR UPDATE OR DELETE ON web_hook_logs\nFOR EACH ROW\nEXECUTE FUNCTION table_sync_function_29bc99d6db()\n")
                   -> 0.0007s
                == 20210424115725 SwapPartitionedWebHookLogs: migrated (0.0338s) ==============

                == 20210424163400 AddProjectIdFkToTimelogs: migrating =========================
                -- transaction_open?()
                   -> 0.0001s
                -- index_exists?(:timelogs, [:project_id, :spent_at], {:name=>"index_timelogs_on_project_id_and_spent_at", :algorithm=>:concurrently})
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:timelogs, [:project_id, :spent_at], {:name=>"index_timelogs_on_project_id_and_spent_at", :algorithm=>:concurrently})
                   -> 0.0039s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:timelogs)
                   -> 0.0037s
                -- execute("ALTER TABLE timelogs\nADD CONSTRAINT fk_c49c83dd77\nFOREIGN KEY (project_id)\nREFERENCES projects (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0012s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE timelogs VALIDATE CONSTRAINT fk_c49c83dd77;")
                   -> 0.0014s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210424163400 AddProjectIdFkToTimelogs: migrated (0.0162s) ================

                == 20210426094524 InitializeConversionOfCiBuildsToBigint: migrating ===========
                -- table_exists?(:ci_builds)
                   -> 0.0006s
                -- column_exists?(:ci_builds, :id)
                   -> 0.0018s
                -- column_exists?(:ci_builds, :id)
                   -> 0.0017s
                -- column_exists?(:ci_builds, :stage_id)
                   -> 0.0017s
                -- columns(:ci_builds)
                   -> 0.0017s
                -- add_column(:ci_builds, "id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0008s
                -- columns(:ci_builds)
                   -> 0.0017s
                -- add_column(:ci_builds, "stage_id_convert_to_bigint", :bigint, {:default=>nil})
                   -> 0.0009s
                == 20210426094524 InitializeConversionOfCiBuildsToBigint: migrated (0.0139s) ==

                == 20210426094549 BackfillCiBuildsForBigintConversion: migrating ==============
                == 20210426094549 BackfillCiBuildsForBigintConversion: migrated (0.0000s) =====

                == 20210427045604 InitializeConversionOfCiBuildTraceChunksToBigint: migrating =
                -- table_exists?(:ci_build_trace_chunks)
                   -> 0.0006s
                -- column_exists?(:ci_build_trace_chunks, :id)
                   -> 0.0011s
                -- column_exists?(:ci_build_trace_chunks, :build_id)
                   -> 0.0010s
                -- columns(:ci_build_trace_chunks)
                   -> 0.0010s
                -- add_column(:ci_build_trace_chunks, "build_id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20210427045604 InitializeConversionOfCiBuildTraceChunksToBigint: migrated (0.0072s)

                == 20210427045711 BackfillCiBuildTraceChunksForBigintConversion: migrating ====
                == 20210427045711 BackfillCiBuildTraceChunksForBigintConversion: migrated (0.0000s)

                == 20210427062807 AddIndexToBatchedMigrationJobsStatus: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:batched_background_migration_jobs, [:batched_background_migration_id, :status], {:name=>"index_batched_jobs_on_batched_migration_id_and_status", :algorithm=>:concurrently})
                   -> 0.0016s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:batched_background_migration_jobs, [:batched_background_migration_id, :status], {:name=>"index_batched_jobs_on_batched_migration_id_and_status", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210427062807 AddIndexToBatchedMigrationJobsStatus: migrated (0.0060s) ====

                == 20210427084924 InitializeConversionOfCiBuildsRunnerSessionToBigint: migrating
                -- table_exists?(:ci_builds_runner_session)
                   -> 0.0006s
                -- column_exists?(:ci_builds_runner_session, :id)
                   -> 0.0011s
                -- column_exists?(:ci_builds_runner_session, :build_id)
                   -> 0.0010s
                -- columns(:ci_builds_runner_session)
                   -> 0.0010s
                -- add_column(:ci_builds_runner_session, "build_id_convert_to_bigint", :bigint, {:default=>0, :null=>false})
                   -> 0.0007s
                == 20210427084924 InitializeConversionOfCiBuildsRunnerSessionToBigint: migrated (0.0070s)

                == 20210427085020 BackfillCiBuildsRunnerSessionForBigintConversion: migrating =
                == 20210427085020 BackfillCiBuildsRunnerSessionForBigintConversion: migrated (0.0000s)

                == 20210427094931 AddExecutionOrderIndexToBatchedBackgroundMigrationJobs: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:batched_background_migration_jobs, [:batched_background_migration_id, :finished_at], {:name=>"index_migration_jobs_on_migration_id_and_finished_at", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:batched_background_migration_jobs, [:batched_background_migration_id, :finished_at], {:name=>"index_migration_jobs_on_migration_id_and_finished_at", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210427094931 AddExecutionOrderIndexToBatchedBackgroundMigrationJobs: migrated (0.0062s)

                == 20210427125400 AddSpamcheckApiKeyToApplicationSetting: migrating ===========
                -- add_column(:application_settings, :encrypted_spam_check_api_key, :binary)
                   -> 0.0011s
                -- add_column(:application_settings, :encrypted_spam_check_api_key_iv, :binary)
                   -> 0.0006s
                == 20210427125400 AddSpamcheckApiKeyToApplicationSetting: migrated (0.0018s) ==

                == 20210427194958 AddDescriptionRollOverToIterationsCadences: migrating =======
                -- add_column(:iterations_cadences, :roll_over, :boolean, {:null=>false, :default=>false})
                   -> 0.0007s
                -- add_column(:iterations_cadences, :description, :text)
                   -> 0.0004s
                == 20210427194958 AddDescriptionRollOverToIterationsCadences: migrated (0.0024s)

                == 20210427200840 AddTextLimitToIterationsCadencesDescription: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE iterations_cadences\nADD CONSTRAINT check_5c5d2b44bd\nCHECK ( char_length(description) <= 5000 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE iterations_cadences VALIDATE CONSTRAINT check_5c5d2b44bd;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210427200840 AddTextLimitToIterationsCadencesDescription: migrated (0.0051s)

                == 20210427212034 ScheduleUpdateTimelogsProjectId: migrating ==================
                -- Scheduled 1 UpdateTimelogsProjectId jobs with a maximum of 50000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:26:12 +0800."
                == 20210427212034 ScheduleUpdateTimelogsProjectId: migrated (0.0247s) =========

                == 20210428151144 UpdateInvalidWebHooks: migrating ============================
                == 20210428151144 UpdateInvalidWebHooks: migrated (0.0013s) ===================

                == 20210428151238 ValidateForeignKeyOnGroupHooks: migrating ===================
                -- foreign_keys(:web_hooks)
                   -> 0.0038s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE web_hooks VALIDATE CONSTRAINT fk_rails_d35697648e;")
                   -> 0.0008s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210428151238 ValidateForeignKeyOnGroupHooks: migrated (0.0052s) ==========

                == 20210429024843 AddEscalationPolicies: migrating ============================
                -- create_table(:incident_management_escalation_policies, {})
                -- quote_column_name(:name)
                   -> 0.0000s
                -- quote_column_name(:description)
                   -> 0.0000s
                   -> 0.0081s
                -- quote_table_name("check_9a26365850")
                   -> 0.0000s
                -- quote_table_name("check_510b2a5258")
                   -> 0.0000s
                -- quote_table_name(:incident_management_escalation_policies)
                   -> 0.0000s
                -- execute("ALTER TABLE \"incident_management_escalation_policies\"\nADD CONSTRAINT \"check_9a26365850\" CHECK (char_length(\"name\") <= 72),\nADD CONSTRAINT \"check_510b2a5258\" CHECK (char_length(\"description\") <= 160)\n")
                   -> 0.0005s
                == 20210429024843 AddEscalationPolicies: migrated (0.0104s) ===================

                == 20210429032320 AddEscalationRules: migrating ===============================
                -- create_table(:incident_management_escalation_rules)
                   -> 0.0090s
                == 20210429032320 AddEscalationRules: migrated (0.0091s) ======================

                == 20210429131525 CreateUserCreditCardValidations: migrating ==================
                -- create_table(:user_credit_card_validations, {:id=>false})
                   -> 0.0028s
                == 20210429131525 CreateUserCreditCardValidations: migrated (0.0043s) =========

                == 20210429143649 AddNewIssuesIndexForRelativePosition: migrating =============
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:issues, [:project_id, :relative_position, :id], {:name=>"idx_issues_on_project_id_and_rel_asc_and_id", :algorithm=>:concurrently})
                   -> 0.0155s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:issues, [:project_id, :relative_position, :id], {:name=>"idx_issues_on_project_id_and_rel_asc_and_id", :algorithm=>:concurrently})
                   -> 0.0040s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210429143649 AddNewIssuesIndexForRelativePosition: migrated (0.0203s) ====

                == 20210429181325 AddFailureTrackingToWebHooks: migrating =====================
                -- change_table(:web_hooks, {:bulk=>true})
                   -> 0.0016s
                == 20210429181325 AddFailureTrackingToWebHooks: migrated (0.0016s) ============

                == 20210429192653 AddGenericPackageDuplicateSettingsToNamespacePackageSettings: migrating
                -- add_column(:namespace_package_settings, :generic_duplicates_allowed, :boolean, {:null=>false, :default=>true})
                   -> 0.0009s
                -- add_column(:namespace_package_settings, :generic_duplicate_exception_regex, :text, {:null=>false, :default=>""})
                   -> 0.0007s
                == 20210429192653 AddGenericPackageDuplicateSettingsToNamespacePackageSettings: migrated (0.0017s)

                == 20210429193106 AddTextLimitToNamespacePackageSettingsGenericDuplicateExceptionRegex: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE namespace_package_settings\nADD CONSTRAINT check_31340211b1\nCHECK ( char_length(generic_duplicate_exception_regex) <= 255 )\nNOT VALID;\n")
                   -> 0.0022s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE namespace_package_settings VALIDATE CONSTRAINT check_31340211b1;")
                   -> 0.0006s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210429193106 AddTextLimitToNamespacePackageSettingsGenericDuplicateExceptionRegex: migrated (0.0069s)

                == 20210430034712 AddAlertManagerTokenToClustersIntegrationPrometheus: migrating
                -- change_table(:clusters_integration_prometheus)
                   -> 0.0026s
                == 20210430034712 AddAlertManagerTokenToClustersIntegrationPrometheus: migrated (0.0027s)

                == 20210430100947 AddElasticsearchUsernamePasswordToApplicationSettings: migrating
                -- add_column(:application_settings, :elasticsearch_username, :text)
                   -> 0.0011s
                -- add_column(:application_settings, :encrypted_elasticsearch_password, :binary)
                   -> 0.0006s
                -- add_column(:application_settings, :encrypted_elasticsearch_password_iv, :binary)
                   -> 0.0006s
                == 20210430100947 AddElasticsearchUsernamePasswordToApplicationSettings: migrated (0.0024s)

                == 20210430122951 AddSnapshotNamespaceId: migrating ===========================
                -- add_column(:analytics_devops_adoption_snapshots, :namespace_id, :integer)
                   -> 0.0006s
                == 20210430122951 AddSnapshotNamespaceId: migrated (0.0006s) ==================

                == 20210430124212 AddDisplayNamespaceIdToSegments: migrating ==================
                -- add_column(:analytics_devops_adoption_segments, :display_namespace_id, :integer)
                   -> 0.0006s
                == 20210430124212 AddDisplayNamespaceIdToSegments: migrated (0.0006s) =========

                == 20210430124630 AddDevopsAdoptionIndexes: migrating =========================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:analytics_devops_adoption_snapshots, [:namespace_id, :end_time], {:name=>"idx_devops_adoption_segments_namespace_end_time", :algorithm=>:concurrently})
                   -> 0.0019s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:analytics_devops_adoption_snapshots, [:namespace_id, :end_time], {:name=>"idx_devops_adoption_segments_namespace_end_time", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:analytics_devops_adoption_snapshots, [:namespace_id, :recorded_at], {:name=>"idx_devops_adoption_segments_namespace_recorded_at", :algorithm=>:concurrently})
                   -> 0.0023s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:analytics_devops_adoption_snapshots, [:namespace_id, :recorded_at], {:name=>"idx_devops_adoption_segments_namespace_recorded_at", :algorithm=>:concurrently})
                   -> 0.0033s
                -- execute("RESET ALL")
                   -> 0.0003s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:analytics_devops_adoption_segments, [:display_namespace_id, :namespace_id], {:unique=>true, :name=>"idx_devops_adoption_segments_namespaces_pair", :algorithm=>:concurrently})
                   -> 0.0014s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:analytics_devops_adoption_segments, [:display_namespace_id, :namespace_id], {:unique=>true, :name=>"idx_devops_adoption_segments_namespaces_pair", :algorithm=>:concurrently})
                   -> 0.0034s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:analytics_devops_adoption_snapshots)
                   -> 0.0035s
                -- execute("ALTER TABLE analytics_devops_adoption_snapshots\nADD CONSTRAINT fk_78c9eac821\nFOREIGN KEY (namespace_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0010s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_snapshots VALIDATE CONSTRAINT fk_78c9eac821;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- foreign_keys(:analytics_devops_adoption_segments)
                   -> 0.0035s
                -- execute("ALTER TABLE analytics_devops_adoption_segments\nADD CONSTRAINT fk_190a24754d\nFOREIGN KEY (display_namespace_id)\nREFERENCES namespaces (id)\nON DELETE CASCADE\nNOT VALID;\n")
                   -> 0.0008s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE analytics_devops_adoption_segments VALIDATE CONSTRAINT fk_190a24754d;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210430124630 AddDevopsAdoptionIndexes: migrated (0.0336s) ================

                == 20210430130259 RemoveObsoleteSegmentsField: migrating ======================
                -- remove_column(:analytics_devops_adoption_segments, :name)
                   -> 0.0004s
                == 20210430130259 RemoveObsoleteSegmentsField: migrated (0.0019s) =============

                == 20210430134202 CopyAdoptionSnapshotNamespace: migrating ====================
                -- execute("    UPDATE analytics_devops_adoption_snapshots snapshots\n      SET namespace_id = segments.namespace_id\n    FROM analytics_devops_adoption_segments segments\n    WHERE snapshots.namespace_id IS NULL AND segments.id = snapshots.segment_id\n")
                   -> 0.0007s
                == 20210430134202 CopyAdoptionSnapshotNamespace: migrated (0.0027s) ===========

                == 20210430135954 CopyAdoptionSegmentsNamespace: migrating ====================
                -- execute("    UPDATE analytics_devops_adoption_segments SET display_namespace_id = namespace_id\n    WHERE display_namespace_id IS NULL\n")
                   -> 0.0004s
                == 20210430135954 CopyAdoptionSegmentsNamespace: migrated (0.0005s) ===========

                == 20210430154631 AddSliceMultiplierAndMaxSlicesToElasticReindexingTask: migrating
                -- add_column(:elastic_reindexing_tasks, :max_slices_running, :integer, {:limit=>2, :default=>60, :null=>false})
                   -> 0.0009s
                -- add_column(:elastic_reindexing_tasks, :slice_multiplier, :integer, {:limit=>2, :default=>2, :null=>false})
                   -> 0.0007s
                == 20210430154631 AddSliceMultiplierAndMaxSlicesToElasticReindexingTask: migrated (0.0017s)

                == 20210503105022 CreateProjectValueStreams: migrating ========================
                -- create_table(:analytics_cycle_analytics_project_value_streams, {})
                -- quote_column_name(:name)
                   -> 0.0000s
                   -> 0.0078s
                -- quote_table_name("check_9b1970a898")
                   -> 0.0000s
                -- quote_table_name(:analytics_cycle_analytics_project_value_streams)
                   -> 0.0000s
                -- execute("ALTER TABLE \"analytics_cycle_analytics_project_value_streams\"\nADD CONSTRAINT \"check_9b1970a898\" CHECK (char_length(\"name\") <= 100)\n")
                   -> 0.0004s
                == 20210503105022 CreateProjectValueStreams: migrated (0.0095s) ===============

                == 20210503105845 AddProjectValueStreamIdToProjectStages: migrating ===========
                -- transaction()
                -- add_reference(:analytics_cycle_analytics_project_stages, :project_value_stream, {:null=>false, :index=>{:name=>"index_analytics_ca_project_stages_on_value_stream_id"}, :foreign_key=>{:on_delete=>:cascade, :to_table=>:analytics_cycle_analytics_project_value_streams}, :type=>:bigint})
                   -> 0.0051s
                   -> 0.0057s
                == 20210503105845 AddProjectValueStreamIdToProjectStages: migrated (0.0200s) ==

                == 20210503131747 AddWebHookCallsToPlanLimits: migrating ======================
                -- add_column(:plan_limits, :web_hook_calls, :integer, {:null=>false, :default=>0})
                   -> 0.0010s
                == 20210503131747 AddWebHookCallsToPlanLimits: migrated (0.0010s) =============

                == 20210504085144 AddIndexOnWebHookProjectIdRecentFailures: migrating =========
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:web_hooks, [:project_id, :recent_failures], {:name=>"index_web_hooks_on_project_id_recent_failures", :algorithm=>:concurrently})
                   -> 0.0026s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:web_hooks, [:project_id, :recent_failures], {:name=>"index_web_hooks_on_project_id_recent_failures", :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210504085144 AddIndexOnWebHookProjectIdRecentFailures: migrated (0.0069s)

                == 20210504135823 AddFlocApplicationSettings: migrating =======================
                -- add_column(:application_settings, :floc_enabled, :boolean, {:default=>false, :null=>false})
                   -> 0.0016s
                == 20210504135823 AddFlocApplicationSettings: migrated (0.0016s) ==============

                == 20210504153354 CreateClustersIntegrationElasticstack: migrating ============
                -- create_table(:clusters_integration_elasticstack, {:id=>false})
                -- quote_column_name(:chart_version)
                   -> 0.0000s
                   -> 0.0048s
                -- quote_table_name("check_f8d671ce04")
                   -> 0.0000s
                -- quote_table_name(:clusters_integration_elasticstack)
                   -> 0.0000s
                -- execute("ALTER TABLE \"clusters_integration_elasticstack\"\nADD CONSTRAINT \"check_f8d671ce04\" CHECK (char_length(\"chart_version\") <= 10)\n")
                   -> 0.0004s
                == 20210504153354 CreateClustersIntegrationElasticstack: migrated (0.0067s) ===

                == 20210504164429 CreatePartialIndexesForPendingAndRunningBuilds: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, :runner_id, {:where=>"status = 'pending' AND type = 'Ci::Build'", :name=>"index_ci_builds_runner_id_pending", :algorithm=>:concurrently})
                   -> 0.0110s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, :runner_id, {:where=>"status = 'pending' AND type = 'Ci::Build'", :name=>"index_ci_builds_runner_id_pending", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:ci_builds, :runner_id, {:where=>"status = 'running' AND type = 'Ci::Build'", :name=>"index_ci_builds_runner_id_running", :algorithm=>:concurrently})
                   -> 0.0112s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:ci_builds, :runner_id, {:where=>"status = 'running' AND type = 'Ci::Build'", :name=>"index_ci_builds_runner_id_running", :algorithm=>:concurrently})
                   -> 0.0036s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210504164429 CreatePartialIndexesForPendingAndRunningBuilds: migrated (0.0311s)

                == 20210505092746 CreatePartialCoveringIndexForPendingBuilds: migrating =======
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- indexes(:ci_builds)
                   -> 0.0115s
                -- current_schema()
                   -> 0.0002s
                -- execute("CREATE INDEX CONCURRENTLY index_ci_builds_runner_id_pending_covering ON ci_builds (runner_id, id) INCLUDE (project_id) WHERE status = 'pending' AND type = 'Ci::Build'")
                   -> 0.0024s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:ci_builds)
                   -> 0.0119s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:ci_builds, {:algorithm=>:concurrently, :name=>"index_ci_builds_runner_id_pending"})
                   -> 0.0029s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210505092746 CreatePartialCoveringIndexForPendingBuilds: migrated (0.0314s)

                == 20210505124816 AddTextLimitToElasticsearchUsername: migrating ==============
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings\nADD CONSTRAINT check_e5024c8801\nCHECK ( char_length(elasticsearch_username) <= 255 )\nNOT VALID;\n")
                   -> 0.0010s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE application_settings VALIDATE CONSTRAINT check_e5024c8801;")
                   -> 0.0011s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210505124816 AddTextLimitToElasticsearchUsername: migrated (0.0064s) =====

                == 20210506064413 CreateNamespacesIdParentIdInversePartialIndex: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:namespaces, :id, {:where=>"parent_id IS NOT NULL", :name=>"index_namespaces_id_parent_id_is_not_null", :algorithm=>:concurrently})
                   -> 0.0080s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:namespaces, :id, {:where=>"parent_id IS NOT NULL", :name=>"index_namespaces_id_parent_id_is_not_null", :algorithm=>:concurrently})
                   -> 0.0041s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210506064413 CreateNamespacesIdParentIdInversePartialIndex: migrated (0.0128s)

                == 20210506065000 ScheduleBackfillTraversalIds: migrating =====================
                -- Scheduled 1 BackfillNamespaceTraversalIdsRoots jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:26:12 +0800."
                -- Scheduled 0 BackfillNamespaceTraversalIdsChildren jobs with a maximum of 1000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 240 seconds. Expect all jobs to have completed after 2022-03-18 14:28:12 +0800."
                == 20210506065000 ScheduleBackfillTraversalIds: migrated (0.0572s) ============

                == 20210507191949 AddRemoveOnIssueCloseToLabels: migrating ====================
                -- add_column(:labels, :remove_on_close, :boolean, {:null=>false, :default=>false})
                   -> 0.0008s
                == 20210507191949 AddRemoveOnIssueCloseToLabels: migrated (0.0022s) ===========

                == 20210510191551 AddBodyToFindingsEvidencesRequest: migrating ================
                -- add_column(:vulnerability_finding_evidence_requests, :body, :text)
                   -> 0.0006s
                == 20210510191551 AddBodyToFindingsEvidencesRequest: migrated (0.0006s) =======

                == 20210510191552 AddLimitToFindingsEvidencesRequestBody: migrating ===========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_finding_evidence_requests\nADD CONSTRAINT check_7e37f2d01a\nCHECK ( char_length(body) <= 2048 )\nNOT VALID;\n")
                   -> 0.0005s
                -- current_schema()
                   -> 0.0002s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_finding_evidence_requests VALIDATE CONSTRAINT check_7e37f2d01a;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210510191552 AddLimitToFindingsEvidencesRequestBody: migrated (0.0073s) ==

                == 20210511095657 AddTemporaryIndexForProjectTopicsToTaggings: migrating ======
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:taggings, :id, {:where=>"taggable_type = 'Project' AND context = 'tags'", :name=>"tmp_index_taggings_on_id_where_taggable_type_project_and_tags", :algorithm=>:concurrently})
                   -> 0.0027s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:taggings, :id, {:where=>"taggable_type = 'Project' AND context = 'tags'", :name=>"tmp_index_taggings_on_id_where_taggable_type_project_and_tags", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210511095657 AddTemporaryIndexForProjectTopicsToTaggings: migrated (0.0071s)

                == 20210511095658 ScheduleMigrateProjectTaggingsContextFromTagsToTopics: migrating
                -- Scheduled 0 MigrateProjectTaggingsContextFromTagsToTopics jobs with a maximum of 30000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:13 +0800."
                == 20210511095658 ScheduleMigrateProjectTaggingsContextFromTagsToTopics: migrated (0.0140s)

                == 20210511104929 AddEpicBoardRecentVisitsTable: migrating ====================
                -- table_exists?(:boards_epic_board_recent_visits)
                   -> 0.0004s
                -- create_table(:boards_epic_board_recent_visits)
                   -> 0.0126s
                == 20210511104929 AddEpicBoardRecentVisitsTable: migrated (0.0144s) ===========

                == 20210511104930 AddIndexToEpicBoardRecentVisits: migrating ==================
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:boards_epic_board_recent_visits, [:user_id, :group_id, :epic_board_id], {:name=>"index_epic_board_recent_visits_on_user_group_and_board", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0022s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:boards_epic_board_recent_visits, [:user_id, :group_id, :epic_board_id], {:name=>"index_epic_board_recent_visits_on_user_group_and_board", :unique=>true, :algorithm=>:concurrently})
                   -> 0.0035s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210511104930 AddIndexToEpicBoardRecentVisits: migrated (0.0065s) =========

                == 20210511142748 ScheduleDropInvalidVulnerabilities2: migrating ==============
                -- Scheduled 0 DropInvalidVulnerabilities jobs with a maximum of 10000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 0 seconds. Expect all jobs to have completed after 2022-03-18 14:24:13 +0800."
                == 20210511142748 ScheduleDropInvalidVulnerabilities2: migrated (0.0022s) =====

                == 20210512183309 AddBodyToFindingsEvidencesResponse: migrating ===============
                -- add_column(:vulnerability_finding_evidence_responses, :body, :text)
                   -> 0.0006s
                == 20210512183309 AddBodyToFindingsEvidencesResponse: migrated (0.0007s) ======

                == 20210512183310 AddLimitToFindingsEvidencesResponseBody: migrating ==========
                -- transaction_open?()
                   -> 0.0000s
                -- current_schema()
                   -> 0.0003s
                -- execute("ALTER TABLE vulnerability_finding_evidence_responses\nADD CONSTRAINT check_76bac0c32b\nCHECK ( char_length(body) <= 2048 )\nNOT VALID;\n")
                   -> 0.0004s
                -- current_schema()
                   -> 0.0004s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- execute("ALTER TABLE vulnerability_finding_evidence_responses VALIDATE CONSTRAINT check_76bac0c32b;")
                   -> 0.0007s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210512183310 AddLimitToFindingsEvidencesResponseBody: migrated (0.0055s) =

                == 20210513093418 AddDraftColumnToMergeRequests: migrating ====================
                -- add_column(:merge_requests, :draft, :boolean, {:default=>false, :null=>false})
                   -> 0.0009s
                == 20210513093418 AddDraftColumnToMergeRequests: migrated (0.0021s) ===========

                == 20210513155447 AddTemporaryPackageIndexForNugetDataMigration: migrating ====
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:packages_packages, :id, {:where=>"package_type = 4 AND name = 'NuGet.Temporary.Package' AND status = 0", :name=>"tmp_index_packages_on_id_where_nuget_default_temp_package", :algorithm=>:concurrently})
                   -> 0.0054s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:packages_packages, :id, {:where=>"package_type = 4 AND name = 'NuGet.Temporary.Package' AND status = 0", :name=>"tmp_index_packages_on_id_where_nuget_default_temp_package", :algorithm=>:concurrently})
                   -> 0.0037s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210513155447 AddTemporaryPackageIndexForNugetDataMigration: migrated (0.0098s)

                == 20210513155546 BackfillNugetTemporaryPackagesToProcessingStatus: migrating =
                == 20210513155546 BackfillNugetTemporaryPackagesToProcessingStatus: migrated (0.0141s)

                == 20210513155635 RemoveTemporaryPackageIndexForNugetDataMigration: migrating =
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:packages_packages)
                   -> 0.0056s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:packages_packages, {:algorithm=>:concurrently, :name=>"tmp_index_packages_on_id_where_nuget_default_temp_package"})
                   -> 0.0028s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210513155635 RemoveTemporaryPackageIndexForNugetDataMigration: migrated (0.0092s)

                == 20210517075444 RemoveTemporaryIndexForProjectTopicsToTaggings: migrating ===
                -- transaction_open?()
                   -> 0.0000s
                -- indexes(:taggings)
                   -> 0.0030s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- remove_index(:taggings, {:algorithm=>:concurrently, :name=>"tmp_index_taggings_on_id_where_taggable_type_project_and_tags"})
                   -> 0.0022s
                -- execute("RESET ALL")
                   -> 0.0002s
                == 20210517075444 RemoveTemporaryIndexForProjectTopicsToTaggings: migrated (0.0060s)

                == 20210518001450 BackfillClustersIntegrationElasticStackEnabled: migrating ===
                == 20210518001450 BackfillClustersIntegrationElasticStackEnabled: migrated (0.0008s)

                == 20210519154058 ScheduleUpdateUsersWhereTwoFactorAuthRequiredFromGroup: migrating
                -- transaction_open?()
                   -> 0.0000s
                -- index_exists?(:users, :require_two_factor_authentication_from_group, {:where=>"require_two_factor_authentication_from_group = FALSE", :name=>"index_users_require_two_factor_authentication_from_group_false", :algorithm=>:concurrently})
                   -> 0.0099s
                -- execute("SET statement_timeout TO 0")
                   -> 0.0002s
                -- add_index(:users, :require_two_factor_authentication_from_group, {:where=>"require_two_factor_authentication_from_group = FALSE", :name=>"index_users_require_two_factor_authentication_from_group_false", :algorithm=>:concurrently})
                   -> 0.0043s
                -- execute("RESET ALL")
                   -> 0.0002s
                -- Scheduled 1 UpdateUsersWhereTwoFactorAuthRequiredFromGroup jobs with a maximum of 10000 records per batch and an interval of 120 seconds.

                The migration is expected to take at least 120 seconds. Expect all jobs to have completed after 2022-03-18 14:26:13 +0800."
                == 20210519154058 ScheduleUpdateUsersWhereTwoFactorAuthRequiredFromGroup: migrated (0.1058s)

      - execute "bash"  "/tmp/chef-script20220318-1478-x4gqiw"
  Recipe: gitlab::puma
    * runit_service[puma] action restart (up to date)

Recipe: gitlab::gitlab-rails
  * execute[clear the gitlab-rails cache] action run
    - execute /opt/gitlab/bin/gitlab-rake cache:clear
Recipe: gitlab::database_migrations
  * ruby_block[check remote PG version] action run (skipped due to only_if)
Recipe: gitlab::unicorn_disable
  * unicorn_service[unicorn] action disable
  Recipe: <Dynamically Defined Resource>
    * service[unicorn] action nothing (skipped due to action :nothing)
    * runit_service[unicorn] action disable
      * ruby_block[disable unicorn] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: gitlab::unicorn_disable
  * consul_service[rails] action delete (skipped due to not_if)
Recipe: gitlab::puma
  * directory[/var/log/gitlab/puma] action create (up to date)
  * directory[/opt/gitlab/var/puma] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create (up to date)
  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)
    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
      - update content in file /var/opt/gitlab/gitlab-rails/etc/puma.rb from bd681a to b1a573
      --- /var/opt/gitlab/gitlab-rails/etc/puma.rb      2022-03-18 14:12:28.524688376 +0800
      +++ /var/opt/gitlab/gitlab-rails/etc/.chef-puma20220318-1478-ttj8ed.rb    2022-03-18 14:24:40.089422784 +0800
      @@ -79,6 +79,12 @@
       #
       worker_timeout 60

      +# https://github.com/puma/puma/blob/master/5.0-Upgrade.md#lower-latency-better-throughput
      +wait_for_less_busy_worker ENV.fetch('PUMA_WAIT_FOR_LESS_BUSY_WORKER', 0.001).to_f
      +
      +# https://github.com/puma/puma/blob/master/5.0-Upgrade.md#nakayoshi_fork
      +nakayoshi_fork unless ENV['DISABLE_PUMA_NAKAYOSHI_FORK'] == 'true'
      +
       # Use customised JSON formatter for Puma log
       require_relative "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/puma_logging/json_formatter"


  * service[puma] action nothing (skipped due to action :nothing)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create
      - Would create new file /opt/gitlab/sv/puma/log/config
      - Would change mode from '' to '0644'
      - Would change owner from '' to 'root'
      - Would change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_puma] action create
      - Would execute the ruby block verify_chown_persisted_on_puma
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create
      - Would unlink existing symlink to file at /var/log/gitlab/puma/config
      - Would create symlink at /var/log/gitlab/puma/config to /opt/gitlab/sv/puma/log/config
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      - Would execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)

Recipe: gitlab::unicorn_disable
  * unicorn_service[unicorn] action stop
  Recipe: <Dynamically Defined Resource>
    * service[unicorn] action nothing (skipped due to action :nothing)
    * runit_service[unicorn] action stop (up to date)
     (up to date)
Recipe: gitlab::puma
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create
      - create new file /opt/gitlab/sv/puma/log/config
      - update content in file /opt/gitlab/sv/puma/log/config from none to 623c00
      --- /opt/gitlab/sv/puma/log/config        2022-03-18 14:24:40.589409776 +0800
      +++ /opt/gitlab/sv/puma/log/.chef-config20220318-1478-1ijnfci     2022-03-18 14:24:40.589409776 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_puma] action create
      - execute the ruby block verify_chown_persisted_on_puma
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create
      - unlink existing symlink to file at /var/log/gitlab/puma/config
      - create symlink at /var/log/gitlab/puma/config to /opt/gitlab/sv/puma/log/config
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/puma] action create (up to date)
      * template[/opt/gitlab/sv/puma/run] action create (up to date)
      * directory[/opt/gitlab/sv/puma/log] action create (up to date)
      * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
      * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/puma/config] action create (up to date)
      * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/puma/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/puma/control] action create (up to date)
      * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
      * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
      * link[/opt/gitlab/init/puma] action create (up to date)
      * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/puma] action create (up to date)
      * ruby_block[wait for puma service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)

  * consul_service[rails] action delete
    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)
     (up to date)
  * gitlab_sysctl[net.core.somaxconn] action create
    * directory[create /etc/sysctl.d for net.core.somaxconn] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-net.core.somaxconn.conf net.core.somaxconn] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-net.core.somaxconn.conf] action create (up to date)
    * execute[load sysctl conf net.core.somaxconn] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: gitlab::sidekiq-cluster
  * sidekiq_service[sidekiq] action enable
    * directory[/var/log/gitlab/sidekiq] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[sidekiq] action nothing (skipped due to action :nothing)
    * runit_service[sidekiq] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/config] action create
        - create new file /opt/gitlab/sv/sidekiq/log/config
        - update content in file /opt/gitlab/sv/sidekiq/log/config from none to 623c00
        --- /opt/gitlab/sv/sidekiq/log/config   2022-03-18 14:24:41.833377415 +0800
        +++ /opt/gitlab/sv/sidekiq/log/.chef-config20220318-1478-mg8rod 2022-03-18 14:24:41.833377415 +0800
        @@ -1,6 +1,12 @@
        +s209715200
        +n30
        +t86400
        +!gzip
        +
        +
        - change mode from '' to '0644'
        - change owner from '' to 'root'
        - change group from '' to 'root'
      * ruby_block[verify_chown_persisted_on_sidekiq] action create
        - execute the ruby block verify_chown_persisted_on_sidekiq
      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/sidekiq/config] action create
        - unlink existing symlink to file at /var/log/gitlab/sidekiq/config
        - create symlink at /var/log/gitlab/sidekiq/config to /opt/gitlab/sv/sidekiq/log/config
      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
      * link[/opt/gitlab/init/sidekiq] action create (up to date)
      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action create
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
        * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
        * link[/var/log/gitlab/sidekiq/config] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
        * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
        * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
        * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
        * link[/opt/gitlab/init/sidekiq] action create (up to date)
        * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/service] action create (up to date)
        * link[/opt/gitlab/service/sidekiq] action create (up to date)
        * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
        - execute the ruby block reload_log_service
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/sidekiq] action create (up to date)
      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)


Recipe: gitlab::sidekiq-cluster
  * consul_service[sidekiq] action delete
    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)
     (up to date)
  * service[sidekiq-cluster] action nothing (skipped due to action :nothing)
  * runit_service[sidekiq-cluster] action disable
    * ruby_block[disable sidekiq-cluster] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::gitlab-workhorse
  * directory[/var/opt/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-workhorse/sockets] action create
    - create new directory /var/opt/gitlab/gitlab-workhorse/sockets
    - change mode from '' to '0750'
    - change owner from '' to 'git'
    - change group from '' to 'gitlab-www'
  * directory[/var/log/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create
    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-workhorse] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create
      - update content in file /opt/gitlab/sv/gitlab-workhorse/run from a979e8 to a1dfda
      --- /opt/gitlab/sv/gitlab-workhorse/run   2022-03-18 13:37:46.732479363 +0800
      +++ /opt/gitlab/sv/gitlab-workhorse/.chef-run20220318-1478-12m8rq5        2022-03-18 14:24:42.901349641 +0800
      @@ -8,13 +8,18 @@

       cd /var/opt/gitlab/gitlab-workhorse

      +if [ -e "/var/opt/gitlab/gitlab-workhorse/socket" ]; then
      +  echo "Removing orphaned workhorse socket at '/var/opt/gitlab/gitlab-workhorse/socket'"
      +  rm /var/opt/gitlab/gitlab-workhorse/socket
      +fi
      +
       exec chpst -e /opt/gitlab/etc/gitlab-workhorse/env -P \
         -U git:git \
         -u git:git \
         /opt/gitlab/embedded/bin/gitlab-workhorse \
           -listenNetwork unix \
           -listenUmask 0 \
      -    -listenAddr /var/opt/gitlab/gitlab-workhorse/socket \
      +    -listenAddr /var/opt/gitlab/gitlab-workhorse/sockets/socket \
           -authBackend http://localhost:8080 \
           -authSocket /var/opt/gitlab/gitlab-rails/sockets/gitlab.socket \
           -documentRoot /opt/gitlab/embedded/service/gitlab-rails/public \
    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create
      - create new file /opt/gitlab/sv/gitlab-workhorse/log/config
      - update content in file /opt/gitlab/sv/gitlab-workhorse/log/config from none to 623c00
      --- /opt/gitlab/sv/gitlab-workhorse/log/config    2022-03-18 14:24:42.977347665 +0800
      +++ /opt/gitlab/sv/gitlab-workhorse/log/.chef-config20220318-1478-r0eys5  2022-03-18 14:24:42.977347665 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action create
      - execute the ruby block verify_chown_persisted_on_gitlab-workhorse
    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-workhorse/config] action create
      - unlink existing symlink to file at /var/log/gitlab/gitlab-workhorse/config
      - create symlink at /var/log/gitlab/gitlab-workhorse/config to /opt/gitlab/sv/gitlab-workhorse/log/config
    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
      * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
      * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
      * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
      - execute the ruby block restart_service
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/run] action create
        - update content in file /opt/gitlab/sv/gitlab-workhorse/run from a1dfda to ead6b1
        --- /opt/gitlab/sv/gitlab-workhorse/run 2022-03-18 14:24:42.901349641 +0800
        +++ /opt/gitlab/sv/gitlab-workhorse/.chef-run20220318-1478-sv2vcw       2022-03-18 14:24:43.513333728 +0800
        @@ -8,10 +8,6 @@

         cd /var/opt/gitlab/gitlab-workhorse

        -if [ -e "/var/opt/gitlab/gitlab-workhorse/socket" ]; then
        -  echo "Removing orphaned workhorse socket at '/var/opt/gitlab/gitlab-workhorse/socket'"
        -  rm /var/opt/gitlab/gitlab-workhorse/socket
        -fi

         exec chpst -e /opt/gitlab/etc/gitlab-workhorse/env -P \
           -U git:git \
      * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
      * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
      * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
        * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
        * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
        * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
        * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
        * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
        * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
        * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
        * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
        * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
        * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
        * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
        * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
        * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/service] action create (up to date)
        * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
        * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
        - execute the ruby block restart_service
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
      * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)

  * consul_service[workhorse] action delete
    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)
     (up to date)
  * version_file[Create version file for Workhorse] action create
    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create
      - update content in file /var/opt/gitlab/gitlab-workhorse/VERSION from 21d48f to 29beeb
      --- /var/opt/gitlab/gitlab-workhorse/VERSION      2022-03-18 14:12:36.856504795 +0800
      +++ /var/opt/gitlab/gitlab-workhorse/.chef-VERSION20220318-1478-1y62jyv   2022-03-18 14:24:46.065267393 +0800
      @@ -1 +1 @@
      -gitlab-workhorse v8.31.2-20200805.154912
      +gitlab-workhorse v13.12.15-20211103.195822

  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create
    - update content in file /var/opt/gitlab/gitlab-workhorse/config.toml from cb62fe to 4f571b
    --- /var/opt/gitlab/gitlab-workhorse/config.toml    2018-12-27 16:57:28.512937208 +0800
    +++ /var/opt/gitlab/gitlab-workhorse/.chef-config20220318-1478-1v7vej6.toml 2022-03-18 14:24:46.121265939 +0800
    @@ -1,4 +1,10 @@
    +
     [redis]
     URL = "unix:/var/opt/gitlab/redis/redis.socket"
     Password = ""
    +
    +
    +[image_resizer]
    +  max_scaler_procs = 2
    +  max_filesize = 250000
Recipe: gitlab::mailroom_disable
  * service[mailroom] action nothing (skipped due to action :nothing)
  * runit_service[mailroom] action disable
    * ruby_block[disable mailroom] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::nginx
  * directory[/var/opt/gitlab/nginx] action create (up to date)
  * directory[/var/opt/gitlab/nginx/conf] action create (up to date)
  * directory[/var/log/gitlab/nginx] action create (up to date)
  * link[/var/opt/gitlab/nginx/logs] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create
    - update content in file /var/opt/gitlab/nginx/conf/gitlab-http.conf from 3d6240 to 451399
    --- /var/opt/gitlab/nginx/conf/gitlab-http.conf     2022-03-18 14:12:36.904503737 +0800
    +++ /var/opt/gitlab/nginx/conf/.chef-gitlab-http20220318-1478-18rshrv.conf  2022-03-18 14:24:46.209263652 +0800
    @@ -50,6 +50,9 @@
       ## https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
       add_header Strict-Transport-Security "max-age=31536000";

    +  # Rails sets a default policy of strict-origin-when-cross-origin, so
    +  # hide that and just send the one we've configured for nginx
    +  proxy_hide_header Referrer-Policy;
       add_header Referrer-Policy strict-origin-when-cross-origin;

       ## Individual nginx logs for this GitLab vhost
    @@ -70,7 +73,7 @@
       gzip_http_version 1.1;
       gzip_vary on;
       gzip_disable "msie6";
    -  gzip_min_length 10240;
    +  gzip_min_length 250;
       gzip_proxied no-cache no-store private expired auth;
       gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;

    @@ -88,7 +91,7 @@
       proxy_set_header Connection $connection_upgrade;
       proxy_set_header X-Forwarded-Proto http;

    -  location ~ (.git/git-receive-pack$|.git/info/refs?service=git-receive-pack$|.git/gitlab-lfs/objects|.git/info/lfs/objects/batch$) {
    +  location ~ (/api/v\d/jobs/\d+/artifacts$|\.git/git-receive-pack$|\.git/gitlab-lfs/objects|\.git/info/lfs/objects/batch$) {
         proxy_cache off;
         proxy_pass http://gitlab-workhorse;
         proxy_request_buffering off;
    @@ -98,12 +101,7 @@
         proxy_pass http://localhost:3000/;
       }

    -  location /-/grafana/avatar {
    -    deny all;
    -    return 404;
    -  }

    -
       # health checks configuration
       include /var/opt/gitlab/nginx/conf/gitlab-health.conf;

    @@ -113,6 +111,7 @@
       }

       location /assets {
    +    add_header X-Content-Type-Options nosniff;
         proxy_cache gitlab;
         proxy_pass  http://gitlab-workhorse;
       }
  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create (up to date)
  * consul_service[nginx] action delete
    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create
    - update content in file /var/opt/gitlab/nginx/conf/nginx.conf from fe84d4 to 4483c4
    --- /var/opt/gitlab/nginx/conf/nginx.conf   2022-03-18 14:12:36.972502239 +0800
    +++ /var/opt/gitlab/nginx/conf/.chef-nginx20220318-1478-11ncme6.conf        2022-03-18 14:24:46.593253674 +0800
    @@ -17,6 +17,8 @@
       log_format gitlab_access '$remote_addr - $remote_user [$time_local] "$request_method $filtered_request_uri $server_protocol" $status $body_bytes_sent "$filtered_http_referer" "$http_user_agent" $gzip_ratio';
       log_format gitlab_mattermost_access '$remote_addr - $remote_user [$time_local] "$request_method $filtered_request_uri $server_protocol" $status $body_bytes_sent "$filtered_http_referer" "$http_user_agent" $gzip_ratio';

    +  hide_server_tokens off;
    +
       server_names_hash_bucket_size 64;

       sendfile on;
    @@ -75,7 +77,7 @@
       vhost_traffic_status_zone;

       upstream gitlab-workhorse {
    -    server unix:/var/opt/gitlab/gitlab-workhorse/socket;
    +    server unix:/var/opt/gitlab/gitlab-workhorse/sockets/socket;
       }

       include /var/opt/gitlab/nginx/conf/gitlab-http.conf;
Recipe: nginx::enable
  * service[nginx] action nothing (skipped due to action :nothing)
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/nginx] action create (up to date)
    * template[/opt/gitlab/sv/nginx/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/config] action create
      - create new file /opt/gitlab/sv/nginx/log/config
      - update content in file /opt/gitlab/sv/nginx/log/config from none to 623c00
      --- /opt/gitlab/sv/nginx/log/config       2022-03-18 14:24:46.737249933 +0800
      +++ /opt/gitlab/sv/nginx/log/.chef-config20220318-1478-19f3iox    2022-03-18 14:24:46.737249933 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_nginx] action create
      - execute the ruby block verify_chown_persisted_on_nginx
    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/nginx/config] action create
      - unlink existing symlink to file at /var/log/gitlab/nginx/config
      - create symlink at /var/log/gitlab/nginx/config to /opt/gitlab/sv/nginx/log/config
    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
    * link[/opt/gitlab/init/nginx] action create (up to date)
    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/nginx] action create (up to date)
      * template[/opt/gitlab/sv/nginx/run] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
      * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/nginx/config] action create (up to date)
      * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
      * link[/opt/gitlab/init/nginx] action create (up to date)
      * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/nginx] action create (up to date)
      * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/nginx] action create (up to date)
    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)

  * execute[reload nginx] action nothing (skipped due to action :nothing)
Recipe: gitlab::remote-syslog_disable
  * service[remote-syslog] action nothing (skipped due to action :nothing)
  * runit_service[remote-syslog] action disable
    * ruby_block[disable remote-syslog] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::storage-check_disable
  * service[storage-check] action nothing (skipped due to action :nothing)
  * runit_service[storage-check] action disable
    * ruby_block[disable storage-check] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::actioncable_disable
  * service[actioncable] action nothing (skipped due to action :nothing)
  * runit_service[actioncable] action disable
    * ruby_block[disable actioncable] action run (skipped due to only_if)
     (up to date)
  * consul_service[actioncable] action delete
    * file[/var/opt/gitlab/consul/config.d/actioncable-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab-pages::disable
  * service[gitlab-pages] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-pages] action disable
    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)
     (up to date)
Recipe: registry::disable
  * service[registry] action nothing (skipped due to action :nothing)
  * runit_service[registry] action disable
    * ruby_block[disable registry] action run (skipped due to only_if)
     (up to date)
Recipe: mattermost::disable
  * service[mattermost] action nothing (skipped due to action :nothing)
  * runit_service[mattermost] action disable
    * ruby_block[disable mattermost] action run (skipped due to only_if)
     (up to date)
Recipe: letsencrypt::disable
  * crond_job[letsencrypt-renew] action delete
    * file[/var/opt/gitlab/crond/letsencrypt-renew] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-healthcheck
  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)
Recipe: monitoring::user
  * account[Prometheus user and group] action create
    * group[Prometheus user and group] action create (up to date)
    * linux_user[Prometheus user and group] action create (up to date)
     (up to date)
Recipe: monitoring::node-exporter
  * directory[/var/log/gitlab/node-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/node-exporter/env] action create
    * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/node-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/node-exporter/textfile_collector] action create (up to date)
  * service[node-exporter] action nothing (skipped due to action :nothing)
  * runit_service[node-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/node-exporter] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/config] action create
      - create new file /opt/gitlab/sv/node-exporter/log/config
      - update content in file /opt/gitlab/sv/node-exporter/log/config from none to 623c00
      --- /opt/gitlab/sv/node-exporter/log/config       2022-03-18 14:24:47.905219589 +0800
      +++ /opt/gitlab/sv/node-exporter/log/.chef-config20220318-1478-1yye5if    2022-03-18 14:24:47.905219589 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_node-exporter] action create
      - execute the ruby block verify_chown_persisted_on_node-exporter
    * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/node-exporter/config] action create
      - unlink existing symlink to file at /var/log/gitlab/node-exporter/config
      - create symlink at /var/log/gitlab/node-exporter/config to /opt/gitlab/sv/node-exporter/log/config
    * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/node-exporter] action create (up to date)
    * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/node-exporter] action create (up to date)
      * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/node-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/node-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/node-exporter] action create (up to date)
      * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/node-exporter] action create (up to date)
      * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/node-exporter] action create (up to date)
    * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)

  * consul_service[node-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::gitlab-exporter
  * directory[/var/opt/gitlab/gitlab-exporter] action create (up to date)
  * directory[/var/log/gitlab/gitlab-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-exporter/env] action create
    * directory[/opt/gitlab/etc/gitlab-exporter/env] action create
      - create new directory /opt/gitlab/etc/gitlab-exporter/env
    * file[/opt/gitlab/etc/gitlab-exporter/env/LD_PRELOAD] action create
      - create new file /opt/gitlab/etc/gitlab-exporter/env/LD_PRELOAD
      - update content in file /opt/gitlab/etc/gitlab-exporter/env/LD_PRELOAD from none to f79114
      - suppressed sensitive resource
    * file[/opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF] action create
      - create new file /opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF
      - update content in file /opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF from none to 2ea29b
      - suppressed sensitive resource
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS] action create
      - create new file /opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS
      - update content in file /opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS from none to 47b250
      - suppressed sensitive resource
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO] action create
      - create new file /opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO
      - update content in file /opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO from none to c945fb
      - suppressed sensitive resource
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO] action create
      - create new file /opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO
      - update content in file /opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO from none to 8a60e9
      - suppressed sensitive resource

  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create
    - update content in file /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml from 884e98 to b4f32c
    --- /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml     2022-03-18 14:12:37.292495188 +0800
    +++ /var/opt/gitlab/gitlab-exporter/.chef-gitlab-exporter20220318-1478-1cio9ki.yml  2022-03-18 14:24:49.061189564 +0800
    @@ -6,18 +6,12 @@

     # Web server config
     server:
    +  name: webrick
       listen_address: localhost
       listen_port: 9168

     # Probes config
     probes:
    -  git_process: &git_process
    -    class_name: GitProcessProber # `class_name` is redundant here
    -    methods:
    -    - probe_git
    -    opts:
    -      quantiles: true
    -
       # We can group multiple probes under a single endpoint by setting the `multiple` key to `true`, followed
       # by probe definitions as usual.
       database:
    @@ -31,21 +25,15 @@
         rows_count:
           class_name: Database::RowCountProber
           <<: *db_common
    +  database_bloat:
    +    class_name: Database::BloatProber
    +    <<: *db_common

    -  process: &process
    +  ruby: &ruby
         methods:
    -      - probe_stat
    -      - probe_count
    +      - probe_gc
         opts:
    -      - pid_or_pattern: "sidekiq .* \\[.*?\\]"
    -        name: sidekiq
    -      - pid_or_pattern: "gitlab-puma-worker"
    -        name: puma
    -      - pid_or_pattern: "unicorn.* worker\\[.*?\\]"
    -        name: unicorn
    -      - pid_or_pattern: "git-upload-pack --stateless-rpc"
    -        name: git_upload_pack
    -        quantiles: true
    +      quantiles: false

       sidekiq: &sidekiq
         methods:
    @@ -59,10 +47,8 @@

       metrics:
         multiple: true
    -    git_process:
    -      <<: *git_process
    -    process:
    -      <<: *process
    +    ruby:
    +      <<: *ruby
         sidekiq:
           <<: *sidekiq
         ci_builds:
  * version_file[Create version file for GitLab-Exporter] action create
    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create
      - update content in file /var/opt/gitlab/gitlab-exporter/RUBY_VERSION from d89bae to 22dcc2
      --- /var/opt/gitlab/gitlab-exporter/RUBY_VERSION  2022-03-18 13:49:23.494387062 +0800
      +++ /var/opt/gitlab/gitlab-exporter/.chef-RUBY_VERSION20220318-1478-gozjsg        2022-03-18 14:24:49.181186448 +0800
      @@ -1 +1 @@
      -ruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-linux]
      +ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-linux]

  * service[gitlab-exporter] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/run] action create
      - update content in file /opt/gitlab/sv/gitlab-exporter/run from 4072c9 to 455cb2
      --- /opt/gitlab/sv/gitlab-exporter/run    2022-03-18 13:49:23.534386260 +0800
      +++ /opt/gitlab/sv/gitlab-exporter/.chef-run20220318-1478-stqg0n  2022-03-18 14:24:49.269184163 +0800
      @@ -2,7 +2,7 @@
       exec 2>&1

       umask 077
      -exec chpst -P \
      +exec chpst -P -e /opt/gitlab/etc/gitlab-exporter/env \
         -U git:git \
         -u git:git \
         /opt/gitlab/embedded/bin/gitlab-exporter web \
    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create
      - create new file /opt/gitlab/sv/gitlab-exporter/log/config
      - update content in file /opt/gitlab/sv/gitlab-exporter/log/config from none to 623c00
      --- /opt/gitlab/sv/gitlab-exporter/log/config     2022-03-18 14:24:49.333182501 +0800
      +++ /opt/gitlab/sv/gitlab-exporter/log/.chef-config20220318-1478-1s43xis  2022-03-18 14:24:49.333182501 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action create
      - execute the ruby block verify_chown_persisted_on_gitlab-exporter
    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-exporter/config] action create
      - unlink existing symlink to file at /var/log/gitlab/gitlab-exporter/config
      - create symlink at /var/log/gitlab/gitlab-exporter/config to /opt/gitlab/sv/gitlab-exporter/log/config
    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
      * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
      * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)

Recipe: monitoring::redis-exporter
  * directory[/var/log/gitlab/redis-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create
    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[redis-exporter] action nothing (skipped due to action :nothing)
  * runit_service[redis-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/config] action create
      - create new file /opt/gitlab/sv/redis-exporter/log/config
      - update content in file /opt/gitlab/sv/redis-exporter/log/config from none to 623c00
      --- /opt/gitlab/sv/redis-exporter/log/config      2022-03-18 14:24:50.369155602 +0800
      +++ /opt/gitlab/sv/redis-exporter/log/.chef-config20220318-1478-gbavh4    2022-03-18 14:24:50.369155602 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_redis-exporter] action create
      - execute the ruby block verify_chown_persisted_on_redis-exporter
    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/redis-exporter/config] action create
      - unlink existing symlink to file at /var/log/gitlab/redis-exporter/config
      - create symlink at /var/log/gitlab/redis-exporter/config to /opt/gitlab/sv/redis-exporter/log/config
    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/redis-exporter] action create (up to date)
    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/redis-exporter] action create (up to date)
      * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis-exporter] action create (up to date)
      * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/redis-exporter] action create (up to date)
    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)

  * consul_service[redis-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::prometheus
  * directory[/var/opt/gitlab/prometheus] action create (up to date)
  * directory[/var/opt/gitlab/prometheus/rules] action create (up to date)
  * directory[/var/log/gitlab/prometheus] action create (up to date)
  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/prometheus/env] action create
    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * execute[reload prometheus] action nothing (skipped due to action :nothing)
  * file[Prometheus config] action create
    - update content in file /var/opt/gitlab/prometheus/prometheus.yml from 526426 to 0fbf9e
    --- /var/opt/gitlab/prometheus/prometheus.yml       2022-03-18 13:49:27.550305698 +0800
    +++ /var/opt/gitlab/prometheus/.chef-prometheus20220318-1478-1cizcsl.yml    2022-03-18 14:24:51.317130991 +0800
    @@ -2,6 +2,7 @@
     global:
       scrape_interval: 15s
       scrape_timeout: 15s
    +  external_labels: {}
     remote_read: []
     remote_write: []
     rule_files:
    @@ -62,8 +63,8 @@
       static_configs:
       - targets:
         - localhost:9168
    -- job_name: gitlab_exporter_process
    -  metrics_path: "/process"
    +- job_name: gitlab_exporter_ruby
    +  metrics_path: "/ruby"
       static_configs:
       - targets:
         - localhost:9168
  * service[prometheus] action nothing (skipped due to action :nothing)
  * runit_service[prometheus] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/prometheus] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/config] action create
      - create new file /opt/gitlab/sv/prometheus/log/config
      - update content in file /opt/gitlab/sv/prometheus/log/config from none to 623c00
      --- /opt/gitlab/sv/prometheus/log/config  2022-03-18 14:24:51.469127047 +0800
      +++ /opt/gitlab/sv/prometheus/log/.chef-config20220318-1478-cbu3v 2022-03-18 14:24:51.469127047 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_prometheus] action create
      - execute the ruby block verify_chown_persisted_on_prometheus
    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/prometheus/config] action create
      - unlink existing symlink to file at /var/log/gitlab/prometheus/config
      - create symlink at /var/log/gitlab/prometheus/config to /opt/gitlab/sv/prometheus/log/config
    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
    * link[/opt/gitlab/init/prometheus] action create (up to date)
    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/prometheus] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/prometheus/config] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
      * link[/opt/gitlab/init/prometheus] action create (up to date)
      * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/prometheus] action create (up to date)
      * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/prometheus] action create (up to date)
    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)

  * consul_service[prometheus] action delete
    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create
    - update content in file /var/opt/gitlab/prometheus/rules/gitlab.rules from 14110e to 3ace08
    --- /var/opt/gitlab/prometheus/rules/gitlab.rules   2022-03-18 14:12:37.656487167 +0800
    +++ /var/opt/gitlab/prometheus/rules/.chef-gitlab20220318-1478-115xb94.rules        2022-03-18 14:24:52.349104207 +0800
    @@ -18,11 +18,6 @@
           sum by (instance) (
             puma_max_threads
           )
    -  - record: job_grpc:grpc_server_handled_total:rate5m
    -    expr: >
    -      sum by (job, grpc_code, grpc_method, grpc_service, grpc_type) (
    -        rate(grpc_server_handled_total[5m])
    -      )
       - record: job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m
         expr: >
           sum by (job, route, method, code) (
    @@ -79,16 +74,16 @@
           description: Sidekiq queue {{ $labels.name }} has {{ $value }} jobs queued for 60 minutes.
       - alert: HighgRPCResourceExhaustedRate
         expr: >
    -      sum without (grpc_code) (
    -        job_grpc:grpc_server_handled_total:rate5m{grpc_code="ResourceExhausted"}
    +      sum without (grpc_code, grpc_method, grpc_service, grpc_type) (
    +        rate(grpc_server_handled_total{grpc_code="ResourceExhausted"}[5m])
           ) /
    -      sum without (grpc_code) (
    -        job_grpc:grpc_server_handled_total:rate5m
    +      sum without (grpc_code, grpc_method, grpc_service, grpc_type) (
    +        rate(grpc_server_handled_total[5m])
           ) * 100 > 1
         for: 60m
         annotations:
           summary: High gRPC ResourceExhausted error rate
    -      description: gRPC is returning more than 1% ({{ $value | printf "%.1f" }}%) ResourceExhausted errors over the last 60 minutes.
    +      description: Job {{ $labels.job }} instance {{ $labels.instance }} gRPC is returning more than 1% ({{ $value | printf "%.1f" }}%) ResourceExhausted errors over the last 60 minutes.
       - alert: PostgresDatabaseDeadlocks
         expr: increase(pg_stat_database_deadlocks[5m]) > 0
         annotations:
    @@ -332,15 +327,7 @@
       - record: gitlab_sli:gitlab_component_saturation:ratio
         labels:
           component: 'memory'
    -    expr: >
    -      max (
    -       1 -
    -       (
    -         node_memory_MemAvailable_bytes or
    -         (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)
    -       ) /
    -       node_memory_MemTotal_bytes
    -      )
    +    expr: max (instance:node_memory_utilization:ratio)

       - record: gitlab_sli:gitlab_component_saturation:ratio
         labels:
    @@ -471,4 +458,75 @@
       - record: gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w:predict_linear_30d
         expr: >
           predict_linear(gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w[1w], 86400 * 30)
    +
    +###
    +# Metrics used by Usage Ping reports. These are primarily for self-managed installations.
    +# See https://docs.gitlab.com/ee/development/telemetry/usage_ping.html#prometheus-queries
    +#
    +- name: GitLab Usage Ping
    +  interval: 5m
    +  rules:
    +  ###
    +  # Application wide metrics
    +  #
    +  - record: gitlab_usage_ping:ops:rate5m
    +    labels:
    +      service: workhorse
    +      component: http_requests
    +    expr: sum (rate (gitlab_workhorse_http_requests_total[5m]))
    +
    +  # Database Primary Performance Indicator: Query apdex
    +  # Target -> 100ms
    +  # Tolerable -> 250ms
    +  - record: gitlab_usage_ping:sql_duration_apdex:ratio_rate5m
    +    expr: >
    +      (
    +        sum(rate(gitlab_sql_duration_seconds_bucket{le="0.1"}[5m]))
    +        +
    +        sum(rate(gitlab_sql_duration_seconds_bucket{le="0.25"}[5m]))
    +      )
    +      /
    +      2
    +      /
    +      (
    +        sum(rate(gitlab_sql_duration_seconds_count[5m])) > 0
    +      )
    +
    +  - record: gitlab_usage_ping:gitaly_apdex:ratio_avg_over_time_5m
    +    expr: avg_over_time(gitlab_sli:gitlab_component_apdex:ratio{job="gitaly"}[5m])
    +
    +  ###
    +  # Node level metrics
    +  #
    +  - record: gitlab_usage_ping:node_cpus:count
    +    expr: max (instance:node_cpus:count) by (instance)
    +  - record: gitlab_usage_ping:node_memory_total_bytes:max
    +    expr: max (node_memory_MemTotal_bytes) by (instance)
    +  - record: gitlab_usage_ping:node_cpu_utilization:avg
    +    expr: avg (instance:node_cpu_utilization:ratio) by (instance)
    +  - record: gitlab_usage_ping:node_memory_utilization:avg
    +    expr: avg (instance:node_memory_utilization:ratio) by (instance)
    +
    +  ###
    +  # Service level metrics
    +  #
    +  - record: gitlab_usage_ping:node_service_process_resident_memory_bytes:avg
    +    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_resident_memory_bytes", job != "gitlab_exporter_process"})
    +  - record: gitlab_usage_ping:node_service_process_unique_memory_bytes:avg
    +    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_unique_memory_bytes", job != "gitlab_exporter_process"})
    +  - record: gitlab_usage_ping:node_service_process_proportional_memory_bytes:avg
    +    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_proportional_memory_bytes", job != "gitlab_exporter_process"})
    +  - record: gitlab_usage_ping:node_service_process:count
    +    expr: >
    +      count by (instance, job) (
    +        {__name__ =~ "(ruby_){0,1}process_start_time_seconds", job != "gitlab_exporter_process"}
    +      )
    +  - record: gitlab_usage_ping:node_service_app_server_workers:sum
    +    labels:
    +      server: puma
    +    expr: sum by (instance, job) (puma_workers)
    +  - record: gitlab_usage_ping:node_service_app_server_workers:sum
    +    labels:
    +      server: unicorn
    +    expr: sum by (instance, job) (unicorn_workers)
  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create
    - update content in file /var/opt/gitlab/prometheus/rules/node.rules from 9e885c to bea78d
    --- /var/opt/gitlab/prometheus/rules/node.rules     2018-12-27 16:58:07.884363604 +0800
    +++ /var/opt/gitlab/prometheus/rules/.chef-node20220318-1478-b59nhl.rules   2022-03-18 14:24:52.449101612 +0800
    @@ -16,10 +16,16 @@
       - record: instance:node_cpu_utilization:ratio
         expr: sum without(mode) (instance_mode:node_cpu_seconds:rate5m{mode!="idle"})
           / instance:node_cpus:count
    +  - record: instance:node_memory_utilization:ratio
    +    expr: >
    +      1 - (
    +        node_memory_MemAvailable_bytes or
    +         (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)
    +      ) / node_memory_MemTotal_bytes
       - record: instance:node_filesystem_avail:ratio
         expr: node_filesystem_avail_bytes / (node_filesystem_size_bytes > 0)
       - alert: FilesystemAlmostFull
    -    expr: instance:node_filesystem_avail:ratio * 100 < 5
    +    expr: instance:node_filesystem_avail:ratio * 100 < 5 and node_filesystem_avail_bytes < 10 * 1024 * 1024 * 1024
         for: 10m
         annotations:
           description: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} on
Recipe: monitoring::alertmanager
  * directory[/var/opt/gitlab/alertmanager] action create (up to date)
  * directory[/var/log/gitlab/alertmanager] action create (up to date)
  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/alertmanager/env] action create
    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * file[Alertmanager config] action create (up to date)
  * service[alertmanager] action nothing (skipped due to action :nothing)
  * runit_service[alertmanager] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/config] action create
      - create new file /opt/gitlab/sv/alertmanager/log/config
      - update content in file /opt/gitlab/sv/alertmanager/log/config from none to 623c00
      --- /opt/gitlab/sv/alertmanager/log/config        2022-03-18 14:24:52.709094865 +0800
      +++ /opt/gitlab/sv/alertmanager/log/.chef-config20220318-1478-k87mag      2022-03-18 14:24:52.709094865 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_alertmanager] action create
      - execute the ruby block verify_chown_persisted_on_alertmanager
    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/alertmanager/config] action create
      - unlink existing symlink to file at /var/log/gitlab/alertmanager/config
      - create symlink at /var/log/gitlab/alertmanager/config to /opt/gitlab/sv/alertmanager/log/config
    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
    * link[/opt/gitlab/init/alertmanager] action create (up to date)
    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/alertmanager/config] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
      * link[/opt/gitlab/init/alertmanager] action create (up to date)
      * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/alertmanager] action create (up to date)
      * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/alertmanager] action create (up to date)
    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)

Recipe: monitoring::postgres-exporter
  * directory[/var/log/gitlab/postgres-exporter] action create (up to date)
  * directory[/var/opt/gitlab/postgres-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create
    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create
      - update content in file /opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME from 1949e6 to af4c92
      - suppressed sensitive resource

  * service[postgres-exporter] action nothing (skipped due to action :nothing)
  * runit_service[postgres-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create
      - create new file /opt/gitlab/sv/postgres-exporter/log/config
      - update content in file /opt/gitlab/sv/postgres-exporter/log/config from none to 623c00
      --- /opt/gitlab/sv/postgres-exporter/log/config   2022-03-18 14:24:53.749067881 +0800
      +++ /opt/gitlab/sv/postgres-exporter/log/.chef-config20220318-1478-1yvuqum        2022-03-18 14:24:53.749067881 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_postgres-exporter] action create
      - execute the ruby block verify_chown_persisted_on_postgres-exporter
    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgres-exporter/config] action create
      - unlink existing symlink to file at /var/log/gitlab/postgres-exporter/config
      - create symlink at /var/log/gitlab/postgres-exporter/config to /opt/gitlab/sv/postgres-exporter/log/config
    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
      * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
      * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)

  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create
    - update content in file /var/opt/gitlab/postgres-exporter/queries.yaml from 4c23c0 to bb807f
    --- /var/opt/gitlab/postgres-exporter/queries.yaml  2022-03-18 13:49:27.974297189 +0800
    +++ /var/opt/gitlab/postgres-exporter/.chef-queries20220318-1478-1gsy2z1.yaml       2022-03-18 14:24:54.569046608 +0800
    @@ -15,76 +15,6 @@
             usage: "GAUGE"
             description: "Time at which postmaster started"

    -pg_stat_user_tables:
    -  query: "SELECT current_database() datname, schemaname, relname, seq_scan, seq_tup_read, idx_scan, idx_tup_fetch, n_tup_ins, n_tup_upd, n_tup_del, n_tup_hot_upd, n_live_tup, n_dead_tup, n_mod_since_analyze, COALESCE(last_vacuum, '1970-01-01Z'), COALESCE(last_vacuum, '1970-01-01Z') as last_vacuum, COALESCE(last_autovacuum, '1970-01-01Z') as last_autovacuum, COALESCE(last_analyze, '1970-01-01Z') as last_analyze, COALESCE(last_autoanalyze, '1970-01-01Z') as last_autoanalyze, vacuum_count, autovacuum_count, analyze_count, autoanalyze_count FROM pg_stat_user_tables"
    -  metrics:
    -    - datname:
    -        usage: "LABEL"
    -        description: "Name of current database"
    -    - schemaname:
    -        usage: "LABEL"
    -        description: "Name of the schema that this table is in"
    -    - relname:
    -        usage: "LABEL"
    -        description: "Name of this table"
    -    - seq_scan:
    -        usage: "COUNTER"
    -        description: "Number of sequential scans initiated on this table"
    -    - seq_tup_read:
    -        usage: "COUNTER"
    -        description: "Number of live rows fetched by sequential scans"
    -    - idx_scan:
    -        usage: "COUNTER"
    -        description: "Number of index scans initiated on this table"
    -    - idx_tup_fetch:
    -        usage: "COUNTER"
    -        description: "Number of live rows fetched by index scans"
    -    - n_tup_ins:
    -        usage: "COUNTER"
    -        description: "Number of rows inserted"
    -    - n_tup_upd:
    -        usage: "COUNTER"
    -        description: "Number of rows updated"
    -    - n_tup_del:
    -        usage: "COUNTER"
    -        description: "Number of rows deleted"
    -    - n_tup_hot_upd:
    -        usage: "COUNTER"
    -        description: "Number of rows HOT updated (i.e., with no separate index update required)"
    -    - n_live_tup:
    -        usage: "GAUGE"
    -        description: "Estimated number of live rows"
    -    - n_dead_tup:
    -        usage: "GAUGE"
    -        description: "Estimated number of dead rows"
    -    - n_mod_since_analyze:
    -        usage: "GAUGE"
    -        description: "Estimated number of rows changed since last analyze"
    -    - last_vacuum:
    -        usage: "GAUGE"
    -        description: "Last time at which this table was manually vacuumed (not counting VACUUM FULL)"
    -    - last_autovacuum:
    -        usage: "GAUGE"
    -        description: "Last time at which this table was vacuumed by the autovacuum daemon"
    -    - last_analyze:
    -        usage: "GAUGE"
    -        description: "Last time at which this table was manually analyzed"
    -    - last_autoanalyze:
    -        usage: "GAUGE"
    -        description: "Last time at which this table was analyzed by the autovacuum daemon"
    -    - vacuum_count:
    -        usage: "COUNTER"
    -        description: "Number of times this table has been manually vacuumed (not counting VACUUM FULL)"
    -    - autovacuum_count:
    -        usage: "COUNTER"
    -        description: "Number of times this table has been vacuumed by the autovacuum daemon"
    -    - analyze_count:
    -        usage: "COUNTER"
    -        description: "Number of times this table has been manually analyzed"
    -    - autoanalyze_count:
    -        usage: "COUNTER"
    -        description: "Number of times this table has been analyzed by the autovacuum daemon"
    -
     pg_total_relation_size:
       query: |
         SELECT relnamespace::regnamespace as schemaname,
  * consul_service[postgres-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::grafana
  * directory[/var/log/gitlab/grafana] action create (up to date)
  * directory[/var/opt/gitlab/grafana] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/dashboards] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/datasources] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/notifiers] action create (up to date)
  * file[/var/opt/gitlab/grafana/CVE_reset_status] action delete (up to date)
  * link[/var/opt/gitlab/grafana/conf] action create (up to date)
  * link[/var/opt/gitlab/grafana/public] action create (up to date)
  * directory[/opt/gitlab/etc/grafana/env] action create (up to date)
  * ruby_block[populate Grafana configuration options] action run
    - execute the ruby block populate Grafana configuration options
  * env_dir[/opt/gitlab/etc/grafana/env] action create
    * directory[/opt/gitlab/etc/grafana/env] action create (up to date)
    * file[/opt/gitlab/etc/grafana/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/grafana/grafana.ini] action create
    - update content in file /var/opt/gitlab/grafana/grafana.ini from b8444b to 549725
    --- /var/opt/gitlab/grafana/grafana.ini     2022-03-18 13:49:28.082295022 +0800
    +++ /var/opt/gitlab/grafana/.chef-grafana20220318-1478-1iko40z.ini  2022-03-18 14:24:54.845039450 +0800
    @@ -48,6 +48,9 @@
     # If you use reverse proxy and sub path specify full url (with sub path)
     root_url = http://IT-GitLab.gpmcorp.com.tw/-/grafana

    +# Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
    +serve_from_sub_path = true
    +
     # Log web requests
     ;router_logging = false

    @@ -133,8 +136,10 @@
     # No ip addresses are being tracked, only simple counters to track
     # running instances, dashboard and error counts. It is very helpful to us.
     # Change this option to false to disable reporting.
    -reporting_enabled = false
    +reporting_enabled = true

    +reporting_distributor = GitLab-Omnibus
    +
     # Set to false to disable all checks to https://grafana.net
     # for new vesions (grafana itself and plugins), check is used
     # in some UI views to notify that grafana or plugin update exists
    @@ -244,7 +249,7 @@
     allow_sign_up = true
     client_id = 6cbcee93a19ef762480f22e3ff849e66e3988ea156d5e097ddb55404e38115ec
     client_secret = 0b7b9254f77b7244372077466ad5cae5c0b8beeb5199721065ea62eb28025965
    -scopes = api
    +scopes = read_user
     auth_url = http://IT-GitLab.gpmcorp.com.tw/oauth/authorize
     token_url = http://IT-GitLab.gpmcorp.com.tw/oauth/token
     api_url = http://IT-GitLab.gpmcorp.com.tw/api/v4
    @@ -273,18 +278,17 @@

     #################################### SMTP / Emailing ##########################
     [smtp]
    -;enabled = false
    -;host = localhost:25
    -;user =
    -# If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""
    -;password =
    -;cert_file =
    -;key_file =
    -;skip_verify = false
    -;from_address = admin@grafana.localhost
    -;from_name = Grafana
    -# EHLO identity in SMTP dialog (defaults to instance_name)
    -;ehlo_identity = dashboard.example.com
    +enabled = false
    +host = localhost:25
    +user =
    +password =
    +cert_file =
    +key_file =
    +skip_verify = false
    +from_address = admin@grafana.localhost
    +from_name = Grafana
    +ehlo_identity = dashboard.example.com
    +startTLS_policy =

     [emails]
     ;welcome_email_on_sign_up = false
    @@ -397,5 +401,4 @@
     [enterprise]
     # Path to a valid Grafana Enterprise license.jwt file
     ;license_path =
    -
  * file[/var/opt/gitlab/grafana/provisioning/dashboards/gitlab_dashboards.yml] action create (up to date)
  * file[/var/opt/gitlab/grafana/provisioning/datasources/gitlab_datasources.yml] action create (up to date)
  * service[grafana] action nothing (skipped due to action :nothing)
  * runit_service[grafana] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/grafana] action create (up to date)
    * template[/opt/gitlab/sv/grafana/run] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/log] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/log/main] action create (up to date)
    * template[/opt/gitlab/sv/grafana/log/config] action create
      - create new file /opt/gitlab/sv/grafana/log/config
      - update content in file /opt/gitlab/sv/grafana/log/config from none to 623c00
      --- /opt/gitlab/sv/grafana/log/config     2022-03-18 14:24:55.129032083 +0800
      +++ /opt/gitlab/sv/grafana/log/.chef-config20220318-1478-1k3s47t  2022-03-18 14:24:55.121032290 +0800
      @@ -1,6 +1,12 @@
      +s209715200
      +n30
      +t86400
      +!gzip
      +
      +
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * ruby_block[verify_chown_persisted_on_grafana] action create
      - execute the ruby block verify_chown_persisted_on_grafana
    * ruby_block[verify_chown_persisted_on_grafana] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/grafana/config] action create
      - unlink existing symlink to file at /var/log/gitlab/grafana/config
      - create symlink at /var/log/gitlab/grafana/config to /opt/gitlab/sv/grafana/log/config
    * template[/opt/gitlab/sv/grafana/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for grafana service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/grafana/control] action create (up to date)
    * link[/opt/gitlab/init/grafana] action create (up to date)
    * file[/opt/gitlab/sv/grafana/down] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/grafana] action create (up to date)
      * template[/opt/gitlab/sv/grafana/run] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/log] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/log/main] action create (up to date)
      * template[/opt/gitlab/sv/grafana/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_grafana] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/grafana/config] action create (up to date)
      * template[/opt/gitlab/sv/grafana/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for grafana service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/grafana/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/grafana/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/grafana/control] action create (up to date)
      * link[/opt/gitlab/init/grafana] action create (up to date)
      * file[/opt/gitlab/sv/grafana/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/grafana] action create (up to date)
      * ruby_block[wait for grafana service socket] action run (skipped due to not_if)
      - execute the ruby block reload_log_service
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/grafana] action create (up to date)
    * ruby_block[wait for grafana service socket] action run (skipped due to not_if)

Recipe: gitlab::database_reindexing_disable
  * crond_job[database-reindexing] action delete
    * file[/var/opt/gitlab/crond/database-reindexing] action delete (up to date)
     (up to date)
Recipe: gitlab::puma
  * runit_service[puma] action restart (up to date)
  * runit_service[puma] action restart (up to date)
Recipe: gitlab::gitlab-rails
  * execute[clear the gitlab-rails cache] action run
    - execute /opt/gitlab/bin/gitlab-rake cache:clear
Recipe: gitaly::enable
  * runit_service[gitaly] action hup (up to date)
Recipe: gitlab::gitlab-workhorse
  * runit_service[gitlab-workhorse] action restart (up to date)
Recipe: nginx::enable
  * runit_service[nginx] action restart (up to date)
Recipe: monitoring::gitlab-exporter
  * runit_service[gitlab-exporter] action restart (up to date)
Recipe: monitoring::prometheus
  * execute[reload prometheus] action run (skipped due to only_if)
Recipe: monitoring::postgres-exporter
  * runit_service[postgres-exporter] action restart (up to date)
Recipe: monitoring::grafana
  * runit_service[grafana] action restart (up to date)

Running handlers:
Running handlers complete
Chef Infra Client finished, 176/1186 resources updated in 02 minutes 18 seconds

Deprecations:
Your OS, ubuntu-16.04, will be deprecated soon.
Starting with GitLab 14.0, packages will not be built for it.
Switch or upgrade to a supported OS, see https://docs.gitlab.com/omnibus/package-information/deprecated_os.html for more information.

Running reconfigure: OK
Waiting for Database to be running.
Database upgrade is complete, running vacuumdb analyze
Toggling deploy page:rm -f /opt/gitlab/embedded/service/gitlab-rails/public/index.html
Toggling deploy page: OK
Toggling services:ok: run: alertmanager: (pid 2329) 0s
ok: run: gitaly: (pid 2334) 0s
ok: run: gitlab-exporter: (pid 2263) 6s
ok: run: grafana: (pid 2278) 5s
ok: run: logrotate: (pid 2347) 0s
ok: run: node-exporter: (pid 2353) 0s
ok: run: postgres-exporter: (pid 2271) 7s
ok: run: prometheus: (pid 2358) 0s
ok: run: redis-exporter: (pid 2363) 0s
ok: run: sidekiq: (pid 2368) 0s
Toggling services: OK
==== Upgrade has completed ====
Please verify everything is working and run the following if so
sudo rm -rf /var/opt/gitlab/postgresql/data.11
sudo rm -f /var/opt/gitlab/postgresql-version.old

Checking if a newer PostgreSQL version is available and attempting automatic upgrade to it: OK
Shutting down all GitLab services except those needed for migrations
ok: down: alertmanager: 0s, normally up
ok: down: gitlab-exporter: 0s, normally up
ok: down: gitlab-workhorse: 0s, normally up
ok: down: grafana: 0s, normally up
ok: down: logrotate: 0s, normally up
ok: down: nginx: 0s, normally up
ok: down: node-exporter: 0s, normally up
ok: down: postgres-exporter: 0s, normally up
ok: down: prometheus: 0s, normally up
ok: down: puma: 1s, normally up
ok: down: redis-exporter: 0s, normally up
ok: down: sidekiq: 1s, normally up
Ensuring the required services are running
ok: run: postgresql: (pid 1469) 183s
ok: run: redis: (pid 1943) 166s
ok: run: gitaly: (pid 2334) 37s
run: postgresql: (pid 1469) 183s; run: log: (pid 1376) 186s
run: redis: (pid 1943) 166s; run: log: (pid 1950) 166s
run: gitaly: (pid 2334) 37s; run: log: (pid 1957) 165s
Ensuring Prometheus is updated:Already running Prometheus version 2.
Ensuring Prometheus is updated: OK
Reconfigure GitLab to apply migrations
Starting Chef Infra Client, version 15.14.0
resolving cookbooks for run list: ["gitlab"]
Synchronizing Cookbooks:
  - logrotate (0.1.0)
  - redis (0.1.0)
  - mattermost (0.1.0)
  - consul (0.1.0)
  - praefect (0.1.0)
  - gitlab-kas (0.1.0)
  - postgresql (0.1.0)
  - letsencrypt (0.1.0)
  - gitlab (0.0.1)
  - runit (5.1.3)
  - package (0.1.0)
  - crond (0.1.0)
  - monitoring (0.1.0)
  - acme (4.1.1)
  - gitlab-pages (0.1.0)
  - nginx (0.1.0)
  - registry (0.1.0)
  - gitaly (0.1.0)
Installing Cookbook Gems:
Compiling Cookbooks...
Recipe: gitlab::default
  * directory[/etc/gitlab] action create (up to date)
  Converging 277 resources
  * directory[/etc/gitlab] action create (up to date)
  * directory[Create /var/opt/gitlab] action create (up to date)
  * directory[Create /var/log/gitlab] action create (up to date)
  * directory[/opt/gitlab/embedded/etc] action create (up to date)
  * template[/opt/gitlab/embedded/etc/gitconfig] action create (up to date)
Recipe: gitlab::web-server
  * account[Webserver user and group] action create
    * group[Webserver user and group] action create (up to date)
    * linux_user[Webserver user and group] action create (up to date)
     (up to date)
Recipe: gitlab::users
  * directory[/var/opt/gitlab] action create (up to date)
  * account[GitLab user and group] action create
    * group[GitLab user and group] action create (up to date)
    * linux_user[GitLab user and group] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/.gitconfig] action create (up to date)
  * directory[/var/opt/gitlab/.bundle] action create (up to date)
Recipe: gitlab::gitlab-shell
  * storage_directory[/var/opt/gitlab/.ssh] action create
    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run (skipped due to not_if)
     (up to date)
  * directory[/var/log/gitlab/gitlab-shell/] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-shell] action create (up to date)
  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)
  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing (up to date)
Recipe: gitlab::gitlab-rails
  * storage_directory[/var/opt/gitlab/git-data] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/git-data/repositories] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::rails_pages_shared_path
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::gitlab-rails
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)
  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create (up to date)
  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/working] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create (up to date)
  * directory[create /var/log/gitlab/gitlab-rails] action create (up to date)
  * storage_directory[/home/it/gitlab_backup] action create
    * ruby_block[directory resource: /home/it/gitlab_backup] action run (skipped due to not_if)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-rails] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-ci] action create (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-rails/gitlab-rails-rc] action create (up to date)
  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)
  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)
  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)
  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)
  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)
     (up to date)
  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create
    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/LD_PRELOAD] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)
  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create/opt/gitlab/embedded/lib/ruby/gems/2.7.0/gems/chef-15.14.0/lib/chef/provider/remote_file/local_file.rb:43: warning: URI.unescape is obsolete
 (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create/opt/gitlab/embedded/lib/ruby/gems/2.7.0/gems/chef-15.14.0/lib/chef/provider/remote_file/local_file.rb:43: warning: URI.unescape is obsolete
 (up to date)
  * version_file[Create version file for Rails] action create
    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create (up to date)
     (up to date)
  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)
  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)
Recipe: gitlab::selinux
  * bash[Set proper security context on ssh files for selinux] action nothing (skipped due to action :nothing)
Recipe: gitlab::add_trusted_certs
  * directory[/etc/gitlab/trusted-certs] action create (up to date)
  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)
  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)
  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run (skipped due to only_if)
Recipe: gitlab::default
  * service[create a temporary unicorn service] action nothing (skipped due to action :nothing)
  * service[create a temporary puma service] action nothing (skipped due to action :nothing)
  * service[create a temporary actioncable service] action nothing (skipped due to action :nothing)
  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)
  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)
Recipe: package::runit_systemd
  * directory[/usr/lib/systemd/system] action create (up to date)
  * template[/usr/lib/systemd/system/gitlab-runsvdir.service] action create (up to date)
  * file[/etc/systemd/system/default.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * file[/etc/systemd/system/basic.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
  * execute[systemctl enable gitlab-runsvdir] action nothing (skipped due to action :nothing)
  * execute[systemctl start gitlab-runsvdir] action nothing (skipped due to action :nothing)
Recipe: package::sysctl
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: logrotate::folders_and_configs
  * directory[/var/opt/gitlab/logrotate] action create (up to date)
  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create (up to date)
  * directory[/var/log/gitlab/logrotate] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/actioncable] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/unicorn] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] action create (up to date)
Recipe: logrotate::enable
  * service[logrotate] action nothing (skipped due to action :nothing)
  * runit_service[logrotate] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/logrotate] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/logrotate/config] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
    * link[/opt/gitlab/init/logrotate] action create (up to date)
    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/logrotate] action create (up to date)
    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
     (up to date)
Recipe: redis::enable
  * redis_service[redis] action create
    * account[user and group for redis] action create
      * group[user and group for redis] action create (up to date)
      * linux_user[user and group for redis] action create (up to date)
       (up to date)
    * group[Socket group] action create (up to date)
    * directory[/var/opt/gitlab/redis] action create (up to date)
    * directory[/var/log/gitlab/redis] action create (up to date)
    * template[/var/opt/gitlab/redis/redis.conf] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis] action create (up to date)
      * template[/opt/gitlab/sv/redis/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis/config] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis/control] action create (up to date)
      * link[/opt/gitlab/init/redis] action create (up to date)
      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis] action create (up to date)
      * ruby_block[wait for redis service socket] action run (skipped due to not_if)
       (up to date)
    * ruby_block[warn pending redis restart] action run (skipped due to only_if)
     (up to date)
Recipe: redis::enable
  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)
Recipe: gitaly::enable
  * directory[/var/opt/gitlab/gitaly] action create (up to date)
  * directory[/var/log/gitlab/gitaly] action create (up to date)
  * directory[/var/opt/gitlab/gitaly/internal_sockets] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitaly/env] action create
    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)
     (up to date)
  * template[Create Gitaly config.toml] action create (up to date)
  * service[gitaly] action nothing (skipped due to action :nothing)
  * runit_service[gitaly] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitaly] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitaly/config] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
    * link[/opt/gitlab/init/gitaly] action create (up to date)
    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitaly] action create (up to date)
    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
     (up to date)
  * version_file[Create version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/VERSION] action create (up to date)
     (up to date)
  * version_file[Create Ruby version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/RUBY_VERSION] action create (up to date)
     (up to date)
  * consul_service[gitaly] action delete
    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)
     (up to date)
Recipe: postgresql::bin
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)
Recipe: postgresql::user
  * account[Postgresql user and group] action create
    * group[Postgresql user and group] action create (up to date)
    * linux_user[Postgresql user and group] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)
Recipe: postgresql::sysctl
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)
    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: postgresql::enable
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/log/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * link[/var/opt/gitlab/postgresql/data] action create (skipped due to not_if)
  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)
  * file[/var/opt/gitlab/postgresql/data/server.crt] action create (up to date)
  * file[/var/opt/gitlab/postgresql/data/server.key] action create (up to date)
  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create (up to date)
     (up to date)
Recipe: postgresql::standalone
  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
    * link[/opt/gitlab/init/postgresql] action create (up to date)
    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
     (up to date)
  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)
      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
     (up to date)
  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)
Recipe: praefect::disable
  * service[praefect] action nothing (skipped due to action :nothing)
  * runit_service[praefect] action disable
    * ruby_block[disable praefect] action run (skipped due to only_if)
     (up to date)
  * consul_service[praefect] action delete
    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab-kas::disable
  * service[gitlab-kas] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-kas] action disable
    * ruby_block[disable gitlab-kas] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::database_migrations
  * ruby_block[check remote PG version] action nothing (skipped due to action :nothing)
  * rails_migration[gitlab-rails] action run
    * bash[migrate gitlab-rails database] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::unicorn_disable
  * unicorn_service[unicorn] action disable
  Recipe: <Dynamically Defined Resource>
    * service[unicorn] action nothing (skipped due to action :nothing)
    * runit_service[unicorn] action disable
      * ruby_block[disable unicorn] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: gitlab::unicorn_disable
  * consul_service[rails] action delete (skipped due to not_if)
Recipe: gitlab::puma
  * directory[/var/log/gitlab/puma] action create (up to date)
  * directory[/opt/gitlab/var/puma] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create (up to date)
  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)
    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create (up to date)
     (up to date)
  * service[puma] action nothing (skipped due to action :nothing)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
     (up to date)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
     (up to date)
  * consul_service[rails] action delete
    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)
     (up to date)
  * gitlab_sysctl[net.core.somaxconn] action create
    * directory[create /etc/sysctl.d for net.core.somaxconn] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-net.core.somaxconn.conf net.core.somaxconn] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-net.core.somaxconn.conf] action create (up to date)
    * execute[load sysctl conf net.core.somaxconn] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: gitlab::sidekiq-cluster
  * sidekiq_service[sidekiq] action enable
    * directory[/var/log/gitlab/sidekiq] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[sidekiq] action nothing (skipped due to action :nothing)
    * runit_service[sidekiq] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/sidekiq/config] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
      * link[/opt/gitlab/init/sidekiq] action create (up to date)
      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/sidekiq] action create (up to date)
      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
       (up to date)
     (up to date)
Recipe: gitlab::sidekiq-cluster
  * consul_service[sidekiq] action delete
    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)
     (up to date)
  * service[sidekiq-cluster] action nothing (skipped due to action :nothing)
  * runit_service[sidekiq-cluster] action disable
    * ruby_block[disable sidekiq-cluster] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::gitlab-workhorse
  * directory[/var/opt/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-workhorse/sockets] action create (up to date)
  * directory[/var/log/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create
    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-workhorse] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
     (up to date)
  * consul_service[workhorse] action delete
    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)
     (up to date)
  * version_file[Create version file for Workhorse] action create
    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create (up to date)
Recipe: gitlab::mailroom_disable
  * service[mailroom] action nothing (skipped due to action :nothing)
  * runit_service[mailroom] action disable
    * ruby_block[disable mailroom] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::nginx
  * directory[/var/opt/gitlab/nginx] action create (up to date)
  * directory[/var/opt/gitlab/nginx/conf] action create (up to date)
  * directory[/var/log/gitlab/nginx] action create (up to date)
  * link[/var/opt/gitlab/nginx/logs] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create (up to date)
  * consul_service[nginx] action delete
    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create (up to date)
Recipe: nginx::enable
  * service[nginx] action nothing (skipped due to action :nothing)
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/nginx] action create (up to date)
    * template[/opt/gitlab/sv/nginx/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/nginx/config] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
    * link[/opt/gitlab/init/nginx] action create (up to date)
    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/nginx] action create (up to date)
    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
     (up to date)
  * execute[reload nginx] action nothing (skipped due to action :nothing)
Recipe: gitlab::remote-syslog_disable
  * service[remote-syslog] action nothing (skipped due to action :nothing)
  * runit_service[remote-syslog] action disable
    * ruby_block[disable remote-syslog] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::storage-check_disable
  * service[storage-check] action nothing (skipped due to action :nothing)
  * runit_service[storage-check] action disable
    * ruby_block[disable storage-check] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::actioncable_disable
  * service[actioncable] action nothing (skipped due to action :nothing)
  * runit_service[actioncable] action disable
    * ruby_block[disable actioncable] action run (skipped due to only_if)
     (up to date)
  * consul_service[actioncable] action delete
    * file[/var/opt/gitlab/consul/config.d/actioncable-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab-pages::disable
  * service[gitlab-pages] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-pages] action disable
    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)
     (up to date)
Recipe: registry::disable
  * service[registry] action nothing (skipped due to action :nothing)
  * runit_service[registry] action disable
    * ruby_block[disable registry] action run (skipped due to only_if)
     (up to date)
Recipe: mattermost::disable
  * service[mattermost] action nothing (skipped due to action :nothing)
  * runit_service[mattermost] action disable
    * ruby_block[disable mattermost] action run (skipped due to only_if)
     (up to date)
Recipe: letsencrypt::disable
  * crond_job[letsencrypt-renew] action delete
    * file[/var/opt/gitlab/crond/letsencrypt-renew] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-healthcheck
  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)
Recipe: monitoring::user
  * account[Prometheus user and group] action create
    * group[Prometheus user and group] action create (up to date)
    * linux_user[Prometheus user and group] action create (up to date)
     (up to date)
Recipe: monitoring::node-exporter
  * directory[/var/log/gitlab/node-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/node-exporter/env] action create
    * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/node-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/node-exporter/textfile_collector] action create (up to date)
  * service[node-exporter] action nothing (skipped due to action :nothing)
  * runit_service[node-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/node-exporter] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/node-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/node-exporter] action create (up to date)
    * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/node-exporter] action create (up to date)
    * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)
     (up to date)
  * consul_service[node-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::gitlab-exporter
  * directory[/var/opt/gitlab/gitlab-exporter] action create (up to date)
  * directory[/var/log/gitlab/gitlab-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-exporter/env] action create
    * directory[/opt/gitlab/etc/gitlab-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/LD_PRELOAD] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create (up to date)
  * version_file[Create version file for GitLab-Exporter] action create
    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create (up to date)
     (up to date)
  * service[gitlab-exporter] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
     (up to date)
Recipe: monitoring::redis-exporter
  * directory[/var/log/gitlab/redis-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create
    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[redis-exporter] action nothing (skipped due to action :nothing)
  * runit_service[redis-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/redis-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/redis-exporter] action create (up to date)
    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/redis-exporter] action create (up to date)
    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
     (up to date)
  * consul_service[redis-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::prometheus
  * directory[/var/opt/gitlab/prometheus] action create (up to date)
  * directory[/var/opt/gitlab/prometheus/rules] action create (up to date)
  * directory[/var/log/gitlab/prometheus] action create (up to date)
  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/prometheus/env] action create
    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * execute[reload prometheus] action nothing (skipped due to action :nothing)
  * file[Prometheus config] action create (up to date)
  * service[prometheus] action nothing (skipped due to action :nothing)
  * runit_service[prometheus] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/prometheus] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/prometheus/config] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
    * link[/opt/gitlab/init/prometheus] action create (up to date)
    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/prometheus] action create (up to date)
    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
     (up to date)
  * consul_service[prometheus] action delete
    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create (up to date)
  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create (up to date)
Recipe: monitoring::alertmanager
  * directory[/var/opt/gitlab/alertmanager] action create (up to date)
  * directory[/var/log/gitlab/alertmanager] action create (up to date)
  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/alertmanager/env] action create
    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * file[Alertmanager config] action create (up to date)
  * service[alertmanager] action nothing (skipped due to action :nothing)
  * runit_service[alertmanager] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/alertmanager/config] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
    * link[/opt/gitlab/init/alertmanager] action create (up to date)
    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/alertmanager] action create (up to date)
    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
     (up to date)
Recipe: monitoring::postgres-exporter
  * directory[/var/log/gitlab/postgres-exporter] action create (up to date)
  * directory[/var/opt/gitlab/postgres-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create
    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create (up to date)
     (up to date)
  * service[postgres-exporter] action nothing (skipped due to action :nothing)
  * runit_service[postgres-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
     (up to date)
  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create (up to date)
  * consul_service[postgres-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::grafana
  * directory[/var/log/gitlab/grafana] action create (up to date)
  * directory[/var/opt/gitlab/grafana] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/dashboards] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/datasources] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/notifiers] action create (up to date)
  * file[/var/opt/gitlab/grafana/CVE_reset_status] action delete (up to date)
  * link[/var/opt/gitlab/grafana/conf] action create (up to date)
  * link[/var/opt/gitlab/grafana/public] action create (up to date)
  * directory[/opt/gitlab/etc/grafana/env] action create (up to date)
  * ruby_block[populate Grafana configuration options] action run
    - execute the ruby block populate Grafana configuration options
  * env_dir[/opt/gitlab/etc/grafana/env] action create
    * directory[/opt/gitlab/etc/grafana/env] action create (up to date)
    * file[/opt/gitlab/etc/grafana/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/grafana/grafana.ini] action create (up to date)
  * file[/var/opt/gitlab/grafana/provisioning/dashboards/gitlab_dashboards.yml] action create (up to date)
  * file[/var/opt/gitlab/grafana/provisioning/datasources/gitlab_datasources.yml] action create (up to date)
  * service[grafana] action nothing (skipped due to action :nothing)
  * runit_service[grafana] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/grafana] action create (up to date)
    * template[/opt/gitlab/sv/grafana/run] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/log] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/log/main] action create (up to date)
    * template[/opt/gitlab/sv/grafana/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_grafana] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/grafana/config] action create (up to date)
    * template[/opt/gitlab/sv/grafana/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for grafana service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/grafana/control] action create (up to date)
    * link[/opt/gitlab/init/grafana] action create (up to date)
    * file[/opt/gitlab/sv/grafana/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/grafana] action create (up to date)
    * ruby_block[wait for grafana service socket] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::database_reindexing_disable
  * crond_job[database-reindexing] action delete
    * file[/var/opt/gitlab/crond/database-reindexing] action delete (up to date)
     (up to date)

Running handlers:
Running handlers complete
Chef Infra Client finished, 1/797 resources updated in 14 seconds

Deprecations:
Your OS, ubuntu-16.04, will be deprecated soon.
Starting with GitLab 14.0, packages will not be built for it.
Switch or upgrade to a supported OS, see https://docs.gitlab.com/omnibus/package-information/deprecated_os.html for more information.

gitlab Reconfigured!
Restarting previously running GitLab services
ok: run: alertmanager: (pid 2963) 0s
ok: run: gitaly: (pid 2334) 56s
ok: run: gitlab-exporter: (pid 2970) 0s
ok: run: gitlab-workhorse: (pid 2974) 0s
ok: run: grafana: (pid 2982) 0s
ok: run: logrotate: (pid 2987) 0s
ok: run: nginx: (pid 2994) 0s
ok: run: node-exporter: (pid 2996) 0s
ok: run: postgres-exporter: (pid 3000) 0s
ok: run: postgresql: (pid 1469) 202s
ok: run: prometheus: (pid 3007) 0s
ok: run: puma: (pid 3015) 0s
ok: run: redis: (pid 1943) 185s
ok: run: redis-exporter: (pid 3022) 0s
ok: run: sidekiq: (pid 3027) 0s

     _______ __  __          __
    / ____(_) /_/ /   ____ _/ /_
   / / __/ / __/ /   / __ `/ __ \
  / /_/ / / /_/ /___/ /_/ / /_/ /
  \____/_/\__/_____/\__,_/_.___/


Upgrade complete! If your GitLab server is misbehaving try running
  sudo gitlab-ctl restart
before anything else.
If you need to roll back to the previous version you can use the database
backup made during the upgrade (scroll up for the filename).

it@IT-Gitlab:~/gitlab_backup$

